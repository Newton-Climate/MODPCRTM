      SUBROUTINE FNAMES(NMFLRT,CLRT,SPFLUX,DBOUT,REFPTH)

!     THIS ROUTINE ASSIGNS FILE NAMES TO THE ABOVE CHARACTER VARIABLES.
      IMPLICIT NONE

!     PARAMETERS (INCLUDE 'CHANLS.h' FOR DECLARATION OF CHNOUT):
      INCLUDE 'PARAMS.h'
      INCLUDE 'CHANLS.h'

!     ARGUMENTS:
!       NMFLRT   CURRENT CASE NUMBER, SET TO -1 WHEN DONE.
!       REFPTH   NAME OF REFRACTIVE PATH INPUT FILE.
      CHARACTER CLRT*(*),SPFLUX*(*),DBOUT*(*),REFPTH*(*)
      INTEGER NMFLRT

!     COMMONS:
      INCLUDE 'IFIL.h'
      INCLUDE 'YPROP.h'

!     /JM1A1/
!       RESCHR   BAND MODEL RESOLUTION CHARACTER STRING.
!       DISSTR   CHARACTER STRING USED TO READ IN DISORT LOGICALS.
!       H2OSTR   VERTICAL WATER COLUMN CHARACTER STRING (IF THE
!                FIRST NON-BLANK CHARACTER IS A "G", THE WATER
!                COLUMN IN GM/CM2 FOLLOWS "G"; IF THE FIRST
!                NON-BLANK CHARACTER IS AN "A", THE WATER COLUMN
!                IN ATM-CM AT 273.15K FOLLOWS "A"; OTHERWISE THE
!                STRING CONTAINS A WATER COLUMN SCALING FACTOR).
!       O3STR    VERTICAL OZONE COLUMN CHARACTER STRING (IF THE
!                FIRST NON-BLANK CHARACTER IS A "G", THE OZONE
!                COLUMN IN GM/CM2 FOLLOWS "G"; IF THE FIRST
!                NON-BLANK CHARACTER IS AN "A", THE OZONE COLUMN
!                IN ATM-CM AT 273.15K FOLLOWS "A"; OTHERWISE THE
!                STRING CONTAINS AN OZONE COLUMN SCALING FACTOR).
!       USRSUN   USER-SPECIFIED TOP-OF-ATMOSPHERE SOLAR IRRADIANCE FILE.
!       BMROOT   PREFIX OF MOLECULAR BAND MODEL PARAMETERS FILE.
!       FILTNM   NAME OF FILTER RESPONSE FUNCTION FILE.
!       H2OAER   FLAG, TRUE IF DEFAULT AEROSOL PROPERTIES ARE REVISED
!                BASED ON WATER COLUMN SCALING.
!       DATDIR   NAME OF THE MODTRAN DATA DIRECTORY.
      CHARACTER RESCHR*2,DISSTR*3,H2OSTR*10,O3STR*10,USRSUN*(NAMLEN),   &
     &  FILTNM*(NAMLEN),BMROOT*(NAMLEN),H2OAER*1,DATDIR*(NAMLEN-LENSUN)
      COMMON/JM1A1/RESCHR,DISSTR,H2OSTR,O3STR,USRSUN,                   &
     &  FILTNM,BMROOT,H2OAER,DATDIR

!     /LSTART/
!       TOLABS   OUTPUT WARNING THRESHOLD FOR EXCESS ABSORPTION.
!       LLORMN   OUTPUT WARNING FLAG FOR SMALL LORENTZ HALF WIDTH.
!       LLORMX   OUTPUT WARNING FLAG FOR LARGE LORENTZ HALF WIDTH.
!       LDOPMN   OUTPUT WARNING FLAG FOR SMALL DOPPLER HALF WIDTH.
!       LDOPMX   OUTPUT WARNING FLAG FOR LARGE DOPPLER HALF WIDTH.
!       LLINMN   OUTPUT WARNING FLAG FOR SMALL EFFECTIVE LINE NUMBER.
!       LSSA     OUTPUT WARNING FLAG FOR SCATTERING ALBEDO NEAR 1.
!       LAEREX   OUTPUT WARNING FLAG FOR ROUTINE AEREXT.
!       LBMCRK   OUTPUT WARNING FLAG FOR ROUTINE BMCRKS.
!       LFLUXS   OUTPUT WARNING FLAG FOR ROUTINE FLUXES.
!       LSSRAD   OUTPUT WARNING FLAG FOR ROUTINE SSRAD.
!       LTRLAY   OUTPUT WARNING FLAG FOR ROUTINE TRLAY.
!       LNVERS   OUTPUT WARNING FLAG FOR ROUTINE DENFAC.
!       LGEOM    OUTPUT WARNING FLAG FOR INDEX OF REFRACTION GRADIENT.
!       LO3TRN   OUTPUT WARNING FLAG FOR OZONE CURTIS-GODSON PROBLEM.
      REAL TOLABS
      LOGICAL LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,                  &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      COMMON/LSTART/TOLABS,LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,     &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      SAVE /LSTART/

!     /M3DNAM/
!       M3DGEN   NAME OF GENERAL INFORMATION FILE FOR MOD3D.
!       M3DCNT   NAME OF CONTINUA DATA FILE FOR MOD3D.
!       M3DDAT   NAME OF MOLECULAR EXTINCTION FILE SORTED BY ATMOSPHERE.
!       M3DMOL   NAME OF MOLECULAR EXTINCTION DATA FILE FOR MOD3D.
      CHARACTER M3DGEN*(NAMLEN),M3DCNT*(NAMLEN),                        &
     &  M3DDAT*(NAMLEN),M3DMOL*(NAMLEN)
      COMMON/M3DNAM/M3DGEN,M3DCNT,M3DDAT,M3DMOL

!     /SUNFLG/
!       LNFLRT   LENGTH OF I/O FILE ROOT NAME, 0 IF NO mod5root.in FILE.
!       LRDSUN   SOLAR DATA FLAG, TRUE IF IRRADIANCES IN COMMON BLOCK
!                /SOL01/ HAVE BEEN MODIFIED FROM THE BLOCK DATA.
      INTEGER LNFLRT
      LOGICAL LRDSUN
      COMMON/SUNFLG/LNFLRT,LRDSUN

!     /SUNNAM/
!       SUNFIL   NAME OF DEFAULT FILE CONTAINING SOLAR IRRADIANCE DATA.
!       FLRT     ROOT NAME FOR ALL I/O FILES.
      CHARACTER FLRT*(NAMLEN-4),SUNFIL*(LENSUN)
      COMMON/SUNNAM/FLRT,SUNFIL

!     SAVED COMMONS:
      SAVE /SUNFLG/,/SUNNAM/

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     LOCAL VARIABLES:
!       IMOLY    Y-SPECIES INDEX.
!       IOS      STATUS OF READ STATEMENT.
!       ITP5     ".TP5" SUB-STRING LOCATION WITHIN A CHARACTER STRING.
!       LROOT    .TRUE. IF ROOT FILE, MODROOT.IN, EXISTS.
      INTEGER IMOLY,LENSTR,IOS,ITP5
      LOGICAL LROOT

!     DATA:
!       CFRMT    CHARACTER STRING INPUT FORMAT.
      CHARACTER CFRMT*9
      SAVE CFRMT
      DATA CFRMT/'((A    ))'/

!     INITIALIZE OUTPUT WARNING FLAGS:
      TOLABS=.0
      LLORMN=.TRUE.
      LLORMX=.TRUE.
      LDOPMN=.TRUE.
      LDOPMX=.TRUE.
      LLINMN=.TRUE.
      LSSA=.TRUE.
      LAEREX=.TRUE.
      LBMCRK=.TRUE.
      LFLUXS=.TRUE.
      LSSRAD=.TRUE.
      LTRLAY=.TRUE.
      LGEOM=.TRUE.
      LO3TRN=.TRUE.

!     INITIALIZE UNIT NUMBERS FOR AUXILIARY BAND MODEL SPECIES:
      NMOLY=0
      DO IMOLY=1,MYMOL
          ITBY(IMOLY,1)=0
          ITBY(IMOLY,2)=0
      ENDDO

!     FOR THE JMASS API OPTION, JUST OPEN 'tape6' FOR
!     WARNING MESSAGES AND RETURN.
      IF(LJMASS)THEN
          CALL OPNFL(IPR,0,'tape6','UNKNOWN','FORMATTED','FNAMES')
          M3DGEN='mod3d.g3d'
          M3DCNT='mod3d.c3d'
          M3DDAT='mod3d.d3d'
          M3DMOL='mod3d.m3d'
          NMFLRT=NMFLRT+1
          RETURN
      ENDIF

      IF(LNFLRT.EQ.-1)THEN

!         FIRST CALL TO FNAMES.
          DATDIR='DATA/'
          LNFLRT=0
          INQUIRE(FILE='mod5root.in',EXIST=LROOT)
          IF(LROOT)THEN
              CALL OPNFL(IROOT,0,'mod5root.in','OLD','FORMATTED',       &
     &          'FNAMES')
          ELSE
              INQUIRE(FILE='MOD5ROOT.IN',EXIST=LROOT)
              IF(LROOT)CALL OPNFL(IROOT,0,'MOD5ROOT.IN','OLD',          &
     &          'FORMATTED','FNAMES')
          ENDIF

          IF(LROOT)THEN

!             MOD5ROOT.IN or mod5root.in EXISTS, FIND FIRST ROOT NAME.
              WRITE(CFRMT(4:7),'(I4.4)')LEN(FLRT)
              READ(IROOT,CFRMT,IOSTAT=IOS)FLRT
              IF(IOS.EQ.0)THEN
                  LNFLRT=LENSTR(FLRT)
                  ITP5=MAX(INDEX(FLRT,'.tp5'),INDEX(FLRT,'.TP5'))
                  IF(ITP5.GT.1)THEN

!                     PARSE FILE ROOT AND DATA DIRECTORY NAMES:
                      IF(ITP5+3.LT.LNFLRT)DATDIR=FLRT(ITP5+4:LNFLRT)
                      LNFLRT=ITP5-1
                      ITP5=LENSTR(DATDIR)
                  ENDIF
              ENDIF
          ENDIF
      ELSE

!         READ ALREADY OPENED ROOT NAME FILE TO FIND NEXT ROOT NAME.
          READ(IROOT,CFRMT,IOSTAT=IOS)FLRT
          IF(IOS.NE.0)THEN
             NMFLRT=-1
             CLOSE(IROOT,STATUS='KEEP')
             RETURN
          ENDIF
          LNFLRT=LENSTR(FLRT)
          IF(LNFLRT.LE.0)THEN
             NMFLRT=-1
             CLOSE(IROOT,STATUS='KEEP')
             RETURN
          ENDIF

!         TRUNCATE ".TP5" IF PRESENT IN FLRT:
          ITP5=MAX(INDEX(FLRT,'.tp5'),INDEX(FLRT,'.TP5'))
          IF(ITP5.GT.1)LNFLRT=ITP5-1
      ENDIF

      NMFLRT=NMFLRT+1
      IF(LNFLRT.LE.0)THEN
          CALL OPNFL(IPR,0,'tape6','UNKNOWN','FORMATTED','FNAMES')
          CALL OPNFL(IRD,0,'tape5','OLD','FORMATTED','FNAMES')
          CALL OPNFL(IPU,0,'tape7','UNKNOWN','FORMATTED','FNAMES')
          CLRT='clrates'
          SPFLUX='specflux'
          CHNOUT='channels.out'
          LENCHN=12
          M3DGEN='mod3d.g3d'
          M3DCNT='mod3d.c3d'
          M3DDAT='mod3d.d3d'
          M3DMOL='mod3d.m3d'
          REFPTH='rfracpth.dat'
      ELSE
          CALL OPNFL(IPR,0,FLRT(1:LNFLRT)//'.tp6','UNKNOWN',            &
     &      'FORMATTED','FNAMES')
          CALL OPNFL(IRD,0,FLRT(1:LNFLRT)//'.tp5','OLD','FORMATTED',    &
     &      'FNAMES')
          CALL OPNFL(IPU,0,FLRT(1:LNFLRT)//'.tp7','UNKNOWN',            &
     &      'FORMATTED','FNAMES')
!SSI      CALL OPNFL(IDBIN,0,                                           &
!SSI &      FLRT(1:LNFLRT)//'.dbi','UNKNOWN','FORMATTED','FNAMES')
          DBOUT=FLRT(1:LNFLRT)//'.dbo'
          CLRT=FLRT(1:LNFLRT)//'.clr'
          SPFLUX=FLRT(1:LNFLRT)//'.flx'
          CHNOUT=FLRT(1:LNFLRT)//'.chn'
          LENCHN=LNFLRT+4
          M3DGEN=FLRT(1:LNFLRT)//'.g3d'
          M3DCNT=FLRT(1:LNFLRT)//'.c3d'
          M3DDAT=FLRT(1:LNFLRT)//'.d3d'
          M3DMOL=FLRT(1:LNFLRT)//'.m3d'
          REFPTH=FLRT(1:LNFLRT)//'.pth'
      ENDIF
      RETURN
      END

      SUBROUTINE FNAMBN(PLTOUT,LNFLRT,FLRT)

!     ROUTINE TO OPEN BINARY FILES:
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     ARGUMENTS:
      INTEGER LNFLRT
      CHARACTER PLTOUT*(*),FLRT*(NAMLEN-4)

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /BINBUF/
      REAL RBUF(2046)
      INTEGER IC,KCHAR
      COMMON/BINBUF/RBUF,IC,KCHAR

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     LOCAL VARIABLES:
      LOGICAL LOPEN

!     VERSION FOR THE BINARY OUTPUT VERIFICATION:
      CHARACTER VERS*8
      DATA VERS/'M5V3.005'/

!     INITIALIZE RBUF POINTER FOR PUTSNG, PUTDBL, PUTCHR, AND PUTINT:
      IC=1
      KCHAR=1

!     FOR THE JMASS API OPTION, JUST RETURN
      IF(LJMASS)RETURN

!     PLT FILE IS EITHER BINARY OR ASCII; AN ASCII TP7 IS ALWAYS
!     REQUIRED (OPENED IN FNAMES) FOR HEADER INFORMATION.
      IF(LNFLRT.GT.0)THEN

!         ROOT NAME PROVIDED:
          IF(BINOUT)THEN

!             BINARY FILES:
              PLTOUT=FLRT(1:LNFLRT)//'b.plt'
              INQUIRE(JPU,OPENED=LOPEN)
              IF(.NOT.LOPEN)THEN
                  CALL OPNFL(JPU,0,FLRT(1:LNFLRT)//'b.tp7','UNKNOWN',   &
     &              'UNFORMATTED','FNAMBN')
                  WRITE(JPU)VERS
              ENDIF
          ELSE
              PLTOUT=FLRT(1:LNFLRT)//'.plt'
          ENDIF

!     NO ROOT NAME:
      ELSEIF(BINOUT)THEN

!         BINARY FILES:
          PLTOUT='pltoutb'
          INQUIRE(JPU,OPENED=LOPEN)
          IF(.NOT.LOPEN)THEN
              CALL OPNFL(JPU,0,'tape7b','UNKNOWN','UNFORMATTED',        &
     &          'FNAMBN')
              WRITE(JPU)VERS
          ENDIF
      ELSE
          PLTOUT='pltout'
      ENDIF
      RETURN
      END
