      SUBROUTINE FLXADD(ML,IEMSCT,SALB,AADREF)

!     CALCULATES UPWARD (UPF) AND DOWNWARD (DNF) FLUX PROFILES USING
!     ADDING METHOD.  LAYER SOURCE FUNCTIONS CALCULATED FROM STREAM
!     APPROXIMATION [FOR THERMAL SEE ISAACS ET AL, AFGL-TR-86-0073
!     AND FOR SOLAR SEE MEADOR AND WEAVER, J ATMOS SCI V37, P630].
!     ***  A.E.R. 1986;  S.S.I. 1995.  ***
      IMPLICIT NONE

!     PARAMETERS:
!       RT3   SQUARE ROOT OF 3.
      REAL RT3
      PARAMETER(RT3=1.7320508)
      INCLUDE 'PARAMS.h'

!     INPUTS:
!       ML       NUMBER OF ATMOSPHERIC LAYER BOUNDARIES.
!       IEMSCT   FLAG = 1 FOR THERMAL SCATTER ONLY.
!                     = 2 FOR THERMAL AND SOLAR SCATTER.
!       SALB     SURFACE SCATTERING ALBEDO.
!       AADREF   DIRECTIONAL REFLECTIVITY AT SOLAR ZENITH ANGLE.
      INTEGER ML,IEMSCT
      REAL SALB,AADREF

!     COMMONS:

!     /AABBCC/
      INTEGER IBND
      REAL AA,BB,CC,QA,CPS
      COMMON/AABBCC/AA(11),BB(11),CC(11),IBND(11),QA(11),CPS(11)
      INCLUDE 'SEGDAT.h'

!     /MSRD/
!       CSSCAT   COSINE OF THE SCATTERING ANGLE.
!                (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       SLEGEN   Nth LEGENDRE POLYNOMIAL EVALUATED AT THE COSINE OF THE
!                SCATTERING ANGLE TIMES (2N+1)/4pi (N=0 TO NSTR-1).
!       CSZEN0   LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.
!       CSZEN    LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.
!       CSZENX   AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING
!                (AWAY FROM EARTH) THE CURRENT LAYER.
!       BBGRND   THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].
!       BBNDRY   LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1].
!       TCONT    LAYER CONTINUUM OPTICAL DEPTH.
!       TAUT     LAYER TOTAL VERTICAL EXTINCTION OPTICAL DEPTH.
!       GTSCAT   SUM OVER SCATTERING SOURCES OF SCATTERING OPTICAL DEPTH
!                AND PHASE FUNCTION LEGENDRE COEFFICIENT PRODUCTS.
!       COSBAR   LAYER EFFECTIVE SCATTERING ASYMMETRY FACTOR.
!       DEPRAT   FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.
!       S0DEP    OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.
!       S0TRN    TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]
!       UPF      LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].
!       DNF      LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].
!       UPFS     LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].
!       DNFS     LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].
!       CO_LIN   TRUE IF LOS AND SOLAR PATHS ARE NEARLY IDENTICAL.
      REAL CSSCAT,SLEGEN,CSZEN0,CSZEN,CSZENX,TCONT,TAUT,GTSCAT,COSBAR,  &
     &  BBGRND,BBNDRY,S0DEP,S0TRN,DEPRAT,UPF,DNF,UPFS,DNFS
      LOGICAL CO_LIN
      COMMON/MSRD/CSSCAT(MLOS),SLEGEN(0:MAZ,MLOS),CSZEN0(LAYDIM),       &
     &  CSZEN(LAYDIM),CSZENX(LAYDIM),TCONT(LAYDIM),TAUT(MXKSUB,LAYDIM), &
     &  GTSCAT(0:MXCMU,1:LAYDIM),COSBAR(LAYDIM),BBGRND,BBNDRY(LAYDIM),  &
     &  S0DEP(MXKSUB,LAYTWO),S0TRN(MXKSUB,LAYTWO),DEPRAT(MXKSUB,LAYDIM),&
     &  UPF(MXKSUB,LAYDIM),DNF(MXKSUB,LAYDIM),UPFS(MXKSUB,LAYDIM),      &
     &  DNFS(MXKSUB,LAYDIM),CO_LIN(MLOS)

!     /FLUX/
      REAL EDN,EUP,EUPC,TDF,RUPC,REF,EDNS,EUPS,EUPCS,TDFS,RUPCS,REFS
      COMMON/FLUX/EDN(LAYDIM),EUP(LAYDIM),EUPC(LAYDIM),TDF(LAYDIM),     &
     &  RUPC(LAYDIM),REF(LAYDIM),EDNS(LAYDIM),EUPS(LAYDIM),             &
     &  EUPCS(LAYDIM),TDFS(LAYDIM),RUPCS(LAYDIM),REFS(LAYDIM)

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     INTERNAL VARIABLES:
!       TAUM(K,N) MOLECULAR OPTICAL THICKNESS OF LAYER N FOR K
!       EUP(N)    INTRINSIC UPWARD THERMAL FLUX OF LAYER N
!       EDN(N)    INTRINSIC DOWNWARD THERMAL FLUX OF LAYER N
!       TDF(N)    INTRINSIC THERMAL TRANSMISSION OF LAYER N
!       REF(N)    INTRINSIC THERMAL REFLECTANCE OF LAYER N
!       EUPS(N)   INTRINSIC UPWARD SOLAR FLUX OF LAYER N
!       EDNS(N)   INTRINSIC DOWNWARD SOLAR FLUX OF LAYER N
!       TDFS(N)   INTRINSIC SOLAR TRANSMISSION OF LAYER N
!       REFS(N)   INTRINSIC SOLAR REFLECTANCE OF LAYER N

!     LOCAL VARIABLES:
      INTEGER NLAYRS,IKP1,N,NM1,IK,MOL,K,IB
      REAL RDNCN,RUPCN,EUPCN,RDNCNS,RUPCNS,EUPCNS,TAU,A1ME0,A2C,        &
     &  EDNCN,EDNCNS,AC,DENOM,COEF,A2C2,C,HALFE1,E0,EXPAN,              &
     &  ONEME0,E1,COEF1,COEF2,ACM1,ONEPE0,ONEME1,E2,EX,SOURC,TWGP,SMDPJ

!     LOCAL ARRAYS:
      REAL TAUM(3,LAYDIM),DPJ(3,LAYDIM),GKWJ(3,11),DPWJ(3,11)

!     NUMBER OF LAYERS:
      NLAYRS=ML-1

!     11 MOLECULES BY JOSEPH H PIERLUISSI
!       DPWJ   PROBABILITY FOR EACH MOLECULE FIT DOUBLE EXPONENTIAL.
!       GKWJ   BAND DEPENDENT SCALING OF DENSITIES TO GET K AMOUNT.
!       CPS    THE STORED VALUES OF PIERLUISSI BAND MODEL COEFFICIENTS.
!       IBND   MAPPING FROM MOLECULE NUMBER TO BAND NUMBER.
      DO MOL=1,11
          IF(IBND(MOL).GT.0)THEN
              GKWJ(1,MOL)=CC(MOL)*10.**CPS(MOL)
              GKWJ(2,MOL)=.09*GKWJ(1,MOL)
              GKWJ(3,MOL)=.015*GKWJ(1,MOL)
              DPWJ(1,MOL)=AA(MOL)
              DPWJ(2,MOL)=BB(MOL)
              DPWJ(3,MOL)=1.-AA(MOL)-BB(MOL)
          ENDIF
      ENDDO

!     TAUM IS DEFINED AS THE SUM OF THE OPTICAL DEPTHS BY MOLECULE
      IK=ML
      DO N=1,NLAYRS
          IK=IK-1
          TAUT(1,N)=TCONT(N)
          UPF(1,N)=0.
          DNF(1,N)=0.
          UPFS(1,N)=0.
          DNFS(1,N)=0.
          SMDPJ=0.
          DO K=1,3
              TAUM(K,N)=0.
              TWGP=0.
              DO MOL=1,11
                  IB=IBND(MOL)
                  IF(IB.GT.0)THEN
                      TAU=WPTHMS(IB,IK)*GKWJ(K,MOL)
                      TAUM(K,N)=TAUM(K,N)+TAU
                      TWGP=TWGP+TAU*DPWJ(K,MOL)
                  ENDIF
              ENDDO

!             EFFECTIVE PROBABILITY BY LAYER DPJ IS BASED ON
!             MOLECULAR PROBABILITY WEIGHTED BY OPTICAL DEPTH.
              DPJ(K,N)=.33333333
              IF(TAUM(K,N).NE.0.)DPJ(K,N)=TWGP/TAUM(K,N)
              SMDPJ=SMDPJ+DPJ(K,N)
          ENDDO
          DPJ(1,N)=DPJ(1,N)/SMDPJ
          DPJ(2,N)=DPJ(2,N)/SMDPJ
          DPJ(3,N)=DPJ(3,N)/SMDPJ
      ENDDO
      UPF(1,ML)=0.
      DNF(1,ML)=0.
      UPFS(1,ML)=0.
      DNFS(1,ML)=0.

!     PROBABILITY INTEGRATION LOOP
      DO K=1,3

!         SURFACE DIFFUSE REFLECTANCE (ALBEDO) AND THERMAL EMISSION:
          RUPCN=SALB
          EUPCN=(1.-RUPCN)*BBGRND
          EUPC(ML)=EUPCN
          IF(IEMSCT.EQ.2)THEN

!             SURFACE DIFFUSE REFLECTANCE AND REFLECTED DIRECT SOLAR:
              RUPCNS=SALB
              EUPCNS=AADREF*CSZEN0(1)*S0TRN(1,1)
              EUPCS(ML)=EUPCNS
          ENDIF

!         UPWARD ADDING LOOP STARTS FROM BOTTOM OF ATMOSPHERE:
          IKP1=1
          DO N=NLAYRS,1,-1

!             LAYER INDICES IN OPPOSITE DIRECTION IN ROUTINE LOOP:
              IK=IKP1
              IKP1=IKP1+1

!             STORE MOLECULAR OPTICAL THICKNESS FOR CALCULATION
!             OF SCATTERING ALBEDO IN ROUTINE LOOP.
              TAUT(1,IK)=TAUT(1,IK)+TAUM(K,N)*DPJ(K,N)

!             TAU IS THE LAYER OPTICAL THICKNESS
              TAU=TAUM(K,N)+TCONT(IK)

!             USE TWO STREAM APPROXIMATION FOR THERMAL:
!               EUP AND EDN ARE UPWARD AND DOWNWARD THERMAL FLUX
!               FOR AN ISOLATED LAYER.  TDF AND REF ARE THE THERMAL
!               TRANSMISSION AND REFLECTANCE FOR AN ISOLATED LAYER
              C=RT3*(TAU-GTSCAT(0,IK)*COSBAR(IK))
              A2C=RT3*(TAU-GTSCAT(0,IK))
              A2C2=A2C*C
              AC=SQRT(A2C2)
              IF(AC.GT.20.)THEN
                  DENOM=C+AC
                  REF(N)=(C-AC)/DENOM
                  DENOM=DENOM/2
                  TDF(N)=0.
                  IF(AC.LT.35.)TDF(N)=C*AC*EXP(-AC)/DENOM**2
                  ACM1=AC-1.
                  EDN(N)=(BBNDRY(IKP1)+ACM1*BBNDRY(IK))/DENOM
                  EUP(N)=(BBNDRY(IK)+ACM1*BBNDRY(IKP1))/DENOM
              ELSE
                  IF(AC.LT..08)THEN
                      EXPAN=1.-AC*(3.-AC)/6.
                      ONEME0=AC*EXPAN
                      A1ME0=A2C*EXPAN
                      E0=1.-ONEME0
                      ONEPE0=2.-ONEME0
                      ONEME1=AC*(.5-AC*(4.-AC)/24.)
                      E1=1.-ONEME1
                      E2=A2C2*(1.-AC+.55*A2C2)/3.
                  ELSE
                      E0=EXP(-AC)
                      ONEME0=1.-E0
                      ONEPE0=1.+E0
                      E1=ONEME0/AC
                      A1ME0=A2C*E1
                      ONEME1=1.-E1
                      E2=ONEME0-ONEPE0*ONEME1
                  ENDIF
                  HALFE1=E1/2
                  DENOM=(1.+(C-AC)*HALFE1)*(ONEPE0+A1ME0)
                  TDF(N)=2*E0/DENOM
                  REF(N)=(C-A2C)*HALFE1*ONEPE0/DENOM
                  COEF1=A1ME0*E1+E2
                  COEF2=A1ME0*(ONEME1+E0)+ONEME0**2-E2
                  EDN(N)=(COEF1*BBNDRY(IKP1)+COEF2*BBNDRY(IK))/DENOM
                  EUP(N)=(COEF1*BBNDRY(IK)+COEF2*BBNDRY(IKP1))/DENOM
              ENDIF

!             CALCULATE COMPOSITE FLUXES AND REFLECTANCES:
              COEF=TDF(N)/(1.-RUPCN*REF(N))
              EUPCN=EUP(N)+COEF*(EUPCN+EDN(N)*RUPCN)
              RUPCN=REF(N)+COEF*TDF(N)*RUPCN
              EUPC(N)=EUPCN
              RUPC(N)=RUPCN
              IF(IEMSCT.EQ.2)THEN

!                 CALCULATE VARIABLES FOR SOLAR HYBRID MODIFIED
!                 DELTA EDDINGTON 2-STREAM APPROXIMATION:
                  CALL TRLAY(TAU,GTSCAT(0,IK),COSBAR(IK),CSZEN(IK),     &
     &              S0DEP(1,IK),DEPRAT(1,IK),EX,TDFS(N),REFS(N))
                  SOURC=CSZENX(IK)*S0TRN(1,IKP1)
                  EDNS(N)=SOURC*TDFS(N)
                  EUPS(N)=SOURC*REFS(N)
                  TDFS(N)=EX+TDFS(N)
                  COEF=TDFS(N)/(1.-RUPCNS*REFS(N))
                  EUPCNS=EUPS(N)+COEF*(EUPCNS+EDNS(N)*RUPCNS)
                  RUPCNS=REFS(N)+COEF*TDFS(N)*RUPCNS
                  EUPCS(N)=EUPCNS
                  RUPCS(N)=RUPCNS
              ENDIF
          ENDDO

!         NOW ADD DOWNWARD FROM TOP LAYER (N=1):
          EDNCN=0.
          IK=ML
          DPJ(K,ML)=DPJ(K,NLAYRS)
          UPF(1,ML)=UPF(1,ML)+DPJ(K,ML)*EUPC(1)
          RDNCN=0.
          IF(IEMSCT.EQ.2)THEN
              EDNCNS=0.
              DNFS(K,1)=0.
              UPFS(K,1)=EUPCS(1)
              RDNCNS=0.
          ENDIF
          NM1=1
          DO N=2,NLAYRS
              IK=IK-1
              DENOM=1.-RDNCN*REF(NM1)
              COEF=TDF(NM1)/DENOM
              EDNCN=EDN(NM1)+COEF*(EDNCN+EUP(NM1)*RDNCN)
              RDNCN=REF(NM1)+COEF*TDF(NM1)*RDNCN
              COEF=DPJ(K,N)/DENOM
              DNF(1,IK)=DNF(1,IK)+COEF*(EDNCN+EUPC(N)*RDNCN)
              UPF(1,IK)=UPF(1,IK)+COEF*(EUPC(N)+EDNCN*RUPC(N))
              IF(IEMSCT.EQ.2)THEN
                  DENOM=1.-RDNCNS*REFS(NM1)
                  COEF=TDFS(NM1)/DENOM
                  EDNCNS=EDNS(NM1)+COEF*(EDNCNS+EUPS(NM1)*RDNCNS)
                  RDNCNS=REFS(NM1)+COEF*TDFS(NM1)*RDNCNS
                  COEF=DPJ(K,N)/DENOM
                  DNFS(1,IK)=DNFS(1,IK)+COEF*(EDNCNS+EUPCS(N)*RDNCNS)
                  UPFS(1,IK)=UPFS(1,IK)+COEF*(EUPCS(N)+EDNCNS*RUPCS(N))
              ENDIF
              NM1=N
          ENDDO

!         SURFACE (IK=1, N=ML, NM1=NLAYRS):
          DENOM=1.-RDNCN*REF(NLAYRS)
          COEF=TDF(NLAYRS)/DENOM
          EDNCN=EDN(NLAYRS)+COEF*(EDNCN+EUP(NLAYRS)*RDNCN)
          RDNCN=REF(NLAYRS)+COEF*TDF(NLAYRS)*RDNCN
          COEF=DPJ(K,ML)/DENOM
          DNF(1,1)=DNF(1,1)+COEF*(EDNCN+EUPC(ML)*RDNCN)
          IF(IEMSCT.EQ.2)THEN
              DENOM=1.-RDNCNS*REFS(NLAYRS)
              COEF=TDFS(NLAYRS)/DENOM
              EDNCNS=EDNS(NLAYRS)+COEF*(EDNCNS+EUPS(NLAYRS)*RDNCNS)
              RDNCNS=REFS(NLAYRS)+COEF*TDFS(NLAYRS)*RDNCNS
              COEF=DPJ(K,ML)/DENOM
              DNFS(1,1)=DNFS(1,1)+COEF*(EDNCNS+EUPCS(ML)*RDNCNS)
          ENDIF
      ENDDO
      UPF(1,1)=EUPC(ML)+SALB*DNF(1,1)
      IF(IEMSCT.EQ.2)UPFS(1,1)=EUPCS(ML)+SALB*DNFS(1,1)
      RETURN
      END
