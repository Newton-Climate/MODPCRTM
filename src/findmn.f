      SUBROUTINE FINDMN(REARTH,H1ALT,OBSZEN,H2ALT,                      &
     &  LENN,ITER,HMIN,BCKZEN,IERROR,LWARN)

!     FINDMN CALCULATES THE MINIMUM ALTITUDE HMIN ALONG THE REFRACTED
!     PATH AND THE FINAL ZENITH ANGLE BCKZEN.  THE PARAMETER LENN
!     INDICATES WHETHER THE PATH GOES THROUGH A TANGENT HEIGHT (LENN=1)
!     OR NOT (LENN=0).  IF OBSZEN > 90 AND H1ALT > H2ALT, THEN LENN
!     CAN EITHER BE 1 OR 0, AND THE CHOICE IS LEFT TO THE USER.
!     THE REFRACTIVITY (INDEX OF REFRACTION - 1) IS MODELED TO VARY
!     EXPONENTIALLY BETWEEN ALTITUDE LEVELS, WITH A RECIPROCAL SCALE
!     HEIGHT OF RSCLHT AND A GROUND VALUE OF GAMMA0.  CPATH, THE PATH
!     REFRACTIVE CONSTANT EQUALS INDEX(H1ALT)*(RE+H1ALT)*SIN(OBSZEN).
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       REARTH   RADIUS OF THE EARTH [KM].
      DOUBLE PRECISION REARTH,H1ALT,OBSZEN,H2ALT
      INTEGER LENN,ITER
      LOGICAL LWARN

!     OUTPUT ARGUMENTS:
      DOUBLE PRECISION HMIN,BCKZEN
      INTEGER IERROR

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /GRND/
!       GNDALT   GROUND ALTITUDE, ABOVE SEA LEVEL [KM].
      DOUBLE PRECISION GNDALT
      COMMON/GRND/GNDALT

!     /CARD1/
!       MODEL    MODEL ATMOSPHERE INDEX.
!       ITYPE    SLANT PATH TYPE.
!       IEMSCT   RADIATIVE TRANSFER MODE.
!                  0 FOR TRANSMITTANCE
!                  1 FOR THERMAL EMISSION ONLY
!                  2 FOR THERMAL EMISSION PLUS SOLAR SCATTER
!                  3 FOR TRANSMITTED SOLAR IRRADIANCE
!                  4 FOR SOLAR SCATTER ONLY
!       M1       MODEL ATMOSPHERE FOR PRESSURE & TEMPERATURE PROFILES.
!       M2       MODEL ATMOSPHERE FOR H2O PROFILE.
!       M3       MODEL ATMOSPHERE FOR O3 PROFILE.
!       I_RD2C   READ CARD 2C, 2C1, ... IF EQUAL 1; SKIP IF EQUAL TO 0.
!       NOPRNT   PRINT FLAG.
!       MODTRN   MODTRAN BAND MODEL FLAG.
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,I_RD2C,NOPRNT
      LOGICAL MODTRN
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,I_RD2C,NOPRNT,MODTRN

!     /PATH/
!       PTHCOS   COSINE OF PATH ZENITH AT PATH BOUNDARIES.
!       PTHZEN   PATH ZENITH AT PATH BOUNDARIES [DEG].
!       PTHECA   SENSOR TO PATH EARTH CENTER ANGLE [DEG].
!       PTHALT   ALTITUDES AT PATH BOUNDARIES [KM].
!       PTH_MS   ALTITUDES AT PATH BOUNDARIES FOR THE MS PATH.
!       PTHSEG   PATH SEGMENT LENGTH [KM].
!       PTHRNG   SENSOR TO PATH BOUNDARY RANGE [KM].
!       JMAX     NUMBER OF DISTINCT LOS PATH SEGMENT ENDPOINT ALTITUDES.
!       IKHMIN   PATH BOUNDARY INDEX OF PATH MINIMUM ALTITUDE.
!       IKHMAX   PATH BOUNDARY INDEX OF PATH MAXIMUM ALTITUDE.
!       IKOUT    NUMBER OF PATH BOUNDARIES K DATA IS OUTPUT.
!       NTKDIS   RECORD NUMBER FOR K-DISTRIBUTION TRANSMITTANCE FILE.
!       NRKDIS   RECORD NUMBER FOR K-DISTRIBUTION RADIANCE FILE.
!       MAPPTH   MAPPING FROM PATH SEGMENT MIDPOINT TO VERTICAL LAYER.
!       IPTHHT   ALTITUDES (HEIGHTS) AT PATH BOUNDARIES [M].
!       LOWALT   VERTICAL LAYER BOUNDARY INDEX AT OR JUST BELOW PTHALT.
!       FACALT   ALTITUDE INTERPOLATION FRACTION FOR PTHALT
!       PATH_T   TEMPERATURE AT PATH BOUNDARIES [K].
!       PATH_P   PRESSURE AT PATH BOUNDARIES [ATM].
!       PTHRH    RELATIVE HUMIDITY AT PATH BOUNDARIES [K].
!       LSSGEO   LOGICAL FLAG, .TRUE. FOR SOLAR PATHS.
!       LTANMX   LOGICAL FLAG, .TRUE. IF PATH HAS A TANGENT MAXIMUM.
      DOUBLE PRECISION PTHCOS,PTHZEN,PTHECA,PTHALT,PTH_MS,PTHSEG,PTHRNG
      INTEGER JMAX,IKHMIN,IKHMAX,IKOUT,NTKDIS,NRKDIS,MAPPTH,            &
     &  IPTHHT,LOWALT
      REAL FACALT,PATH_T,PATH_P,PTHRH
      LOGICAL LSSGEO,LTANMX
      COMMON/PATH/PTHCOS(0:LAYTWO),PTHZEN(0:LAYTWO),PTHECA(0:LAYTWO),   &
     &  PTHALT(0:LAYTWO,1:MLOS),PTH_MS(0:LAYDIM),PTHSEG(LAYTWO),        &
     &  PTHRNG(0:LAYTWO,1:MLOS),JMAX,IKHMIN(MLOS),IKHMAX(MLOS),         &
     &  IKOUT(MLOS),MAPPTH(LAYTWO,1:MLOS),IPTHHT(0:LAYTWO),NTKDIS,      &
     &  NRKDIS,LOWALT(0:LAYTWO,1:MLOS),FACALT(0:LAYTWO,1:MLOS),         &
     &  PATH_T(0:LAYTWO,1:MLOS),PATH_P(0:LAYTWO,1:MLOS),                &
     &  PTHRH(0:LAYTWO,1:MLOS),LSSGEO,LTANMX

!     /DCNSTN/
!       DRIGHT   SMALLEST DOUBLE PRECISION REAL ADDED TO 1 EXCEEDS 1.
!       DPDEG    NUMBER OF DEGREES IN ONE RADIAN IN DOUBLE PRECISION
      DOUBLE PRECISION DRIGHT,DPDEG
      COMMON/DCNSTN/DRIGHT,DPDEG

!     LOCAL VARIABLES:
      DOUBLE PRECISION RSCLHT,ZMIN,HT,TANHT,GAMMA0,CPATH,CH2ALT,CMIN,   &
     &  HT1,CT1,HT2,CT2,DPANDX,HT3,CT3,DC,DPDH
      INTEGER N

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     IF ETA IS TOO SMALL, TRY 1.E-7:
      REAL ETA
      DATA DPDH/1./,ETA/5.E-8/
      N=0
      CALL DPFISH(H1ALT,RSCLHT,GAMMA0)
      IF(OBSZEN.LE.90.D0)THEN
          CPATH=DPANDX(REARTH+H1ALT,H1ALT,RSCLHT,GAMMA0)                &
     &      *SIN(OBSZEN/DPDEG)
      ELSE
          CPATH=DPANDX(REARTH+H1ALT,H1ALT,RSCLHT,GAMMA0)                &
     &      *SIN((180-OBSZEN)/DPDEG)
      ENDIF
      CALL DPFISH(H2ALT,RSCLHT,GAMMA0)
      CH2ALT=DPANDX(REARTH+H2ALT,H2ALT,RSCLHT,GAMMA0)
      IF(ABS(CPATH/CH2ALT).LE.1.D0)THEN
          IF(OBSZEN.LE.90.D0)THEN
              LENN=0
              HMIN=H1ALT

!             CALCULATE THE ZENITH ANGLE BCKZEN AT H2ALT:
              BCKZEN=180-ASIN(CPATH/CH2ALT)*DPDEG
              RETURN
          ENDIF
          IF(H1ALT.LE.H2ALT)LENN=1
          IF(LENN.EQ.0)THEN
              HMIN=H2ALT

!             CALCULATE THE ZENITH ANGLE BCKZEN AT H2ALT:
              BCKZEN=ASIN(CPATH/CH2ALT)*DPDEG
              RETURN
          ENDIF

!         LONG PATH THROUGH A TANGENT HEIGHT.  SOLVE ITERATIVELY FOR THE
!         TANGENT HEIGHT, HT, FOR WHICH INDEX(HT)*(REARTH+HT)=CPATH:
          ZMIN=GNDALT
          CALL DPFISH(ZMIN,RSCLHT,GAMMA0)
          CMIN=DPANDX(REARTH+ZMIN,ZMIN,RSCLHT,GAMMA0)

!         FOR BETA CASES (ITER>0), ALLOW FOR HT < .0:
          IF(ITER.NE.0 .OR. CPATH.GE.CMIN)THEN
              HT1=(REARTH+H1ALT)*SIN(OBSZEN/DPDEG)-REARTH
              CALL DPFISH(HT1,RSCLHT,GAMMA0)
              CT1=DPANDX(REARTH+HT1,HT1,RSCLHT,GAMMA0)
              HT2=HT1-DPDH
              CALL DPFISH(HT2,RSCLHT,GAMMA0)
              CT2=DPANDX(REARTH+HT2,HT2,RSCLHT,GAMMA0)

!             ITERATE TO FIND HT:
              N=2
   10         CONTINUE
              IF(CT2.NE.CT1)THEN
                  N=N+1
                  HT3=HT2+(HT2-HT1)*(CPATH-CT2)/(CT2-CT1)
                  CALL DPFISH(HT3,RSCLHT,GAMMA0)
                  CT3=DPANDX(REARTH+HT3,HT3,RSCLHT,GAMMA0)
                  DC=CPATH-CT3
                  IF(ABS((CPATH-CT3)/CPATH).LT.ETA)THEN
                      HT=HT3
                      HMIN=HT

!                     CALCULATE THE ZENITH ANGLE BCKZEN AT H2ALT:
                      BCKZEN=180-ASIN(CPATH/CH2ALT)*DPDEG
                  ENDIF
                  IF(N.GT.15)THEN
                      DC=CPATH-CT3
                      IF(.NOT.LJMASS)WRITE(IPR,'(//A,//10X,2A,I3,A,     &
     &                  /(10X,A,F12.5,A))')'Warning from FNDHMN:',      &
     &                  'The procedure to find the tangent height',     &
     &                  ' did not converge after',N,' iterations.',     &
     &                  'CPATH   = ',CPATH,' KM','CT3     = ',CT3,' KM',&
     &                  'DC      = ',DC   ,' KM','HT3     = ',HT3,' KM'
                      RETURN
                  ENDIF
                  HT1=HT2
                  CT1=CT2
                  HT2=HT3
                  CT2=CT3
                  GOTO 10
              ENDIF
              HT3=HT2
              HT=HT3
              HMIN=HT

!             CALCULATE THE ZENITH ANGLE BCKZEN AT H2ALT:
              BCKZEN=180-ASIN(CPATH/CH2ALT)*DPDEG
              RETURN
          ENDIF

!         CALCULATE THE ZENITH ANGLE BCKZEN AT H2ALT:
          HMIN=ZMIN
          BCKZEN=ASIN(CPATH/CMIN)*DPDEG

!         RETURN WITH AN ERROR FOR PATHS TO THE SUN (OR MOON):
          IF(LSSGEO .OR. IEMSCT.EQ.3)THEN
              IERROR=-5
              RETURN
          ENDIF

!         TANGENT PATH INTERSECTS EARTH:
          IF(.NOT.LJMASS .AND. LWARN)                                   &
     &        WRITE(IPR,'(///2(A,F11.3),A,//9X,2(A,F11.3),A,I2,A)')     &
     &          ' TANGENT PATH WITH H1ALT =',H1ALT,' KM AND OBSZEN =',  &
     &          OBSZEN,' DEG INTERSECTS THE EARTH.',                    &
     &          ' H2ALT HAS BEEN RESET FROM',H2ALT,' KM TO',ZMIN,       &
     &          ' KM, AND LENN HAS BEEN RESET FROM',LENN,' TO 0'
          H2ALT=ZMIN
          LENN=0
          RETURN
      ENDIF

!     H2ALT LESS THAN TANGENT HEIGHT FOR THIS H1ALT AND OBSZEN:
      IERROR=2
      IF(LWARN)WRITE(IPR,'(/2(A,1P,E12.5,A:,/22X))')' Warning from'     &
     &  //' FINDMN:  H2ALT (=',H2ALT,'km) is less than the tangent',    &
     &  ' height (=',TANHT(CPATH,REARTH),'km) and cannot be reached.'
      END
