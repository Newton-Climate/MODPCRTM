      SUBROUTINE SSGEO(ILOS,H1ALT,H2ALT,OBSZEN,REARTH,LENN,ZMAX,IERROR, &
     &  IPH,PARM1,PARM2,SRCLAT,SRCLON,TRUEAZ,G,MSPATH,ICH1,KNTRVL)

!     THIS ROUTINE CALLS THE LOWTRAN GEOMETRY ROUTINES REPEATEDLY
!     TO OBTAIN THE ABSORBER AMOUNTS FROM THE SCATTERING POINTS ON
!     THE OPTICAL PATH TO THE EXTRATERRESTRIAL SOURCE, AS IS NECESSARY
!     FOR THE LAYER BY LAYER SINGLE SCATTERING RADIANCE CALCULATION.
      IMPLICIT NONE

!     INPUT ARGUMENTS:
!       ILOS     LOOP INDEX FOR LINE-OF-SIGHT PATHS.
!       H1ALT    OBSERVER (SENSOR) ALTITUDE [KM].
!       H2ALT    FINAL (TANGENT FOR LIMB PATH) ALTITUDE [KM].
!       OBSZEN   OBSERVER ZENITH ANGLE (H1ALT TO H2ALT) [DEG].
!       REARTH   RADIUS OF THE EARTH [KM].
!       LENN     PATH LENGTH SWITCH (0=SHORT, 1=LONG).
!       ZMAX     MAXIMUM ATMOSPHERIC PROFILE ALTITUDE [KM].
!       IERROR   ERROR FLAG (=0 FOR SUCCESSFUL CALLS).
!       IPH      PHASE FUNCTION FLAG (=0 FOR HENYEY-GREENSTEIN)
!                                    (=1 FOR USER-DEFINED)
!                                    (=2 FOR MIE-GENERATED)
!       PARM1    OBSERVER LATITUDE [DEG NORTH OF EQUATOR].
!       PARM2    OBSERVER LONGITUDE [DEG WEST OF GREENWICH].
!       SRCLAT   SOURCE LATITUDE [DEG NORTH OF EQUATOR].
!       SRCLON   SOURCE LONGITUDE [DEG WEST OF GREENWICH].
!       TRUEAZ   PATH TRUE AZIMUTH ANGLE [DEG EAST OF NORTH].
!       G        HENYEY-GREENSTEIN ASYMMETRY FACTOR (IPH=0).
!       MSPATH   LOGICAL, TRUE FOR MULTIPLE SCATTERING VERTICAL PATH.
!       ICH1     HAZE MODEL FLAG.
!       KNTRVL   NUMBER OF CORRELATED-K SUB-INTERVALS
!                (=1 IF CORRELATED-K APPROACH IS NOT USED).
      DOUBLE PRECISION ZMAX,H1ALT,H2ALT,OBSZEN,REARTH,PARM1,PARM2,      &
     &  SRCLAT,SRCLON,TRUEAZ
      LOGICAL MSPATH
      INTEGER ILOS,LENN,IERROR,IPH,ICH1,KNTRVL
      REAL G

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     COMMONS:
      INCLUDE 'YPROP.h'
      INCLUDE 'BMHEAD.h'
      INCLUDE 'BASE.h'
      INCLUDE 'SEGDAT.h'
      INCLUDE 'SOLS.h'
      INCLUDE 'SNGSOL.h'
      INCLUDE 'WSOL.h'
      INCLUDE 'IFIL.h'

!     /CARD1/
!       MODEL    MODEL ATMOSPHERE INDEX.
!       ITYPE    SLANT PATH TYPE.
!       IEMSCT   RADIATIVE TRANSFER MODE.
!                  0 FOR TRANSMITTANCE
!                  1 FOR THERMAL EMISSION ONLY
!                  2 FOR THERMAL EMISSION PLUS SOLAR SCATTER
!                  3 FOR TRANSMITTED SOLAR IRRADIANCE
!                  4 FOR SOLAR SCATTER ONLY
!       M1       MODEL ATMOSPHERE FOR PRESSURE & TEMPERATURE PROFILES.
!       M2       MODEL ATMOSPHERE FOR H2O PROFILE.
!       M3       MODEL ATMOSPHERE FOR O3 PROFILE.
!       I_RD2C   READ CARD 2C, 2C1, ... IF EQUAL 1; SKIP IF EQUAL TO 0.
!       NOPRNT   PRINT FLAG.
!       MODTRN   MODTRAN BAND MODEL FLAG.
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,I_RD2C,NOPRNT
      LOGICAL MODTRN
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,I_RD2C,NOPRNT,MODTRN

!     /CARD2A/
      INTEGER NCRALT,NCRSPC
      DOUBLE PRECISION CTHIK,CALT
      REAL CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,CWAVLN,CCOLWD,        &
     &  CCOLIP,CHUMID,ASYMWD,ASYMIP

!     /CNTRL/
!       NSEG     NUMBER OF PATH SEGMENTS ALONG LINE-OF-SIGHT.
!       ML       NUMBER OF ATMOSPHERIC PROFILE LEVELS.
!       MLFLX    NUMBER OF LEVELS FOR WHICH FLUX VALUES ARE WRITTEN.
!       IMULT    MULTIPLE SCATTERING FLAG
!                  (0=NONE, 1=AT SENSOR, -1=AT FINAL OR TANGENT POINT).
!       THERML   FLAG TO CALCULATE THERMAL SCATTER.
      INTEGER NSEG,ML,MLFLX,IMULT
      LOGICAL THERML
      COMMON/CNTRL/NSEG(0:MLOSP1),ML,MLFLX,IMULT,THERML

!     /RCNSTN/
!       PI       THE CONSTANT PI.
!       DEG      NUMBER OF DEGREES IN ONE RADIAN.
!       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.
!       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.
!       RRIGHT   SMALLEST SINGLE PRECISION REAL ADDED TO 1 EXCEEDS 1.
      REAL PI,DEG,BIGNUM,BIGEXP,RRIGHT
      COMMON/RCNSTN/PI,DEG,BIGNUM,BIGEXP,RRIGHT

!     /DCNSTN/
!       DRIGHT   SMALLEST DOUBLE PRECISION REAL ADDED TO 1 EXCEEDS 1.
!       DPDEG    NUMBER OF DEGREES IN ONE RADIAN IN DOUBLE PRECISION
      DOUBLE PRECISION DRIGHT,DPDEG
      COMMON/DCNSTN/DRIGHT,DPDEG

!     /FILLP/
!       ZP       ALTITUDE AT REFRACTED PATH LEVELS [KM].
!       RANGEP   SEGMENT RANGE [KM].
!       PP       PRESSURE AT REFRACTED PATH LEVELS [MBAR].
!       TP       TEMPERATURE AT REFRACTED PATH LEVELS [K].
!       RHP      RELATIVE HUMIDITY AT REFRACTED PATH LEVELS [%].
!       RFNDXP   REFRACTIVITIES AT REFRACTED PATH LEVELS.
!       DENPTH   ATMOSPHERIC LEVEL DENSITIES
!                [UNITS VARY WITH SPECIES BUT MOST OFTEN ATM CM / KM].
      DOUBLE PRECISION ZP,RANGEP,PP,RFNDXP,DENPTH
      REAL TP,RHP
      COMMON/FILLP/ZP(LAYDM1),RANGEP(LAYDM1),PP(LAYDM1),                &
     &  TP(LAYDM1),RHP(LAYDM1),RFNDXP(LAYDM1),DENPTH(0:MEXTXY,1:LAYDM1)

!     /MSRD/
!       CSSCAT   COSINE OF THE SCATTERING ANGLE.
!                (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       SLEGEN   Nth LEGENDRE POLYNOMIAL EVALUATED AT THE COSINE OF THE
!                SCATTERING ANGLE TIMES (2N+1)/4pi (N=0 TO NSTR-1).
!       CSZEN0   LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.
!       CSZEN    LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.
!       CSZENX   AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING
!                (AWAY FROM EARTH) THE CURRENT LAYER.
!       BBGRND   THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].
!       BBNDRY   LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1].
!       TCONT    LAYER CONTINUUM OPTICAL DEPTH.
!       TAUT     LAYER TOTAL VERTICAL EXTINCTION OPTICAL DEPTH.
!       GTSCAT   SUM OVER SCATTERING SOURCES OF SCATTERING OPTICAL DEPTH
!                AND PHASE FUNCTION LEGENDRE COEFFICIENT PRODUCTS.
!       COSBAR   LAYER EFFECTIVE SCATTERING ASYMMETRY FACTOR.
!       DEPRAT   FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.
!       S0DEP    OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.
!       S0TRN    TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]
!       UPF      LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].
!       DNF      LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].
!       UPFS     LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].
!       DNFS     LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].
!       CO_LIN   TRUE IF LOS AND SOLAR PATHS ARE NEARLY IDENTICAL.
      REAL CSSCAT,SLEGEN,CSZEN0,CSZEN,CSZENX,TCONT,TAUT,GTSCAT,COSBAR,  &
     &  BBGRND,BBNDRY,S0DEP,S0TRN,DEPRAT,UPF,DNF,UPFS,DNFS
      LOGICAL CO_LIN
      COMMON/MSRD/CSSCAT(MLOS),SLEGEN(0:MAZ,MLOS),CSZEN0(LAYDIM),       &
     &  CSZEN(LAYDIM),CSZENX(LAYDIM),TCONT(LAYDIM),TAUT(MXKSUB,LAYDIM), &
     &  GTSCAT(0:MXCMU,1:LAYDIM),COSBAR(LAYDIM),BBGRND,BBNDRY(LAYDIM),  &
     &  S0DEP(MXKSUB,LAYTWO),S0TRN(MXKSUB,LAYTWO),DEPRAT(MXKSUB,LAYDIM),&
     &  UPF(MXKSUB,LAYDIM),DNF(MXKSUB,LAYDIM),UPFS(MXKSUB,LAYDIM),      &
     &  DNFS(MXKSUB,LAYDIM),CO_LIN(MLOS)

!     /ANGSRF/
!       CVWSRF  COSINE OF THE VIEW ZENITH ANGLE FROM THE SURFACE.
!       CSNSRF  COSINE OF THE SOLAR (LUNAR) ZENITH AT SURFACE.
!       AZMSRF  RELATIVE AZIMUTH ANGLE (SUN - SENSOR AT SURFACE) [RAD].
!       UMU1    COSINE OF THE PATH NADIR ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       UMU0    COSINE OF THE SOLAR ZENITH ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       PHI1    RELATIVE AZIMUTH ANGLE (SUN - LOS PATH AT SENSOR) [DEG].
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       CMU     COSINE OF THE NADIR ANGLES USED IN DISORT.
      REAL CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU
      COMMON/ANGSRF/CVWSRF(MLOS),CSNSRF(MLOS),AZMSRF(MLOS),UMU1(MLOS),  &
     &  UMU0,PHI1(MLOS),CMU(MI)

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
      REAL UMU,PHI
      INTEGER NSTR,NAZ,N2GAUS,NUMU,MAPUMU,NPHI,MAPPHI
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      COMMON/DISRT/UMU(MXUMU),PHI(MAXPHI),NSTR,NAZ,N2GAUS,NUMU,         &
     &  MAPUMU(MLOS),NPHI,MAPPHI(MLOS),DIS,DISAZM,DISALB,LDISCL
      SAVE /DISRT/

!     /CARD4/
!       IV1      LOWEST SPECTRAL FREQUENCY OUTPUT [CM-1].
!       IV2      HIGHEST SPECTRAL FREQUENCY OUTPUT [CM-1].
!       IDV      PRINTOUT SPECTRAL FREQUENCY STEP SIZE [CM-1].
!       IFWHM    TRIANGULAR SLIT FULL-WIDTH-HALF-MAXIMUM [CM-1].
!       VBAND    CURRENT COMPUTATION BAND FREQUENCY [CM-1].
!                (EQUALS BAND CENTER FOR 1, 5 & 15 CM-1 BAND MODELS;
!                EQUALS THE MINIMUM BAND VALUE FOR 0.1 CM-1 BAND MODEL)
!       IBINPT   BIN NUMBER OF CURRENT SPECTRAL POINT.
!                (CENTER FREQUENCY = IBINPT * BNDWID + OSHIFT).
!       IBINLO   BIN NUMBER OF (PADDED) SPECTRAL RANGE LOWER BOUND.
!       IBINHI   BIN NUMBER OF (PADDED) SPECTRAL RANGE UPPER BOUND.
!       IBINMN   BIN NUMBER OF MINIMUM COMPUTATION SPECTRAL POINT.
!       IBINMX   BIN NUMBER OF MAXIMUM COMPUTATION SPECTRAL POINT.
!       IBINDL   BIN NUMBER INCREMENT FOR SPECTRAL PRINTOUT.
!       IBINRS   BIN NUMBER INCREMENT EQUAL TO SPECTRAL RESOLUTION.
!       IBINOS   BIN NUMBER OFFSET BETWEEN CURRENT & OUTPUT SPC POINTS.
!       IBINWR   BIN NUMBER OF NEXT SPECTRAL DATA WRITE.
!       MBINPT   BIN NUMBER MAXIMUM FOR CURRENT BAND MODEL RESOLUTION.
!       IDBIN5   SPECTRAL BIN NUMBER STEP SIZE FOR 5 CM-1 GRID.
!       ISTEP5   INCREMENT FOR RETRIEVING 5 CM-1 RESOLUTION DATA [CM-1].
!       NSPCDT   NUMBER OF OUTPUT SPECTRAL DATA POINTS.
      DOUBLE PRECISION IDV
      REAL IV1,IV2,IFWHM,VBAND
      INTEGER IBINPT,IBINLO,IBINHI,IBINMN,IBINMX,IBINDL,                &
     &  IBINRS,IBINOS,IBINWR,MBINPT,IDBIN5,ISTEP5,NSPCDT
      COMMON/CARD4/IDV,IV1,IV2,IFWHM,VBAND,IBINPT,IBINLO,IBINHI,IBINMN, &
     &  IBINMX,IBINDL,IBINRS,IBINOS,IBINWR,MBINPT,IDBIN5,ISTEP5,NSPCDT

!     /MPROF/
!       ZM       PROFILE LEVEL ALTITUDES [KM].
!       PM       PROFILE LEVEL PRESSURES [MBAR].
!       TM       PROFILE LEVEL TEMPERATURES [K].
!       RFNDX    PROFILE LEVEL REFRACTIVITIES.
!       LRHSET   FLAG, .TRUE. IF RELATIVE HUMIDITY IS NOT TO BE SCALED.
      DOUBLE PRECISION ZM
      REAL PM,TM,RFNDX
      LOGICAL LRHSET
      COMMON/MPROF/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    &
     &  RFNDX(LAYDIM),LRHSET(LAYDIM)

!     /DEN/
!       DENSTY   PROFILE LEVEL DENSITIES [ATM CM / KM FOR MOST SPECIES].
      REAL DENSTY
      COMMON/DEN/DENSTY(0:MEXTXY,1:LAYDIM)

!     /JM5/
!       IRPT     REPEAT INPUT FLAG (0=NONE, 1=ALL, 3=GEOM, 4=SPEC).
!       IFAC     CURRENT COLUMN SCALING FACTOR INDEX.
!       NFACMN   NUMBER OF COLUMN SCALING FACTOR LESS THAN 1.
!       NFACMX   NUMBER OF COLUMN SCALING FACTOR GREATER THAN 1.
!       SCALMN   MINIMUM COLUMN SCALING FACTOR.
!       FACMC    CURRENT COLUMN SCALING FACTOR.
!       SCALMX   MAXIMUM COLUMN SCALING FACTOR.
!       LBMRES   LOGICAL FLAG, .TRUE. FOR BAND MODEL AND .FALSE.
!                FOR 1 NM SPECTRAL RESOLUTION OUTPUT.
      INTEGER IRPT,IFAC,NFACMN,NFACMX
      REAL FACMC
      DOUBLE PRECISION SCALMN,SCALMX
      LOGICAL LBMRES
      COMMON/JM5/SCALMN,SCALMX,IRPT,IFAC,NFACMN,NFACMX,FACMC,LBMRES

!     /CJM5/
!       AMOD3D   FLAG INDICATING OUTPUT DATABASE FILE TYPE:
      CHARACTER AMOD3D*1
      COMMON/CJM5/AMOD3D

!     /PATH/
!       PTHCOS   COSINE OF PATH ZENITH AT PATH BOUNDARIES.
!       PTHZEN   PATH ZENITH AT PATH BOUNDARIES [DEG].
!       PTHECA   SENSOR TO PATH EARTH CENTER ANGLE [DEG].
!       PTHALT   ALTITUDES AT PATH BOUNDARIES [KM].
!       PTH_MS   ALTITUDES AT PATH BOUNDARIES FOR THE MS PATH.
!       PTHSEG   PATH SEGMENT LENGTH [KM].
!       PTHRNG   SENSOR TO PATH BOUNDARY RANGE [KM].
!       JMAX     NUMBER OF DISTINCT LOS PATH SEGMENT ENDPOINT ALTITUDES.
!       IKHMIN   PATH BOUNDARY INDEX OF PATH MINIMUM ALTITUDE.
!       IKHMAX   PATH BOUNDARY INDEX OF PATH MAXIMUM ALTITUDE.
!       IKOUT    NUMBER OF PATH BOUNDARIES K DATA IS OUTPUT.
!       NTKDIS   RECORD NUMBER FOR K-DISTRIBUTION TRANSMITTANCE FILE.
!       NRKDIS   RECORD NUMBER FOR K-DISTRIBUTION RADIANCE FILE.
!       MAPPTH   MAPPING FROM PATH SEGMENT MIDPOINT TO VERTICAL LAYER.
!       IPTHHT   ALTITUDES (HEIGHTS) AT PATH BOUNDARIES [M].
!       LOWALT   VERTICAL LAYER BOUNDARY INDEX AT OR JUST BELOW PTHALT.
!       FACALT   ALTITUDE INTERPOLATION FRACTION FOR PTHALT
!       PATH_T   TEMPERATURE AT PATH BOUNDARIES [K].
!       PATH_P   PRESSURE AT PATH BOUNDARIES [ATM].
!       PTHRH    RELATIVE HUMIDITY AT PATH BOUNDARIES [K].
!       LSSGEO   LOGICAL FLAG, .TRUE. FOR SOLAR PATHS.
!       LTANMX   LOGICAL FLAG, .TRUE. IF PATH HAS A TANGENT MAXIMUM.
      DOUBLE PRECISION PTHCOS,PTHZEN,PTHECA,PTHALT,PTH_MS,PTHSEG,PTHRNG
      INTEGER JMAX,IKHMIN,IKHMAX,IKOUT,NTKDIS,NRKDIS,MAPPTH,            &
     &  IPTHHT,LOWALT
      REAL FACALT,PATH_T,PATH_P,PTHRH
      LOGICAL LSSGEO,LTANMX
      COMMON/PATH/PTHCOS(0:LAYTWO),PTHZEN(0:LAYTWO),PTHECA(0:LAYTWO),   &
     &  PTHALT(0:LAYTWO,1:MLOS),PTH_MS(0:LAYDIM),PTHSEG(LAYTWO),        &
     &  PTHRNG(0:LAYTWO,1:MLOS),JMAX,IKHMIN(MLOS),IKHMAX(MLOS),         &
     &  IKOUT(MLOS),MAPPTH(LAYTWO,1:MLOS),IPTHHT(0:LAYTWO),NTKDIS,      &
     &  NRKDIS,LOWALT(0:LAYTWO,1:MLOS),FACALT(0:LAYTWO,1:MLOS),         &
     &  PATH_T(0:LAYTWO,1:MLOS),PATH_P(0:LAYTWO,1:MLOS),                &
     &  PTHRH(0:LAYTWO,1:MLOS),LSSGEO,LTANMX

!     /CARD2/
!       IHAZE    BOUNDARY LAYER AEROSOL MODEL NUMBER.
!       ISEASN   SEASON NUMBER (1=SPRING-SUMMER, 2=FALL-WINTER).
!       IVULCN   VOLCANIC AEROSOL MODEL NUMBER.
!       ICSTL    COASTAL AIRMASS MODEL NUMBER.
!       ICLD     CLOUD MODEL NUMBER.
!       IVSA     VERTICAL STRUCTURE ALGORITHM (0=OFF, 1=ON).
!       VIS      SURFACE VISIBILITY (GROUND METEOROLOGICAL RANGE) [KM].
!       WSS      CURRENT WIND SPEED (M/S).
!       WHH      24-HOUR WIND SPEED (M/S).
!       RAINRT   RAIN RATE (MM/HR)
!       LSAP     LOGICAL FLAG FOR SPECTRAL AEROSOL PROFILES INPUT.
      INTEGER IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA
      REAL VIS,WSS,WHH,RAINRT
      LOGICAL LSAP
      COMMON/CARD2/IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,                 &
     &  VIS,WSS,WHH,RAINRT,LSAP

!     /SAP/
!       NWVSAP   NUMBER OF AEROSOL SPECTRAL GRID POINTS.
!       NLGSAP   HIGHEST AEROSOL PHASE FUNCTION LEGENDRE MOMENT.
!       NANSAP   NUMBER OF AEROSOL PHASE FUNCTION ANGULAR POINTS.
!       LEVSAP   NUMBER OF AEROSOL ATMOSPHERIC LEVELS.
!       ANGSAP   AEROSOL PHASE FUNCTION ANGULAR GRID [DEGREES].
!       COSSAP   COSINE OF THE AEROSOL PHASE FUNCTION ANGLES.
!       WAVSAP   AEROSOL SPECTRAL GRID [MICRONS].
!       LEGSAP   AEROSOL LEGENDRE COEFFICIENTS.
!       PFSAP    AEROSOL PHASE FUNCTION [SR-1].
!       LOSSAP   LOGICAL FLAG, TRUE FOR LINE-OF-SIGHT PATH.
      INTEGER NWVSAP,NLGSAP,NANSAP,LEVSAP
      DOUBLE PRECISION ANGSAP,COSSAP,PFSAP
      REAL WAVSAP,LEGSAP
      LOGICAL LOSSAP
      COMMON/SAP/NWVSAP,NLGSAP,NANSAP,LEVSAP,ANGSAP(MANSAP),            &
     &  COSSAP(MANSAP),WAVSAP(MWVSAP),LEGSAP(MLGSAP,MWVSAP,LAYDIM),     &
     &  PFSAP(MANSAP,MWVSAP,LAYDIM),LOSSAP

!     /SAPCOS/
!       ICSSAP   HIGHER SCATTERING ANGLE INDEX (SMALLER COSINE VALUE).
!       FCSSAP   SCATTERING ANGLE COSINE INTERPOLATION FRACTION.
      INTEGER ICSSAP
      REAL FCSSAP
      COMMON/SAPCOS/ICSSAP(LAYTWO),FCSSAP(LAYTWO)

!     /SAPDEP/
!       XSAP     LINE-OF-SIGHT PATH AEROSOL EXTINCTION OPTICAL DEPTHS.
!       XSAPM    VERTICAL MS PATH AEROSOL EXTINCTION OPTICAL DEPTHS.
!       ASAP     LINE-OF-SIGHT PATH AEROSOL ABSORPTION OPTICAL DEPTHS.
!       ASAPM    VERTICAL MS PATH AEROSOL ABSORPTION OPTICAL DEPTHS.
!       XSAPS    SOLAR PATH AEROSOL EXTINCTION OPTICAL DEPTHS FROM LOS.
!       XSAPSM   SOLAR PATH AEROSOL EXTINCTION OPTICAL DEPTHS FOR MS.
!       ASAPS    SOLAR PATH AEROSOL ABSORPTION OPTICAL DEPTHS FROM LOS.
!       ASAPSM   SOLAR PATH AEROSOL ABSORPTION OPTICAL DEPTHS FOR MS.
      REAL XSAP,XSAPM,ASAP,ASAPM,XSAPS,XSAPSM,ASAPS,ASAPSM
      COMMON/SAPDEP/                                                    &
     &  XSAP(1:MWVSAP,0:LAYTWO,0:MLOS),XSAPM(1:MWVSAP,0:LAYDIM),        &
     &  ASAP(1:MWVSAP,0:LAYTWO,0:MLOS),ASAPM(1:MWVSAP,0:LAYDIM),        &
     &  XSAPS(MWVSAP,LAYTWO,MLOS),XSAPSM(MWVSAP,LAYDIM),                &
     &  ASAPS(MWVSAP,LAYTWO,MLOS),ASAPSM(MWVSAP,LAYDIM)

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     LOCAL VARIABLES:
!       IANGLS   LOOP INDEX FOR SCATTERING PHASE FUNCTION ANGLES.
!       NSEGP1   NUMBER OF LINE-OF-SIGHT PATH SEGMENTS PLUS ONE.
!       REL_AZ   RELATIVE AZIMUTH ANGLE AT SENSOR [DEG].
!       SOL_AZ   TRUE SOLAR AZIMUTH FROM OBSERVER [DEG EAST OF NORTH].
!       AUMU1    ABSOLUTE VALUE OF COSINE OF THE PATH NADIR ANGLE.
!       UMU1L    COSINE OF THE PATH NADIR ANGLE AT SCATTERING POINT L.
!       AUMU1L   ABSOLUTE VALUE OF UMU1L.
!       NSTRH    HALF THE NUMBER OF DISCRETE ORDINATE STREAMS.
!       ISTR     DISCRETE ORDINATE STREAM INDEX.
!       IWVSAP   SPECTRAL GRID INDEX FOR SPECTRAL AEROSOL PROFILES.
!       ICOS     HIGHER SCATTERING ANGLE INDEX (SMALLER COSINE VALUE).
!       H1ALTX   ALTITUDE AT LEVELS ALONG LOS PATH [KM].
!       H2ALTX   TANGENT ALTITUDE (SET TO ZERO TO AVOID USE) [KM].
!       OBZENX   ZENITH ANGLE TO SUN AT LEVELS ALONG LOS PATH [DEG].
!       HRANGX   ALTITUDE LEVEL TO TOA DISTANCE ALONG SOLAR PATH [KM].
!       BETAX    ALTITUDE LEVEL TO TOA EARTH CENTER ANGLE [DEG].
!       HMINX    ALTITUDE LEVEL TO SUN PATH MINIMUM ALTITUDE [KM].
!       HMAXX    ALTITUDE LEVEL TO TOA SUN PATH MAXIMUM ALTITUDE [KM].
!       CKRNGX   DUMMY PATH RANGE FOR K-DISTRIBUTION OUTPUT [KM].
!       BKZENX   TOA TO ALTITUDE LEVEL ZENITH ALONG SOLAR PATH [DEG].
!       LENNX    ALTITUDE LEVEL TO SUN LENGTH SWITCH (0=SHORT, 1=LONG).
!       OBZENS   SAVED OBSERVER ZENITH ANGLE (H1ALT TO H2ALT) [DEG].
!       COLDEN   MOLECULAR COLUMN DENSITY [ATM CM].
      CHARACTER MESSAG*48
      INTEGER IANGLS,JTRNSV,NSEGP1,ITYPSV,J,IARBO,IEXT,IARB,JITER,      &
     &  ISEGM1,ISEG,LSEG,MOLPNT,IK,LNMESS,ISTR,NSTRH,ICOS,IWVSAP,LENNX
      REAL PNUM,TNUM,DENOM,COLDEN,AUMU1,UMU1L,AUMU1L
      DOUBLE PRECISION H1ALTX,H2ALTX,OBZENX,HRANGX,BETAX,HMINX,HMAXX,   &
     &  OLAT,OLONG,SLAT,SLONG,CKRNGX,BKZENX,OBZENS,BEND,REL_AZ,SOL_AZ,  &
     &  THTST,BETAST,PSIST,ANGL0,ANGERR,ANGMX,ANGMN,ECA
      LOGICAL LKBAND

!     LOCAL ARRAYS:
!       MU       COSINE OF SCATTERING ANGLE.
!       WLH2O    SENSOR-LEVEL_BOUNDARY-SUN PATH H2O COLUMN [ATM CM].
!       WLCO2    SENSOR-LEVEL_BOUNDARY-SUN PATH CO2 COLUMN [ATM CM].
!       WLO3     SENSOR-LEVEL_BOUNDARY-SUN PATH O3 COLUMN [ATM CM].
!       WLAUX    SENSOR-LEVEL-SUN PATH AUXIL. SPECIES COLUMN [ATM CM].
!       WH2O     SENSOR-LEVEL_BOUNDARY PATH H2O COLUMN [ATM CM].
!       WCO2     SENSOR-LEVEL_BOUNDARY PATH CO2 COLUMN [ATM CM].
!       WO3      SENSOR-LEVEL_BOUNDARY PATH O3 COLUMN [ATM CM].
!       WAUX     SENSOR-LEVEL PATH AUXILIARY SPECIES COLUMN [ATM CM].
!       YDENSM   PROFILE OF Y MOLECULE DENSITIES SUMMED [ATM CM /KM].
!       GMU      ARRAY OF GAUSSIAN QUADRATURE ABSCISSAE.
!       GWT      ARRAY OF GAUSSIAN QUADRATURE WEIGHTS.
      INTEGER LSEGSV(LAYTWO)
      REAL RHSAV(LAYDM1),GMU(MI),GWT(MI),WSAV(0:MEXTXY),WPSUM(0:MEXTXY),&
     &  WLH2O(LAYTWO),WLCO2(LAYTWO),WLO3(LAYTWO),WLAUX(LAYTWO),         &
     &  WH2O(LAYTWO),WCO2(LAYTWO),WO3(LAYTWO),WAUX(LAYTWO),             &
     &  YDENSM(LAYDIM),SMSAPX(MWVSAP),SMSAPA(MWVSAP)
      DOUBLE PRECISION ZPSAV(LAYDM1)

!     LOCAL FUNCTIONS:
      REAL HENGNS
      DOUBLE PRECISION COSSCT,SOLAZM,ZENSUN

!     DATA:
!       AERRH    INPUT FOR GEO ROUTINE.
      REAL AERRH
      DATA AERRH/100./

!     INITIALIZATIONS:
      NPR=8

!     SPECIFY THE GEOMETRICAL CONFIGURATION
      OLAT=PARM1
      OLONG=PARM2
      SLAT=SRCLAT
      SLONG=SRCLON
      IF(OLAT.LT.-89.5D0)THEN

!         OBSERVER IS AT OR NEAR THE SOUTH POLE.
!         REMAP TO THE EQUATOR.
          IF(.NOT.LJMASS)WRITE(IPR,'(/A)')'OBSERVER AT OR NEAR THE'//   &
     &      ' SOUTH POLE).  PROBLEM HAS BEEN REMAPPED TO THE EQUATOR.'
          TRUEAZ=TRUEAZ-SLONG
          OLAT=0.D0
          OLONG=0.D0
          SLAT=0.D0
          SLONG=90+SLAT
      ELSEIF(OLAT.GT.89.5D0)THEN

!         OBSERVER IS AT OR NEAR THE NORTH POLE.  REMAP TO EQUATOR.
          IF(.NOT.LJMASS)WRITE(IPR,'(/A)')'OBSERVER AT OR NEAR THE'//   &
     &      ' NORTH POLE).  PROBLEM HAS BEEN REMAPPED TO THE EQUATOR.'
          TRUEAZ=SLONG-TRUEAZ
          OLAT=0.D0
          OLONG=0.D0
          SLAT=0.D0
          SLONG=90-SLAT
      ENDIF

!     HALF THE NUMBER OF DISORT STREAMS:
      NSTRH=NSTR/2

!     SAVE OPTICAL (LOS OR VERTICAL) PATH PARAMETERS AND AMOUNTS:
      JTRNSV=JTURN

!     INITIALIZE PARAMETERS NOT USED TO DEFINE PATH TO SPACE (ITYPE=3):
      HRANGX=0.D0
      BETAX=0.D0
      ITYPSV=ITYPE
      DO J=1,ML
          ZPSAV(J)=ZP(J)
          RHSAV(J)=RHP(J)
      ENDDO
      IF(MSPATH)THEN
          NSEGP1=NSEG(MLOSP1)+1
          IF(.NOT.LJMASS)WRITE(IPR,'(//(A))')                           &
     &      ' SINGLE SCATTER SOLAR PATH GEOMETRY TABLE FOR'             &
     &      //' MULTIPLE SCATTERING VERTICAL GROUND-TO-SPACE PATH',     &
     &      ' --------------------------------------------'             &
     &      //'--------------------------------------------------',     &
     &      ' SCT    SCATTER  SUBTENDED      SOLAR'                     &
     &        //'       PATH   RELATIVE    SCATTER',                    &
     &      ' PNT   ALTITUDE      ANGLE     ZENITH'                     &
     &        //'     ZENITH    AZIMUTH      ANGLE',                    &
     &      '           [KM]      [DEG]      [DEG]'                     &
     &        //'      [DEG]      [DEG]      [DEG]'
      ELSE
          NSEGP1=NSEG(ILOS)+1
          IF(.NOT.LJMASS)WRITE(IPR,'(//A,I3,/(A))')                     &
     &      ' SINGLE SCATTER SOLAR PATH GEOMETRY TABLE'                 &
     &      //' FOR LINE-OF-SIGHT PATH No.',ILOS,                       &
     &      ' ----------------------------------------'                 &
     &      //'------------------------------',                         &
     &      ' SCT    SCATTER  SUBTENDED      SOLAR'                     &
     &        //'       PATH   RELATIVE    SCATTER',                    &
     &      ' PNT   ALTITUDE      ANGLE     ZENITH'                     &
     &        //'     ZENITH    AZIMUTH      ANGLE',                    &
     &      '           [KM]      [DEG]      [DEG]'                     &
     &        //'      [DEG]      [DEG]      [DEG]'
      ENDIF
      DO J=1,NSEGP1
          LSEGSV(J)=LAYSEG(J)
          IF(LSEGSV(J).GT.ML)LSEGSV(J)=ML
      ENDDO
      DO IEXT=0,MEXTX+NMOLY
          WSAV(IEXT)=WTOTAL(IEXT)
          WPSUM(IEXT)=0.
      ENDDO
      IF(LSAP)THEN
          DO IWVSAP=1,NWVSAP
              SMSAPX(IWVSAP)=0.
              SMSAPA(IWVSAP)=0.
          ENDDO
      ENDIF

!     ESTABLISH REL_AZ AND ECA
      IARBO=0
      IF(OBSZEN.LT..01 .OR. OBSZEN.GT.179.99)IARBO=1
      IARB=IARBO
      BETAST=0.D0
      CALL PSIECA(OLAT,OLONG,SLAT,SLONG,SOL_AZ,ECA)
      REL_AZ=SOL_AZ-TRUEAZ
      IF(REL_AZ.GT.180.D0)REL_AZ=REL_AZ-360
      IF(REL_AZ.LT.-180.D0)REL_AZ=REL_AZ+360
      PSIST=REL_AZ
      ANGL0=ECA

!     LOOP OVER THE POINT TO SUN PATHS TO OBTAIN AMOUNTS:
      ISEGM1=0
      DO ISEG=1,NSEGP1
          IF(ITYPSV.EQ.4)THEN
              H1ALTX=PTHALT(ISEGM1,ILOS)
              THTST=PTHZEN(ISEGM1)
              BETAST=PTHECA(ISEGM1)
          ELSEIF(LENN.EQ.0 .AND. JTRNSV.EQ.0)THEN

!             SHORT PATH, UP
              IF(ISEG.GE.2)BETAST=BETAST+ECALAY(ISEGM1)
              H1ALTX=ZPSAV(ISEG)
              THTST=ZENLAY(ISEG)
              IF(ILOS.LE.MLOS)PTHRH(ISEGM1,ILOS)=RHSAV(ISEG)
          ELSE

!             LONG PATH, OR SHORT PATH DOWN
              IF(ISEG.GE.2)BETAST=BETAST+ECALAY(LSEGSV(ISEGM1))
              LSEG=LSEGSV(ISEG)
              IF(ISEG.LT.JTRNSV)LSEG=LSEG+1
              THTST=ZENLAY(LSEG)
              IF(ISEG.LE.JTRNSV)THTST=180-THTST
              H1ALTX=ZPSAV(LSEG)
              IF(ILOS.LE.MLOS)PTHRH(ISEGM1,ILOS)=RHSAV(LSEG)
          ENDIF
          IF(ISEG.GE.2)THEN
              PSIST=SOLAZM(REL_AZ,ECA,BETAST,IARB,IARBO)
              ANGL0=ZENSUN(REL_AZ,ECA,BETAST,IARBO)
          ENDIF
          ANGERR=0.D0
          ANGMX=ANGL0
          BEND=0.D0
          OBZENX=ANGL0
          ITYPE=3
          DO JITER=1,12
              LNMESS=1
              MESSAG=' '

!             SET H2ALTX TO ZERO TO USE OBZENX TO DEFINE SOLAR PATH:
              H2ALTX=0.D0
              LENNX=0
              IF(OBZENX.GT.90.D0)THEN
                  IF(OBZENX.LE.90.0001D0)THEN

!                     MULTIPLE SCATTERING CORRECTION FOR
!                     SCATTERING POINT TO SUN PATHS.
                      OBZENX=90.D0
                  ELSE
                      LENNX=1
                      LNMESS=48
                      MESSAG(1:23)='THIS SOLAR PATH PASSES '
                      MESSAG(24:48)='THROUGH A TANGENT HEIGHT.'
                  ENDIF
              ENDIF
              IF(H1ALTX.GE.ZMAX .AND. LENNX.EQ.0)THEN

!                 LEVEL > OR = ZMAX AND LENNX = 0; SET NUMBER
!                 OF SEGMENTS AND WTOTAL(IEXT)=0. AND THEN CONTINUE.
                  NSEG(0)=0
                  DO IEXT=1,MEXTX+NMOLY
                      WTOTAL(IEXT)=0.
                  ENDDO
                  IF(LSAP)THEN
                      DO IWVSAP=1,NWVSAP
                          XSAP(IWVSAP,0,0)=0.
                          ASAP(IWVSAP,0,0)=0.
                      ENDDO
                  ENDIF
                  GOTO 10
              ENDIF

!             PROTECT AGAINST GEO OVERWRITING THE OBSERVER ZENITH:
              OBZENS=OBZENX
              CALL GEO(0,.FALSE.,ICH1,CKRNGX,REARTH,ZMAX,AERRH,LENNX,   &
     &          H1ALTX,H2ALTX,OBZENS,HRANGX,BETAX,HMINX,HMAXX,BKZENX,   &
     &          IERROR,BEND)

!             IERROR=-5 IF SCATTER POINT IS IN SHADE; SET WTOTAL(36)=-5.
              IF(IERROR.EQ.-5)THEN
                  LNMESS=38
                  MESSAG='THIS SCATTERING POINT IS IN THE SHADE.'
                  WTOTAL(36)=-5.
                  IERROR=0
                  GOTO 10
              ENDIF

!             SOLAR ZENITH ERROR:
              ANGERR=OBZENX+BEND-ANGL0
              IF(ABS(ANGERR).LT..001)GOTO 10

!             CALCULATE ANGLE USING THE BISECTION METHOD.  ANGL0 IS
!             A MAXIMUM AND ANGL0 MINUS ITS BENDING IS A MINIMUM.
              IF(JITER.EQ.1)THEN
                  ANGMN=ANGL0-BEND
                  OBZENX=ANGMN
              ELSE
                  IF(ANGERR.GT.0.D0)THEN
                      ANGMX=OBZENX
                  ELSE
                      ANGMN=OBZENX
                  ENDIF
                  OBZENX=(ANGMX+ANGMN)/2
              ENDIF
          ENDDO
          LNMESS=40
          MESSAG='THE SOLAR ZENITH ANGLE DID NOT CONVERGE.'
          WRITE(IPR,'(2A,F12.5,A)')                                     &
     &      ' AFTER 12 ITERATIONS, THE SOLAR ZENITH EXITING',           &
     &      ' THE ATMOSPHERE IS STILL IN ERROR BY',ANGERR,'DEG'
   10     CONTINUE

!         LOAD AMOUNTS FROM WTOTAL(IEXT) INTO WSPTH(IEXT,ISEG,1)
          IF(MSPATH)THEN

!             STORE SOLAR ZENITH DATA FOR MULTIPLE SCATTERING:
              CALL SOLZEN(ISEG,NSEGP1,REARTH,DEG,SNGL(OBZENX))

!             WRITE SOLAR SCATTER PATH DATA:
              IF(.NOT.LJMASS)WRITE(IPR,'(I4,6F11.5,3X,A)')ISEG,H1ALTX,  &
     &          BETAST,OBZENX,THTST,PSIST,OBZENX,MESSAG(1:LNMESS)

!             VERTICAL MULTIPLE SCATTERING PATH:
              DO IEXT=0,MEXTX+NMOLY
                  WSPTHM(IEXT,ISEG)=WTOTAL(IEXT)
              ENDDO
              IF(LSAP)THEN
                  DO IWVSAP=1,NWVSAP
                      XSAPSM(IWVSAP,ISEG)=XSAPM(IWVSAP,0)
                      ASAPSM(IWVSAP,ISEG)=ASAPM(IWVSAP,0)
                  ENDDO
              ENDIF

!             WHEN THE MODERATE RESOLUTION OPTION IS USED, A
!             CURTIS-GODSON AVERAGE PRESSURE, PSATM, AND
!             TEMPERATURE, TSSEG, IS DEFINED FOR THE SCATTERING
!             POINT TO EXTRATERRESTRIAL SOURCE "LAYER":
              IF(MODTRN)THEN
                  DO IEXT=1,NMOLT
                      MOLPNT=MPOINT(IEXT)
                      TNUM=0.
                      DENOM=0.
                      IF(IEXT.LE.NMOL .OR. (IEXT.GT.NMOLXT              &
     &                  .AND. IEXT.LE.NMOLXT+NMOLYS))THEN
                          PNUM=0.
                          DO IK=1,NSEG(0)
                              COLDEN=WPTH(MOLPNT,IK,0)
                              IF(COLDEN.GT.0.)THEN
                                  TNUM=TNUM+TSEG(IK,0)*COLDEN
                                  PNUM=PNUM+PATM(IK,0)*COLDEN
                                  DENOM=DENOM+COLDEN
                              ENDIF
                          ENDDO
                          IF(DENOM.GT.0.)THEN
                              TSSEGM(IEXT,ISEG)=TNUM/DENOM
                              PSATMM(IEXT,ISEG)=PNUM/DENOM
                          ELSE

!                             GEO NOT CALLED; USE TOP-OF-ATMOSPHERE:
                              TSSEGM(IEXT,ISEG)=TM(ML)
                              PSATMM(IEXT,ISEG)=PM(ML)/PZERO
                          ENDIF
                      ELSE
                          DO IK=1,NSEG(0)
                              COLDEN=WPTH(MOLPNT,IK,0)
                              IF(COLDEN.GT.0.)THEN
                                  TNUM=TNUM+TSEG(IK,0)*COLDEN
                                  DENOM=DENOM+COLDEN
                              ENDIF
                          ENDDO
                          IF(DENOM.GT.0.)THEN
                              TSSEGM(IEXT,ISEG)=TNUM/DENOM
                          ELSE

!                             GEO NOT CALLED; USE TOP-OF-ATMOSPHERE:
                              TSSEGM(IEXT,ISEG)=TM(ML)
                          ENDIF
                      ENDIF
                  ENDDO
              ENDIF

!         STORE SOLAR AND PATH ANGLES FOR DISORT CALCULATION:
          ELSE

!             SINGLE SCATTER ANGLES AND PHASE FUNCTIONS:
              PHSCOS(ISEGM1,ILOS)=SNGL(COSSCT(OBZENX,THTST,PSIST,IARB))
              PHSANG(ISEGM1,ILOS)=DEG*ACOS(PHSCOS(ISEGM1,ILOS))

!             COSINE INTERPOLATION DATA FOR SPECTRAL AEROSOL PROFILES:
              IF(LSAP)THEN
                  DO ICOS=2,NANSAP
                      IF(SNGL(COSSAP(ICOS)).LE.PHSCOS(ISEGM1,ILOS))     &
     &                  GOTO 20
                  ENDDO
   20             CONTINUE
                  ICSSAP(ISEG)=ICOS
                  FCSSAP(ISEG)=(PHSCOS(ISEGM1,ILOS)-SNGL(COSSAP(ICOS))) &
     &              /SNGL(COSSAP(ICOS-1)-COSSAP(ICOS))
              ENDIF

!             BRANCH BASED ON SCATTERING PHASE FUNCTION TYPE:
              IF(IPH.EQ.0)THEN

!                 LOAD HENYEY-GREENSTEIN PHASE FUNCTION ARRAY:
                  PF_HG(ISEGM1,ILOS)=HENGNS(G,PHSCOS(ISEGM1,ILOS))
              ELSEIF(IPH.EQ.1)THEN

!                 SET UP SCATTERING ANGLE INTERPOLATION:
                  IF(PHSANG(ISEGM1,ILOS).LE.ANGF(1))THEN
                      IUPPHS(ISEGM1,ILOS)=2
                      PHSFAC(ISEGM1,ILOS)=0.
                  ELSE
                      DO IANGLS=2,NANGLS
                          IF(PHSANG(ISEGM1,ILOS).LT.ANGF(IANGLS))THEN
                              IUPPHS(ISEGM1,ILOS)=IANGLS
                              PHSFAC(ISEGM1,ILOS)                       &
     &                          =(PHSANG(ISEGM1,ILOS)-ANGF(IANGLS-1))   &
     &                          /(ANGF(IANGLS)-ANGF(IANGLS-1))
                              GOTO 30
                          ENDIF
                      ENDDO
                      IUPPHS(ISEGM1,ILOS)=NANGLS
                      PHSFAC(ISEGM1,ILOS)=1.
                  ENDIF
              ENDIF
   30         CONTINUE

!             LOAD WATER DROPLET HENYEY-GREENSTEIN PHASE FUNCTION.
              IF(ABS(ASYMWD).LT.1.)                                     &
     &          PF_WAT(ISEGM1,ILOS)=HENGNS(ASYMWD,PHSCOS(ISEGM1,ILOS))

!             LOAD ICE PARTICLE HENYEY-GREENSTEIN PHASE FUNCTION.
              IF(ABS(ASYMIP).LT.1.)                                     &
     &          PF_ICE(ISEGM1,ILOS)=HENGNS(ASYMIP,PHSCOS(ISEGM1,ILOS))

!             WRITE SOLAR SCATTER PATH DATA.
              IF(.NOT.LJMASS)                                           &
     &          WRITE(IPR,'(I4,6F11.5,3X,A)')ISEG,H1ALTX,BETAST,        &
     &          OBZENX,THTST,PSIST,PHSANG(ISEGM1,ILOS),MESSAG(1:LNMESS)

!             LINE-OF-SIGHT PATH:
              IF(.NOT.DIS)THEN

!                 SET UMU0 FOR CALCULATION OF DIRECTIONAL REFLECTIVITY:
                  IF(ILOS.EQ.1)UMU0=CSZEN0(1)
              ELSEIF(IMULT.EQ.1 .AND. ISEG.EQ.1)THEN

!                 ANGLES AT SENSOR (H1ALT) ARE TO BE USED:
                  PHI1(ILOS)=SNGL(ABS(PSIST))
                  UMU1(ILOS)=-SNGL(COS(THTST/DPDEG))
                  CSSCAT(ILOS)=PHSCOS(0,ILOS)

!                 SOLAR ANGLE SET BY FIRST LINE-OF-SIGHT:
                  IF(ILOS.EQ.1)THEN

!                     SOLAR ANGLE NEAR GAUSSIAN ANGLE TEST:
                      UMU0=COS(SNGL(OBZENX)/DEG)
                      CALL QGAUSN(NSTRH,GMU,GWT)
                      CALL ZNTEST(NSTRH,UMU0,GMU)
                  ENDIF
                  CO_LIN(ILOS)=CSSCAT(ILOS).LT.-.99 .AND.               &
     &              PTHALT(0,ILOS).GE.ZMAX .AND. UMU0.GT..02
              ELSEIF(IMULT.EQ.-1)THEN

!                 ANGLES AT H2ALT ARE TO BE USED:
                  IF(H2ALT.NE.0.D0 .AND. ITYPE.EQ.3)THEN

!                     H2ALT IS A TANGENT POINT, BUT DISORT (BEING PLANE
!                     PARALLEL) WILL NOT ACCEPT A 90 DEG PATH_ZENITH.
!                     REQUIRE |COS(PATH_ZENITH)| TO EXCEED .05
!                     (PATH_ZENITH < 87.134 OR PATH_ZENITH > 92.866)
                      IF(ISEG.EQ.1)THEN

!                         INITIALIZE THE ANGLES AT H1ALT:
                          PHI1(ILOS)=SNGL(ABS(PSIST))
                          UMU1(ILOS)=-SNGL(COS(THTST/DPDEG))
                          CSSCAT(ILOS)=PHSCOS(0,ILOS)

!                         SOLAR ANGLE SET BY FIRST LINE-OF-SIGHT:
                          IF(ILOS.EQ.1)THEN

!                             SOLAR ANGLE NEAR GAUSSIAN ANGLE TEST:
                              UMU0=COS(SNGL(OBZENX)/DEG)
                              CALL QGAUSN(NSTRH,GMU,GWT)
                              CALL ZNTEST(NSTRH,UMU0,GMU)
                          ENDIF
                          AUMU1=ABS(UMU1(ILOS))
                          CO_LIN(ILOS)=CSSCAT(ILOS).LT.-.99 .AND.       &
     &                      PTHALT(0,ILOS).GE.ZMAX .AND. UMU0.GT..02
                      ELSE
                          UMU1L=-SNGL(COS(THTST/DPDEG))
                          AUMU1L=ABS(UMU1L)
                          IF(AUMU1L.GT..05 .AND. AUMU1L.LT.AUMU1)THEN
                              PHI1(ILOS)=SNGL(ABS(PSIST))
                              UMU1(ILOS)=UMU1L
                              CSSCAT(ILOS)=PHSCOS(ISEGM1,ILOS)

!                             SOLAR ANGLE SET BY FIRST LINE-OF-SIGHT:
                              IF(ILOS.EQ.1)THEN

!                                 SOLAR ANGLE NEAR GAUSSIAN ANGLE TEST:
                                  UMU0=COS(SNGL(OBZENX)/DEG)
                                  CALL ZNTEST(NSTRH,UMU0,GMU)
                              ENDIF
                              AUMU1=ABS(UMU1(ILOS))
                              CO_LIN(ILOS)=CSSCAT(ILOS).LT.-.99 .AND.   &
     &                          PTHALT(0,ILOS).GE.ZMAX .AND. UMU0.GT..02
                          ENDIF
                      ENDIF
                  ELSEIF(ISEG.EQ.NSEGP1)THEN
                      PHI1(ILOS)=SNGL(ABS(PSIST))
                      UMU1(ILOS)=-SNGL(COS(THTST/DPDEG))
                      CSSCAT(ILOS)=PHSCOS(NSEGP1-1,ILOS)

!                     SOLAR ANGLE SET BY FIRST LINE-OF-SIGHT:
                      IF(ILOS.EQ.1)THEN

!                         SOLAR ANGLE NEAR GAUSSIAN ANGLE TEST:
                          UMU0=COS(SNGL(OBZENX)/DEG)
                          CALL QGAUSN(NSTRH,GMU,GWT)
                          CALL ZNTEST(NSTRH,UMU0,GMU)
                      ENDIF
                      CO_LIN(ILOS)=CSSCAT(ILOS).LT.-.99 .AND.           &
     &                  PTHALT(0,ILOS).GE.ZMAX .AND. UMU0.GT..02
                  ENDIF
              ENDIF

!             LINE-OF-SIGHT PATH:
              IF(ISEG.GT.1 .AND. WTOTAL(36).GE.0. .AND. KNTRVL.EQ.1)THEN

!                 L-SHAPED [ISEG.GT.1] LINE-OF-SIGHT PATH
!                 [MSPATH=.FALSE.] NOT IN SHADOW [WTOTAL(36).GT.0.]
!                 AND NO CORRELATED-K [KNTRVL.EQ.1].  ADD OBSERVER
!                 TO SCATTERING POINT PATH AMOUNTS TO W FOR ALL BUT
!                 THE MODTRAN BAND MODEL ABSORBERS.
                  DO IEXT=0,MEXTX+NMOLY
                      WPSUM(IEXT)=WPSUM(IEXT)+WPTH(IEXT,ISEGM1,ILOS)
                      WSPTH(IEXT,ISEG,ILOS)=WTOTAL(IEXT)+WPSUM(IEXT)
                  ENDDO
                  IF(LSAP)THEN
                      DO IWVSAP=1,NWVSAP
                          SMSAPX(IWVSAP)                                &
     &                      =SMSAPX(IWVSAP)+XSAP(IWVSAP,ISEGM1,ILOS)
                          XSAPS(IWVSAP,ISEG,ILOS)                       &
     &                      =XSAP(IWVSAP,0,ILOS)+SMSAPX(IWVSAP)
                          SMSAPA(IWVSAP)                                &
     &                      =SMSAPA(IWVSAP)+ASAP(IWVSAP,ISEGM1,ILOS)
                          ASAPS(IWVSAP,ISEG,ILOS)                       &
     &                      =ASAP(IWVSAP,0,ILOS)+SMSAPA(IWVSAP)
                      ENDDO
                  ENDIF
                  IF(MODTRN)THEN
                      IF(AMOD3D.EQ.'C')THEN

!                         MCSCENE COLUMN DENSITIES:
                          WLH2O(ISEG)=WSPTH(17,ISEG,ILOS)
                          WLCO2(ISEG)=WSPTH(36,ISEG,ILOS)
                          WLO3(ISEG)=WSPTH(31,ISEG,ILOS)
                          WH2O(ISEG)=WPSUM(17)
                          WCO2(ISEG)=WPSUM(36)
                          WO3(ISEG)=WPSUM(31)
                          WLAUX(ISEG)=0.
                          WAUX(ISEG)=0.
                          DO IEXT=MEXTX+1,MEXTX+NMOLY
                              WLAUX(ISEG)                               &
     &                          =WLAUX(ISEG)+WSPTH(IEXT,ISEG,ILOS)
                              WAUX(ISEG)=WAUX(ISEG)+WPSUM(IEXT)
                          ENDDO
                      ENDIF
                      DO IEXT=1,NMOL
                          MOLPNT=MPOINT(IEXT)
                          WSPTH(MOLPNT,ISEG,ILOS)=WTOTAL(MOLPNT)
                      ENDDO
                  ENDIF
              ELSE
                  DO IEXT=0,MEXTX+NMOLY
                      WSPTH(IEXT,ISEG,ILOS)=WTOTAL(IEXT)
                  ENDDO
                  IF(LSAP)THEN
                      DO IWVSAP=1,NWVSAP
!**************** VINCENT ROSS MODIFIED TO SOLVE BUG ******************
                          XSAPS(IWVSAP,ISEG,ILOS)=XSAP(IWVSAP,0,ILOS-1)
                          ASAPS(IWVSAP,ISEG,ILOS)=ASAP(IWVSAP,0,ILOS-1)
!VR                          XSAPS(IWVSAP,ISEG,ILOS)=XSAP(IWVSAP,0,ILOS)
!VR                          ASAPS(IWVSAP,ISEG,ILOS)=ASAP(IWVSAP,0,ILOS)
!*********************** END VINCENT ROSS *****************************
                      ENDDO
                  ENDIF
              ENDIF

!             WHEN THE MODERATE RESOLUTION OPTION IS USED, A
!             CURTIS-GODSON AVERAGE PRESSURE, PSATM, AND
!             TEMPERATURE, TSSEG, IS DEFINED FOR THE SCATTERING
!             POINT TO EXTRATERRESTRIAL SOURCE "LAYER":
              IF(MODTRN)THEN
                  DO IEXT=1,NMOLT
                      MOLPNT=MPOINT(IEXT)
                      TNUM=0.
                      DENOM=0.
                      LKBAND=IEXT.LE.NMOL .OR.                          &
     &                  (IEXT.GT.NMOLXT .AND. IEXT.LE.NMOLXT+NMOLYS)
                      IF(LKBAND)PNUM=0.
                      DO IK=1,NSEG(0)
                          COLDEN=WPTH(MOLPNT,IK,0)
                          IF(COLDEN.GT.0.)THEN
                              TNUM=TNUM+TSEG(IK,0)*COLDEN
                              IF(LKBAND)PNUM=PNUM+PATM(IK,0)*COLDEN
                              DENOM=DENOM+COLDEN
                          ENDIF
                      ENDDO
                      IF(DENOM.GT.0.)THEN
                          TSSEG(IEXT,ISEG,ILOS)=TNUM/DENOM
                          IF(LKBAND)PSATM(IEXT,ISEG,ILOS)=PNUM/DENOM
                      ELSE

!                         GEO NOT CALLED; USE TOP-OF-ATMOSPHERE VALUES:
                          TSSEG(IEXT,ISEG,ILOS)=TM(ML)
                          IF(LKBAND)PSATM(IEXT,ISEG,ILOS)=PM(ML)/PZERO
                      ENDIF
                  ENDDO
              ENDIF
          ENDIF
          ISEGM1=ISEG
      ENDDO
      IF(AMOD3D.EQ.'C')THEN
          IF(LBMRES)THEN
              WRITE(IDBOUT,'((F13.2,A))')                               &
     &          HBNDWD,' SPECTRAL BAND HALF-WIDTH [CM-1].',             &
     &          IV2-OSHIFT,' MAXIMUM SPECTRAL FREQUENCY [CM-1].',       &
     &          IV1-OSHIFT,' MINIMUM SPECTRAL FREQUENCY [CM-1].'
          ELSE
              WRITE(IDBOUT,'(9X,A,/(F13.2,A))')                         &
     &          '0.50 SPECTRAL BAND HALF-WIDTH [NM].',                  &
     &          DBLE(INT(1.E7/(IV2-OSHIFT+.5)+1.5)),                    &
     &          ' MINIMUM SPECTRAL WAVELENGTH [NM].',                   &
     &          DBLE(INT(1.E7/(IV1+OSHIFT+.5)+0.5)),                    &
     &          ' MAXIMUM SPECTRAL WAVELENGTH [NM].'
          ENDIF
          WRITE(IDBOUT,'(I13,A,/(F13.4,A))')                            &
     &      NINT(1000*H1ALT),' SENSOR ALTITUDE [M].',                   &
     &      THTST,' SENSOR ZENITH AT GROUND [DEG].',                    &
     &      OBZENX,' SOLAR  ZENITH AT GROUND [DEG].'
          WRITE(IDBOUT,'((I13,A))')                                     &
     &      NSEG(0),' NUMBER OF ATMOSPHERE LAYERS.',                    &
     &      NSEGP1,' NUMBER OF PATH LEVELS.'
          DO ISEG=1,ML
              YDENSM(ISEG)=0.
              DO IEXT=MEXTX+1,MEXTX+NMOLY
                  YDENSM(ISEG)=YDENSM(ISEG)+DENSTY(IEXT,ISEG)
              ENDDO
          ENDDO
          WRITE(IDBOUT,'(/A,/(I6,1X,0P,F12.7,1X,F9.3,1P,4(1X,E15.7)))') &
     &      'ALT[M]   PRES[MBAR]   TEMP[K]  H2O[ATM-CM/HM]'//           &
     &      '  CO2[ATM-CM/HM]   O3[ATM-CM/HM]  AUX[ATM-CM/HM]',         &
     &      (NINT(1000*ZM(ISEG)),DBLE(PM(ISEG)),TM(ISEG),               &
     &      .1*DENSTY(17,ISEG),.1*DENSTY(36,ISEG),.1*DENSTY(31,ISEG),   &
     &      .1*YDENSM(ISEG),ISEG=NSEG(0)+1,1,-1)
          WLAUX(1)=0.
          DO IEXT=1,NMOLY
              WLAUX(1)=WLAUX(1)+WSPTH(MEXTX+IEXT,1,1)
          ENDDO
          WRITE(IDBOUT,'(/2A,/(I6,8(1X,1P,E15.7)))')                    &
     &      'ALT[M]   L-H2O[ATM-CM]   L-CO2[ATM-CM]    L-O3[ATM-CM]'    &
     &          //'   L-AUX[ATM-CM]     H2O[ATM-CM]     CO2[ATM-CM]',   &
     &            '      O3[ATM-CM]     AUX[ATM-CM]',                   &
     &      NINT(1000*PTHALT(0,ILOS)),WSPTH(17,1,1),WSPTH(36,1,1),      &
     &      WSPTH(31,1,1),WLAUX(1),0.,0.,0.,0.,                         &
     &      (NINT(1000*PTHALT(ISEG-1,ILOS)),WLH2O(ISEG),WLCO2(ISEG),    &
     &      WLO3(ISEG),WLAUX(ISEG),WH2O(ISEG),WCO2(ISEG),               &
     &      WO3(ISEG),WAUX(ISEG),ISEG=2,NSEGP1)
      ENDIF

!     RESTORE OPTICAL PATH AMOUNTS:
      DO J=1,NSEGP1
          LAYSEG(J)=LSEGSV(J)
      ENDDO
      JTURN=JTRNSV
      ITYPE=ITYPSV
      NPR=NOPRNT
      DO IEXT=0,MEXTX+NMOLY
          WTOTAL(IEXT)=WSAV(IEXT)
      ENDDO

!     RETURN IF MULTIPLE SCATTERING PATH:
      IF(MSPATH)RETURN

!     DETERMINE LINE-OF-SIGHT DEPENDENT LEGENDRE EXPANSION COEFFICIENTS:
      CSNSRF(ILOS)=COS(SNGL(OBZENX)/DEG)
      IF(PSIST.GE.0.D0)THEN
          AZMSRF(ILOS)=PI-SNGL(PSIST/DPDEG)
      ELSE
          AZMSRF(ILOS)=-SNGL(PSIST/DPDEG)-PI
      ENDIF

!     CONFIRM THAT |UMU1| > .05 AND |UMU0+UMU1| > .002:
!*************VINCENT ROSS CHANGED FOR BETTER HORIZONTAL CALC***************
#ifdef DISORT_HORIZON
      IF(ABS(UMU1(ILOS)).LT..002)THEN
          IF(UMU1(ILOS).GE.0.)THEN
              UMU1(ILOS)=.002
          ELSE
              UMU1(ILOS)=-.002
          ENDIF
      ENDIF
#else
      IF(ABS(UMU1(ILOS)).LT..05)THEN
          IF(UMU1(ILOS).GE.0.)THEN
              UMU1(ILOS)=.05
          ELSE
              UMU1(ILOS)=-.05
          ENDIF
      ENDIF
#endif
!****************************END VINCENT ROSS********************************
      IF(ABS(UMU1(ILOS)+UMU0).LT..002)THEN
          IF(UMU0.GT..5)THEN
              UMU1(ILOS)=-(UMU0-.002)
          ELSE
              UMU1(ILOS)=-(UMU0+.002)
          ENDIF
      ENDIF

!     DISORT?
      IF(DIS)THEN

!         ADD UMU1 TO LIST OF MONOTONICALLY INCREASING USER COSINES:
          CALL UMULST(ILOS,UMU1(ILOS))

!         ADD PHI1 TO INCREASING SOLAR RELATIVE AZIMUTH ANGLES LIST:
          CALL PHILST(ILOS,PHI1(ILOS))

!         LEGENDRE POLYNOMIAL AT THE SCATTERING ANGLE:
          IF(DISAZM)THEN
              CALL LEPOLY(1,0,MAZ,NSTR-1,CSSCAT(ILOS),SLEGEN(0,ILOS))
              DO ISTR=0,NSTR-1
                  SLEGEN(ISTR,ILOS)=SLEGEN(ISTR,ILOS)*(ISTR+.5)/(2*PI)
              ENDDO
          ENDIF
      ENDIF

!     RETURN TO GEODRV:
      RETURN
      END

      SUBROUTINE ZNTEST(NSTRH,UMU0,GMU)

!     ZNTEST DETERMINES IF THE SOLAR ZENITH IS TOO CLOSE TO ONE OF THE
!     GAUSSIAN ANGLES, AND, IF SO, IT PERTURBS THE COSINE SOLAR ZENITH.
      IMPLICIT NONE

!     COMMONS:
      INCLUDE 'IFIL.h'

!     INPUT ARGUMENTS:
!       NSTRH    HALF THE NUMBER OF DISCRETE ORDINATE STREAMS.
!       UMU0     COSINE OF THE DISORT SOLAR ZENITH ANGLE.
!       GMU      ARRAY OF GAUSSIAN QUADRATURE ABSCISSAE.

!     OUTPUT ARGUMENTS:
!       UMU0     UPDATED NUMBER OF DISCRETE ORDINATE STREAMS.
      INTEGER NSTRH
      REAL UMU0,GMU(NSTRH)

!     LOCAL VARIABLES:
!       ISTR     DISCRETE ORDINATE STREAM INDEX.
!       UMU0T    GAUSSIAN ANGLE NEAR SOLAR ANGLE TOLERANCE LEVEL.
      INTEGER ISTR
      REAL UMU0T

!     LOOP OVER GAUSSIAN ANGLES:
      UMU0T=UMU0/10000
      DO ISTR=1,NSTRH
          IF(ABS(GMU(ISTR)-UMU0).LE.UMU0T)THEN

!             SOLAR ZENITH TOO CLOSE TO GAUSSIAN ANGLE:
              IF(UMU0.GT.GMU(ISTR))THEN

!                 SET UMU0 ABOVE THE GAUSSIAN VALUE:
                  WRITE(IPR,'(/A,F10.7,A,/20X,2(A,F10.7))')             &
     &              'WARNING from SSGEO:  The cosine solar zenith (',   &
     &              UMU0,') is too close to one of the Gaussian',       &
     &              ' angle values (',GMU(ISTR),'); it is being'//      &
     &              ' increased to',GMU(ISTR)+1.01*UMU0T
                  UMU0=GMU(ISTR)+1.01*UMU0T
              ELSE

!                 SET UMU0 BELOW THE GAUSSIAN VALUE:
                  WRITE(IPR,'(/A,F10.7,A,/20X,2(A,F10.7))')             &
     &              'WARNING from SSGEO:  The cosine solar zenith (',   &
     &              UMU0,') is too close to one of the Gaussian',       &
     &              ' angle values (',GMU(ISTR),'); it is being'//      &
     &              ' decreased to',GMU(ISTR)-1.01*UMU0T
                  UMU0=GMU(ISTR)-1.01*UMU0T
              ENDIF

!             RETURN TO SSGEO WITH UPDATED NSTR VALUE:
              RETURN
          ENDIF
      ENDDO

!     ORIGINAL UMU0 VALUE IS OKAY:  RETURN TO SSGEO.
      RETURN
      END

      SUBROUTINE UMULST(ILOS,UMU1)

!     CREATES MONOTONICALLY INCREASING LIST OF UMU1 VALUES:
      IMPLICIT NONE

!     PARAMETERS:
!       UMUTOL   TOLERANCE FOR DISTINCT COSINE POLAR ANGLES.
      INCLUDE 'PARAMS.h'
      REAL UMUTOL
      PARAMETER(UMUTOL=.0001)

!     INPUT ARGUMENTS:
!       ILOS     PATH LINE-OF-SIGHT INDEX.
!       UMU1     COSINE OF THE PATH NADIR ANGLE.
      INTEGER ILOS
      REAL UMU1

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
      REAL UMU,PHI
      INTEGER NSTR,NAZ,N2GAUS,NUMU,MAPUMU,NPHI,MAPPHI
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      COMMON/DISRT/UMU(MXUMU),PHI(MAXPHI),NSTR,NAZ,N2GAUS,NUMU,         &
     &  MAPUMU(MLOS),NPHI,MAPPHI(MLOS),DIS,DISAZM,DISALB,LDISCL
      SAVE /DISRT/

!     LOCAL VARIABLES:
!       IUMU     FIRST LOOP INDEX FOR DISTINCT USER POLAR ANGLES.
!       JUMU     SECOND LOOP INDEX FOR DISTINCT USER POLAR ANGLES.
!       LOS      LOOP INDEX FOR PATH LINES-OF-SIGHT.
      INTEGER IUMU,JUMU,LOS

!     BUBBLE UP TECHNIQUE FOR CREATING MONOTONIC LIST:
      IF(ILOS.EQ.1)THEN

!         FIRST VALUE:  INITIATE LIST.
          NUMU=1
          UMU(1)=UMU1
          MAPUMU(1)=1

!         RETURN TO GEO:
          RETURN
      ENDIF

!     COMPARE UMU1 TO CURRENT MONOTONICALLY INCREASING LIST:
      DO IUMU=1,NUMU
          IF(UMU1.LT.UMU(IUMU)+UMUTOL)THEN

!             DOES UMU1 DIFFER FROM UMU(IUMU) MORE THAN TOLERANCE?
              IF(UMU1.LT.UMU(IUMU)-UMUTOL)THEN

!                 CHECK UMU ARRAY DIMENSION:
                  IF(NUMU.GE.MXUMU)THEN
                      WRITE(IPR,'(/2A)')' Error in UMULST:  Parameter', &
     &                  ' MXUMU must be increased to accommodate'       &
     &                  //' list of distinct user-path cosines.'
                      STOP 'Parameter MXUMU must be increased!'
                  ENDIF

!                 MOVE UMU VALUES UP TO MAKE ROOM FOR UMU1:
                  DO JUMU=NUMU,IUMU,-1
                      UMU(JUMU+1)=UMU(JUMU)
                  ENDDO

!                 REASSIGN MAPUMU TO MATCH NEW LOCATIONS:
                  DO LOS=1,ILOS-1
                      IF(MAPUMU(LOS).GE.IUMU)MAPUMU(LOS)=MAPUMU(LOS)+1
                  ENDDO

!                 ADD UMU1 TO UMU LIST:
                  NUMU=NUMU+1
                  UMU(IUMU)=UMU1
              ENDIF

!             MAPUMU IS DEFINED EVEN IF UMU1 IS NOT ADDED TO LIST:
              MAPUMU(ILOS)=IUMU

!             RETURN TO GEO:
              RETURN
          ENDIF
      ENDDO

!     CHECK UMU ARRAY DIMENSION:
      IF(NUMU.GE.MXUMU)THEN
          WRITE(IPR,'(/A)')                                             &
     &      ' Error in UMULST:  Parameter MXUMU must be increased'      &
     &      //' to accommodate list of distinct user-path cosines'
          STOP 'Parameter MXUMU must be increased for path cosine list!'
      ENDIF

!     ADD UMU1 TO END OF UMU LIST:
      NUMU=NUMU+1
      UMU(NUMU)=UMU1
      MAPUMU(ILOS)=NUMU

!     RETURN TO GEO:
      RETURN
      END

      SUBROUTINE PHILST(ILOS,PHI1)

!     CREATES MONOTONICALLY INCREASING LIST OF PHI1 VALUES:
      IMPLICIT NONE

!     PARAMETERS:
!       PHITOL   TOLERANCE FOR DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
      INCLUDE 'PARAMS.h'
      REAL PHITOL
      PARAMETER(PHITOL=.001)

!     INPUT ARGUMENTS:
!       ILOS     PATH LINE-OF-SIGHT INDEX.
!       PHI1     SOLAR RELATIVE AZIMUTH ANGLE [0 TO 180 DEGREES].
      INTEGER ILOS
      REAL PHI1

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
      REAL UMU,PHI
      INTEGER NSTR,NAZ,N2GAUS,NUMU,MAPUMU,NPHI,MAPPHI
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      COMMON/DISRT/UMU(MXUMU),PHI(MAXPHI),NSTR,NAZ,N2GAUS,NUMU,         &
     &  MAPUMU(MLOS),NPHI,MAPPHI(MLOS),DIS,DISAZM,DISALB,LDISCL
      SAVE /DISRT/

!     LOCAL VARIABLES:
!       IPHI     FIRST LOOP INDEX FOR DISTINCT USER POLAR ANGLES.
!       JPHI     SECOND LOOP INDEX FOR DISTINCT USER POLAR ANGLES.
!       LOS      LOOP INDEX FOR PATH LINES-OF-SIGHT.
      INTEGER IPHI,JPHI,LOS

!     BUBBLE UP TECHNIQUE FOR CREATING MONOTONIC LIST:
      IF(ILOS.EQ.1)THEN

!         FIRST VALUE:  INITIATE LIST.
          NPHI=1
          PHI(1)=PHI1
          MAPPHI(1)=1

!         RETURN TO GEO:
          RETURN
      ENDIF

!     COMPARE PHI1 TO CURRENT MONOTONICALLY INCREASING LIST:
      DO IPHI=1,NPHI
          IF(PHI1.LT.PHI(IPHI)+PHITOL)THEN

!             DOES PHI1 DIFFER FROM PHI(IPHI) MORE THAN TOLERANCE?
              IF(PHI1.LT.PHI(IPHI)-PHITOL)THEN

!                 CHECK PHI ARRAY DIMENSION:
                  IF(NPHI.GE.MAXPHI)THEN
                      WRITE(IPR,'(/2A)')' Error in PHILST:  Parameter', &
     &                  ' MAXPHI must be increased to accommodate list' &
     &                  //' of distinct relative solar azimuth angles!'
                      STOP 'Parameter MAXPHI must be increased!'
                  ENDIF

!                 MOVE PHI VALUES UP TO MAKE ROOM FOR PHI1:
                  DO JPHI=NPHI,IPHI,-1
                      PHI(JPHI+1)=PHI(JPHI)
                  ENDDO

!                 REASSIGN MAPPHI TO MATCH NEW LOCATIONS:
                  DO LOS=1,ILOS-1
                      IF(MAPPHI(LOS).GE.IPHI)MAPPHI(LOS)=MAPPHI(LOS)+1
                  ENDDO

!                 ADD PHI1 TO PHI LIST:
                  NPHI=NPHI+1
                  PHI(IPHI)=PHI1
              ENDIF

!             MAPPHI IS DEFINED EVEN IF PHI1 IS NOT ADDED TO LIST:
              MAPPHI(ILOS)=IPHI

!             RETURN TO GEO:
              RETURN
          ENDIF
      ENDDO

!     CHECK PHI ARRAY DIMENSION:
      IF(NPHI.GE.MAXPHI)THEN
          WRITE(IPR,'(/A)')                                             &
     &      ' Error in PHILST:  Increase parameter MAXPHI to accommo'   &
     &      //'date list of distinct relative solar azimuth angles!'
          STOP 'Increase parameter MAXPHI for relative solar azm list!'
      ENDIF

!     ADD PHI1 TO END OF PHI LIST:
      NPHI=NPHI+1
      PHI(NPHI)=PHI1
      MAPPHI(ILOS)=NPHI

!     RETURN TO GEO:
      RETURN
      END
