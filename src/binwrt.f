      SUBROUTINE BN_SEP()

!     SUBROUTINES TO WRITE IN BINARY FILE.  UGLINESS OF THESE ROUTINES
!     IS DICTATED BY THE FACT THAT FORTRAN77 CANNOT SUPPORT OPTIONAL
!     ARGUMENTS TO THE SUBROUTINE.  AS A RESULT, SEPARATE SUBROUTINE ARE
!     PROVIDED FOR EACH WRITE.  WRITES A SEPARATOR FOR SEQUENTIAL RUNS
!     FROM A SINGLE INPUT STREAM.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'
      INTEGER IC,I,KCHAR
      REAL RBUF(BUFFSZ)
      COMMON/BINBUF/RBUF,IC,KCHAR

!     EQUIVALENCE VARIABLES:
      INTEGER IBUF(BUFFSZ)
      EQUIVALENCE(RBUF,IBUF)

!     MAKE SURE THAT THERE IS AT LEAST ONE WORD
      IF(IC.GT.BUFFSZ)CALL BFLUSH()
      IBUF(IC)=BINSPR
      IC=IC+1
      DO I=IC,BUFFSZ
          IBUF(I)=0
      ENDDO

!     NEW RUN FROM THE FIRST WORD
      CALL BFLUSH()
      RETURN
      END

      SUBROUTINE BFLUSH()

!     WRITES BUFFER TO DISK
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     COMMONS:
      INCLUDE 'IFIL.h'
      REAL RBUF(BUFFSZ)
      INTEGER IC,KCHAR
      COMMON/BINBUF/RBUF,IC,KCHAR

!     EQUIVALENCE:
      INTEGER IBUF(BUFFSZ)
      DOUBLE PRECISION DBUF(BUFFSZ/2)
      EQUIVALENCE(RBUF,DBUF,IBUF)

!     LOCAL VARIABLES:
      LOGICAL LOPEN
      INQUIRE(JPR1,OPENED=LOPEN)
      IF(LOPEN)WRITE(JPR1)RBUF
      IC=1
      RETURN
      END

      SUBROUTINE PUTSNG(R)
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'
      REAL RBUF(BUFFSZ)
      INTEGER IC,KCHAR
      COMMON/BINBUF/RBUF,IC,KCHAR
      REAL R
      IF(KCHAR.NE.1)THEN
          KCHAR=1
          IC=IC+1
      ENDIF
      IF(IC.GT.BUFFSZ)CALL BFLUSH()
      RBUF(IC)=R
      IC=IC+1
      RETURN
      END

      SUBROUTINE PUTDBL(D)
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'
      REAL RBUF(BUFFSZ)
      INTEGER IC,KCHAR
      COMMON/BINBUF/RBUF,IC,KCHAR
      DOUBLE PRECISION DBUF(BUFFSZ/2)
      EQUIVALENCE(RBUF,DBUF)
      DOUBLE PRECISION D

!     check if there are characters in the buffer (4 char in one real)
      IF(KCHAR.NE.1)THEN
          KCHAR=1
          IC=IC+1
      ENDIF
      IF(MOD(IC,2).EQ.0)THEN

!         FILL THE WASTED SPACE WITH ZER0:
          RBUF(IC)=0.
          IC=IC+1
      ENDIF
      IF(IC.GT.BUFFSZ)CALL BFLUSH()

!     IC IS ODD.
      DBUF(IC/2+1)=D
      IC=IC+2
      RETURN
      END

      SUBROUTINE PUTINT(K)
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'
      REAL RBUF(BUFFSZ)
      INTEGER IC,KCHAR
      COMMON/BINBUF/RBUF,IC,KCHAR
      INTEGER IBUF(BUFFSZ)
      EQUIVALENCE(RBUF,IBUF)
      INTEGER K
      IF(KCHAR.NE.1)THEN
          KCHAR=1
          IC=IC+1
      ENDIF
      IF(IC.GT.BUFFSZ)CALL BFLUSH()
      IBUF(IC)=K
      IC=IC+1
      RETURN
      END

      SUBROUTINE PUTCHR(C)
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'
      REAL RBUF(BUFFSZ)
      INTEGER IC,KCHAR
      CHARACTER*1 CBUF(4*BUFFSZ)
      COMMON/BINBUF/RBUF,IC,KCHAR
      EQUIVALENCE(RBUF,CBUF(1))
      CHARACTER*1 C
      IF(KCHAR.GT.4)THEN
          KCHAR=1
          IC=IC+1
      ENDIF
      IF(IC.GT.BUFFSZ)CALL BFLUSH()
      CBUF(4*(IC-1)+KCHAR)=C
      KCHAR=KCHAR +1
      RETURN
      END

      SUBROUTINE BNWT8(I1,I2,I3,I4,D1,D2,F1,C1)
      IMPLICIT NONE
      INTEGER I1,I2,I3,I4
      DOUBLE PRECISION D1,D2
      REAL F1
      CHARACTER C1
      CALL PUTINT(8)
      CALL PUTINT(8)
      CALL PUTCHR(C1)
      CALL PUTINT(I1)
      CALL PUTINT(I2)
      CALL PUTINT(I3)
      CALL PUTINT(I4)
      CALL PUTDBL(D1)
      CALL PUTDBL(D2)
      CALL PUTSNG(F1)
      RETURN
      END

      SUBROUTINE BNWT13(F1,D2,F3,D4,F5,F6,F7,D8,F9,F10,F11,D12,F13)
      IMPLICIT NONE
      REAL F1,F3,F5,F6,F7,F9,F10,F11,F13
      DOUBLE PRECISION D2,D4,D8,D12
      CALL PUTINT(13)
      CALL PUTINT(13)
      CALL PUTSNG(F1)
      CALL PUTDBL(D2)
      CALL PUTSNG(F3)
      CALL PUTDBL(D4)
      CALL PUTSNG(F5)
      CALL PUTSNG(F6)
      CALL PUTSNG(F7)
      CALL PUTDBL(D8)
      CALL PUTSNG(F9)
      CALL PUTSNG(F10)
      CALL PUTSNG(F11)
      CALL PUTDBL(D12)
      CALL PUTSNG(F13)

!     call from loop lines 685,699,811,825 thirteen numbers
      RETURN
      END

      SUBROUTINE BNWT7(F1,D2,F3,F4,F5,F6,F7)
      IMPLICIT NONE
      REAL F1,F3,F4,F5,F6,F7
      DOUBLE PRECISION D2

!     call from loop line 876,907,917 seven real numbers
      CALL PUTINT(7)
      CALL PUTINT(7)
      CALL PUTSNG(F1)
      CALL PUTDBL(D2)
      CALL PUTSNG(F3)
      CALL PUTSNG(F4)
      CALL PUTSNG(F5)
      CALL PUTSNG(F6)
      CALL PUTSNG(F7)
      RETURN
      END

      SUBROUTINE BNWT9(F1,D2,D3,F4,F5,F6,D7,D8,F9)
      IMPLICIT NONE
      REAL F1,F4,F5,F6,F9
      DOUBLE PRECISION D2,D3,D7,D8

!     call from loop line 644 nine real numbers
      CALL PUTINT(9)
      CALL PUTINT(9)
      CALL PUTSNG(F1)
      CALL PUTDBL(D2)
      CALL PUTDBL(D3)
      CALL PUTSNG(F4)
      CALL PUTSNG(F5)
      CALL PUTSNG(F6)
      CALL PUTDBL(D7)
      CALL PUTDBL(D8)
      CALL PUTSNG(F9)
      RETURN
      END

      SUBROUTINE BNWT4(JKIND,N,NMWAVE,IREC,F)

!     call from mcmol.f line  Jkind=102, ..., 107
      IMPLICIT NONE
      INTEGER JKIND,N,NMWAVE,IREC
      REAL F(*)
      INTEGER I
      CALL PUTINT(JKIND)
      CALL PUTINT(4+N)
      CALL PUTINT(N)
      CALL PUTINT(NMWAVE)
      CALL PUTINT(IREC)
      DO I=1,N+1
          CALL PUTSNG(F(I))
      ENDDO
      RETURN
      END

      SUBROUTINE BNWT4A(JKIND,IHT0,NMWAVE,F)

!     CALL FROM MCCONT.F WITH jKIND=111 OR 112
      IMPLICIT NONE
      INTEGER JKIND,IHT0,NMWAVE
      REAL F
      CALL PUTINT(JKIND)
      CALL PUTINT(3)
      CALL PUTINT(IHT0)
      CALL PUTINT(NMWAVE)
      CALL PUTSNG(F)
      RETURN
      END

      SUBROUTINE BNWT2(N,F)

!     WRITES FROM MCCONT.F LINES 147
      IMPLICIT NONE
      INTEGER N
      REAL F(0:9)
      INTEGER I
      CALL PUTINT(122)
      CALL PUTINT(11)
      CALL PUTINT(N)
      DO I=0,9
          CALL PUTSNG(F(I))
      ENDDO
      RETURN
      END

      SUBROUTINE BNWT3F(F1,F2,F3)

!     writes from trlay.f line 61
      IMPLICIT NONE
      REAL F1,F2,F3
      CALL PUTINT(501)
      CALL PUTINT(3)
      CALL PUTSNG(F1)
      CALL PUTSNG(F2)
      CALL PUTSNG(F3)
      RETURN
      END

      SUBROUTINE BNFLX1(LNFEED,MLFLX)
      IMPLICIT NONE
      INTEGER MLFLX
      CHARACTER*1 LNFEED
      CALL PUTINT(1000)
      CALL PUTINT(2)
      CALL PUTCHR(LNFEED)
      CALL PUTINT(MLFLX)
      RETURN
      END

      SUBROUTINE BNFLX2(FACTOR,SMUPDF,SMDNDF,SMDNDR,MLFLX,ML)

!     BIN WRITE FROM FLXSUM.f
      IMPLICIT NONE
      INTEGER MLFLX,ML
      DOUBLE PRECISION FACTOR,SMUPDF(*),SMDNDF(*),SMDNDR(*)

      INTEGER I
      CALL PUTINT(1001)
      CALL PUTINT(MLFLX+6)
      CALL PUTINT(MLFLX)
      CALL PUTINT(ML)
      CALL PUTDBL(FACTOR)
      DO I=1,MLFLX
          CALL PUTDBL(SMUPDF(I))
          CALL PUTDBL(SMDNDF(I))
          CALL PUTDBL(SMDNDR(I))
      ENDDO
      CALL PUTDBL(SMUPDF(ML))
      CALL PUTDBL(SMDNDF(ML))
      CALL PUTDBL(SMDNDR(ML))
      RETURN
      END

      SUBROUTINE BNFLX3(MLFLX,ML,NFLUX,FWHM,IV1,ZM,IFWHM,               &
     &  BNDWID,XFLAG,CHUNIT,RELABS,LNFEED,FRMT)

!     BIN WRITE FROM FLXTBL
      IMPLICIT NONE
      CHARACTER XFLAG*1,RELABS*1,CHUNIT*1,LNFEED*1,FRMT*50
      INTEGER MLFLX,ML,NFLUX
      REAL IFWHM,FWHM,BNDWID,IV1
      DOUBLE PRECISION ZM(*)
      CHARACTER CHR*1
      INTEGER I
      CALL PUTINT(1002)
      CALL PUTINT(MLFLX+22) !54/4=13.5=14charact +  mlflx+5 real,+ 3 int
      CALL PUTINT(MLFLX)
      CALL PUTINT(ML)
      CALL PUTINT(NFLUX)
      CALL PUTSNG(FWHM)
      CALL PUTSNG(IV1)
      CALL PUTSNG(IFWHM)
      CALL PUTSNG(BNDWID)
      DO I=1,MLFLX
          CALL PUTDBL(ZM(I))
      ENDDO
      CALL PUTDBL(ZM(ML))
      CALL PUTCHR(XFLAG)
      CALL PUTCHR(CHUNIT)
      CALL PUTCHR(RELABS)
      CALL PUTCHR(LNFEED)
      DO I=1,50
          CHR=FRMT(I:I)
          CALL PUTCHR(CHR)
      ENDDO
      RETURN
      END

      SUBROUTINE BNFLX4(CONV,WAVLEN,UDIFF,DDIFF,DDRCT,LAYDIM,ML,MLFLX)
      INTEGER LAYDIM,MLFLX,ML
      DOUBLE PRECISION CONV,WAVLEN,                                     &
     &  UDIFF(LAYDIM),DDIFF(LAYDIM),DDRCT(LAYDIM)
      INTEGER I
      CALL PUTINT(1003)
      CALL PUTINT(MLFLX+7) !size
      CALL PUTINT(MLFLX)
      CALL PUTINT(ML)
      CALL PUTDBL(WAVLEN)
      DO I=1,MLFLX
          CALL PUTDBL(CONV*UDIFF(I))
          CALL PUTDBL(CONV*DDIFF(I))
          CALL PUTDBL(CONV*DDRCT(I))
      ENDDO
      CALL PUTDBL(CONV*UDIFF(ML))
      CALL PUTDBL(CONV*DDIFF(ML))
      CALL PUTDBL(CONV*DDRCT(ML))
      RETURN
      END

      SUBROUTINE BINALB(IV,ILOS,INTRVL,SUBINT,T1,T2,T3,T4,ALBMED)
!     call from wrtalb
      IMPLICIT NONE
      REAL IV,T1,T2,T3,T4,ALBMED,SUBINT
      INTEGER ILOS,INTRVL
      CALL PUTINT(2001)
      CALL PUTINT(9)
      CALL PUTINT(ILOS)
      CALL PUTINT(INTRVL)
      CALL PUTSNG(SUBINT)
      CALL PUTSNG(IV)
      CALL PUTSNG(T1)
      CALL PUTSNG(T2)
      CALL PUTSNG(T3)
      CALL PUTSNG(T4)
      CALL PUTSNG(ALBMED)
      RETURN
      END
