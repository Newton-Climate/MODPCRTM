      SUBROUTINE CKLOS(JNTRVL,ISEG,ILOS)

!     CKLOS RETURNS LINE-OF-SIGHT PATH EXTINCTION OPTICAL
!     DEPTHS FOR THE "JNTRVL" CORRELATED-K (CK) METHOD
!     SUB-INTERVALS OF THE BAND MODEL (BM) SPECTRAL BIN.
      IMPLICIT NONE

!     INPUTS:
!       JNTRVL   NUMBER OF K-DISTRIBUTION INTERVALS FOR CURRENT FREQ.
!       ISEG     SEGMENT INDEX FOR CURRENT PATH.
!       ILOS     LOOP INDEX FOR LINE-OF-SIGHT PATHS.
      INTEGER JNTRVL,ISEG,ILOS

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     COMMONS:
      INCLUDE 'BASE.h'
      INCLUDE 'SEGDAT.h'
      INCLUDE 'BMHEAD.h'
      INCLUDE 'BMDAT.h'
      INCLUDE 'BMPATH.h'

!     /ACTIVE/
!       NACT     NUMBER OF ACTIVE MOLECULES FOR CURRENT FREQUENCY BIN.
!       NACTBM   NUMBER OF ACTIVE BAND MODEL MOLECULES FOR CURRENT FREQ.
!       NACTX    NUMBER OF ACTIVE X & Y CROSS-SECTION MOLECULES.
!       MACTBM   LIST OF ACTIVE BAND MODEL MOLECULES FOR CURRENT FREQ.
!       MACTX    LIST OF ACTIVE X & Y CROSS-SECTION MOLECULES.
      INTEGER NACT,NACTBM,NACTX,MACTBM,MACTX
      COMMON/ACTIVE/NACT,NACTBM,NACTX,MACTBM(MMOLYT),MACTX(NMOLX)

!     LOCAL VARIABLES:
!       ILO_T    LOWER TEMPERATURE GRID INTERPOLATION INDEX.
!       IHI_T    HIGHER TEMPERATURE GRID INTERPOLATION INDEX.
!       MOLSPC   MOLECULAR INDEX.
!       ITLSUB   LOOP INDEX FOR LINE TAIL SUB-INTERVALS.
!       ITLSB1   ITLSUB MINUS 1.
!       IACT     LOOP INDEX FOR ACTIVE MOLECULES.
!       F_TEMP   INTERPOLATION FACTOR (0.=HIGHER, 1.=LOWER TEMPERATURE).
!       COLAMT   SPECIES COLUMN AMOUNT [ATM CM].
!       BEER     BEER'S LAW EXTINCTION COEFFICIENT [CM-1/ATM].
!       SMBEER   SUM OF BEER'S LAW OPTICAL DEPTHS.
!       SMCONT   k-DEPENDENT CONTINUUM OPTICAL DEPTH.
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.
!       SMROOT   MOLECULAR LINE SUM OVER SQUARE ROOT OF LINE STRENGTHS
!                TIMES COLUMN AMOUNT ALL DIVIDED BY BIN WIDTH.
!       SUMDOP   DOPPLER LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       SUMLOR   LORENTZ LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       ABCOEF   MOLECULAR ABSORPTION COEFFICIENT [CM-1/ATM]
!       OPTDEP   MOLECULAR ABSORPTION OPTICAL DEPTH.
!       SPCLIN   LINE SPACING BAND MODEL PARAMETER [CM].
!       SPACMN   MINIMUM LINE SPACING PARAMETER [CM].
!       TNCONT   CONTINUUM TRANSMITTANCE ARRAY.
!       TAIL25   LINE TAIL BAND MODEL PARAMETER [CM-1/ATM]
!       TRNTOT   SEGMENT MOLECULAR BAND MODEL TRANSMITTANCE.
!       LBMWID   FLAG, FALSE TO NUMERICALLY INTEGRATE EQUIVALENT WIDTH.
      INTEGER ILO_T,IHI_T,MOLSPC,ITLSUB,ITLSB1,IACT
      REAL F_TEMP,SUMDEP,SMROOT,SUMDOP,SUMLOR,BEER,SMBEER,              &
     &  PRIOR,CURREN,DELTA,STLTLO,STLTHI,TNCONT(NTLSUB),                &
     &  SMCONT(0:NTLSUB),COLAMT,ABCOEF,OPTDEP,SPCLIN,                   &
     &  TAIL25,ALFDOP,ALFLOR,WIDDOP,WIDLOR,TRNTOT,SPACMN
      LOGICAL LBMWID

!     FUNCTIONS:
      REAL BMTRN

!     FETCH CROSS-SECTION TEMPERATURE-GRID INTERPOLATION PARAMETERS:
      IHI_T=KTLOS(ISEG,ILOS)
      ILO_T=IHI_T-1
      F_TEMP=GTLOS(ISEG,ILOS)

!     INITIALIZE CONTINUUM OPTICAL DEPTH WITH SPECTRALLY INTERPOLATED
!     5 CM-1 (AER+CLD+RAIN+RAY+H2O+N2+O2+O3+NO2+SO2) DATA:
      SMBEER=TX(14)

!     LOOP OVER BEER'S LAW MOLECULAR SPECIES (E.G. CFC'S):
!       13=CFC-11    14=CFC-12    15=CFC-13    16=CFC-14    17=CFC-22
!       18=CFC-113   19=CFC-114   20=CFC-115   21=CLONO2    22=HNO4
!       23=CHCL2F    24=CCL4      25=N2O5
      DO IACT=1,NACTX
          MOLSPC=MACTX(IACT)
          COLAMT=WPTH(MPOINT(MOLSPC),ISEG,ILOS)

!         ADD BEER'S LAW OPTICAL DEPTHS OF X-SPECIES TO SMBEER:
          IF(SDTL(0,1,1,MOLSPC).GT.0. .AND. COLAMT.GT.0.)THEN
              BEER=SDTL(0,IHI_T,1,MOLSPC)
              BEER=BEER+F_TEMP*(SDTL(0,ILO_T,1,MOLSPC)-BEER)
              SMBEER=SMBEER+BEER*COLAMT
          ENDIF
      ENDDO

!     INITIALIZE CONTINUUM OPTICAL DEPTH ARRAY:
      DO ITLSUB=0,NTLSUB
          SMCONT(ITLSUB)=0.
      ENDDO

!     INITIALIZE MOLECULAR BAND MODEL SPECIES SUMS:
      SUMDEP=0.
      SMROOT=0.
      SUMDOP=0.
      SUMLOR=0.

!     FETCH BAND MODEL TEMPERATURE-GRID INTERPOLATION PARAMETERS:
      IHI_T=JTLOS(ISEG,ILOS)
      ILO_T=IHI_T-1
      F_TEMP=FTLOS(ISEG,ILOS)

!     INITIALIZE BAND MODEL TRANSMISSION MINIMUM LINE SPACING:
      TRNTOT=1.
      SPACMN=1/BNDWID

!     LOOP OVER BAND MODEL MOLECULAR SPECIES:
!       1=H2O    2=CO2    3=O3     4=N2O    5=CO     6=CH4
!       7=O2     8=NO     9=SO2   10=NO2   11=NH3   12=HNO3
      DO IACT=1,NACTBM
          MOLSPC=ABS(MACTBM(IACT))

!         SKIP SPECIES IF COLUMN DENSITY IS ZERO:
          COLAMT=WPTH(MPOINT(MOLSPC),ISEG,ILOS)
          IF(COLAMT.GT.0.)THEN

!             LINE CENTER CONTRIBUTIONS
              IF(MACTBM(IACT).LT.0)THEN

!                 MOLSPC HAS LINES CENTERED IN THE CURRENT SPECTRAL BIN.
!                 INTERPOLATE BAND MODEL DATA OVER TEMPERATURE.
                  ABCOEF=SDCN(IHI_T,MOLSPC)
                  ABCOEF=ABCOEF+F_TEMP*(SDCN(ILO_T,MOLSPC)-ABCOEF)
                  OPTDEP=ABCOEF*COLAMT
                  SUMDEP=SUMDEP+OPTDEP
                  SPCLIN=ODCN(IHI_T,MOLSPC)
                  SPCLIN=SPCLIN+F_TEMP*(ODCN(ILO_T,MOLSPC)-SPCLIN)
                  IF(SPCLIN.LT.SPACMN)SPACMN=SPCLIN
                  SMROOT=SMROOT+SQRT(OPTDEP*SPCLIN)
                  ALFDOP=T5LOS(ISEG,ILOS)*DOP0(MOLSPC)
                  SUMDOP=SUMDOP+OPTDEP*ALFDOP

!                 ASSUME LORENTZ/COLLISION HALF-WIDTH FOR ALL MOLECULES
!                 VARIES WITH TEMPERATURE TO THE NEGATIVE 3/4 POWER.
                  ALFLOR=PTLOS(ISEG,ILOS)*ALF0(MOLSPC)
                  SUMLOR=SUMLOR+OPTDEP*ALFLOR

!                 CALCULATE THE BAND MODEL TRANSMITTANCE
                  IF(OPTDEP.LT..001 .AND. SUMDEP.GT..01)THEN
!2BIN                 IF(EDGENR.GT.0)THEN
                          TRNTOT=TRNTOT*(1-OPTDEP)
!2BIN                 ELSE
!2BIN                     TRNTOT=TRNTOT*(1-OPTDEP/2)
!2BIN                 ENDIF
                  ELSE
                      WIDDOP=SPCLIN*ALFDOP
                      WIDLOR=SPCLIN*ALFLOR
                      LBMWID=.TRUE.
                      TRNTOT=TRNTOT                                     &
     &                  *BMTRN(OPTDEP,SPCLIN,WIDDOP,WIDLOR,LBMWID)
                  ENDIF
              ENDIF

!             LINE TAIL (TO 25 CM-1 FROM LINE CENTER) CONTRIBUTIONS.
!             VOIGT LINE TAILS WERE COMPUTED AT 1.0 & 0.1 ATM.  PRESSURE
!             IS INCORPORATED INTO THE COLUMN AMOUNT VARIABLE, COLAMT.
              IF(SDTL(0,1,1,MOLSPC).GT.0.)THEN
                  COLAMT=COLAMT*PATM(ISEG,ILOS)
                  DO ITLSUB=0,NTLSUB

!                     PRESSURE INTERP/EXTRAPOLATION (1.0 & 0.1 ATM):
                      STLTHI=SDTL(ITLSUB,IHI_T,1,MOLSPC)
                      STLTHI=STLTHI+P2LOS(ISEG,ILOS)                    &
     &                  *(SDTL(ITLSUB,IHI_T,2,MOLSPC)-STLTHI)
                      STLTLO=SDTL(ITLSUB,ILO_T,1,MOLSPC)
                      STLTLO=STLTLO+P2LOS(ISEG,ILOS)                    &
     &                  *(SDTL(ITLSUB,ILO_T,2,MOLSPC)-STLTLO)
                      TAIL25=STLTHI+F_TEMP*(STLTLO-STLTHI)
                      SMCONT(ITLSUB)=SMCONT(ITLSUB)+TAIL25*COLAMT
                  ENDDO
              ENDIF
          ENDIF
      ENDDO

!     CONTINUUM TRANSMITTANCE AND OPTICAL DEPTH:
      PRIOR=EXP(-SMCONT(NTLSUB))
      ITLSUB=NTLSUB
      DO ITLSB1=NTLSUB-1,0,-1
          CURREN=EXP(-SMCONT(ITLSB1))
          DELTA=SMCONT(ITLSUB)-SMCONT(ITLSB1)
          IF (ABS(DELTA).GE..01)THEN
              TNCONT(ITLSUB)=(CURREN-PRIOR)/DELTA
              IF(TNCONT(ITLSUB).GT.0. .AND. TRNTOT.GT.1.E-30)THEN
                  SMCONT(ITLSUB)=-SNGL(LOG(DBLE(TNCONT(ITLSUB))))
              ELSE
                  SMCONT(ITLSUB)=(SMCONT(ITLSUB)+SMCONT(ITLSB1))/2
              ENDIF
          ELSE
              TNCONT(ITLSUB)=PRIOR*(1+DELTA*(1+DELTA/3)/2)
              SMCONT(ITLSUB)=(SMCONT(ITLSUB)+SMCONT(ITLSB1))/2
          ENDIF
          PRIOR=CURREN
          ITLSUB=ITLSB1
      ENDDO

!     COMPUTE CORRELATED-K EXTINCTION OPTICAL DEPTHS AND TRANSMITTANCES.
      CALL CKDEP(SUMDEP,SMROOT,SUMDOP,SUMLOR,                           &
     &  TRNTOT,JNTRVL,SPACMN,SMBEER,TNCONT,SMCONT)
      RETURN
      END

      SUBROUTINE CKMS(JNTRVL,ISEG)

!     CKMS RETURNS VERTICAL MULTIPLE SCATTERING PATH EXTINCTION
!     OPTICAL DEPTHS FOR THE "JNTRVL" CORRELATED-K (CK) METHOD
!     SUB-INTERVALS OF THE BAND MODEL (BM) SPECTRAL BIN.
      IMPLICIT NONE

!     INPUTS:
!       JNTRVL   NUMBER OF K-DISTRIBUTION INTERVALS FOR CURRENT FREQ.
!       ISEG     LAYER INDEX FOR CURRENT PATH.
      INTEGER JNTRVL,ISEG

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     COMMONS:
      INCLUDE 'BASE.h'
      INCLUDE 'SEGDAT.h'
      INCLUDE 'BMHEAD.h'
      INCLUDE 'BMDAT.h'
      INCLUDE 'BMPATH.h'

!     /ACTIVE/
!       NACT     NUMBER OF ACTIVE MOLECULES FOR CURRENT FREQUENCY BIN.
!       NACTBM   NUMBER OF ACTIVE BAND MODEL MOLECULES FOR CURRENT FREQ.
!       NACTX    NUMBER OF ACTIVE X & Y CROSS-SECTION MOLECULES.
!       MACTBM   LIST OF ACTIVE BAND MODEL MOLECULES FOR CURRENT FREQ.
!       MACTX    LIST OF ACTIVE X & Y CROSS-SECTION MOLECULES.
      INTEGER NACT,NACTBM,NACTX,MACTBM,MACTX
      COMMON/ACTIVE/NACT,NACTBM,NACTX,MACTBM(MMOLYT),MACTX(NMOLX)

!     LOCAL VARIABLES:
!       ILO_T    LOWER TEMPERATURE GRID INTERPOLATION INDEX.
!       IHI_T    HIGHER TEMPERATURE GRID INTERPOLATION INDEX.
!       MOLSPC   MOLECULAR INDEX.
!       ITLSUB   LOOP INDEX FOR LINE TAIL SUB-INTERVALS.
!       ITLSB1   ITLSUB MINUS 1.
!       IACT     LOOP INDEX FOR ACTIVE MOLECULES.
!       F_TEMP   INTERPOLATION FACTOR (0.=HIGHER, 1.=LOWER TEMPERATURE).
!       COLAMT   SPECIES COLUMN AMOUNT [ATM CM].
!       BEER     BEER'S LAW EXTINCTION COEFFICIENT [CM-1/ATM].
!       SMBEER   SUM OF BEER'S LAW OPTICAL DEPTHS.
!       SMCONT   k-DEPENDENT CONTINUUM OPTICAL DEPTH.
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.
!       SMROOT   MOLECULAR LINE SUM OVER SQUARE ROOT OF LINE STRENGTHS
!                TIMES COLUMN AMOUNT ALL DIVIDED BY BIN WIDTH.
!       SUMDOP   DOPPLER LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       SUMLOR   LORENTZ LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       ABCOEF   MOLECULAR ABSORPTION COEFFICIENT [CM-1/ATM]
!       OPTDEP   MOLECULAR ABSORPTION OPTICAL DEPTH.
!       SPCLIN   LINE SPACING BAND MODEL PARAMETER [CM].
!       SPACMN   MINIMUM LINE SPACING PARAMETER [CM].
!       TNCONT   CONTINUUM TRANSMITTANCE ARRAY.
!       TAIL25   LINE TAIL BAND MODEL PARAMETER [CM-1/ATM]
!       TRNTOT   SEGMENT MOLECULAR BAND MODEL TRANSMITTANCE.
!       LBMWID   FLAG, FALSE TO NUMERICALLY INTEGRATE EQUIVALENT WIDTH.
      INTEGER ILO_T,IHI_T,MOLSPC,ITLSUB,ITLSB1,IACT
      REAL F_TEMP,SUMDEP,SMROOT,SUMDOP,SUMLOR,PRIOR,CURREN,DELTA,STLTLO,&
     &  STLTHI,COLAMT,ABCOEF,OPTDEP,SPCLIN,TAIL25,ALFDOP,ALFLOR,WIDDOP, &
     &  WIDLOR,TRNTOT,SPACMN,BEER,SMBEER,TNCONT(NTLSUB),SMCONT(0:NTLSUB)
      LOGICAL LBMWID

!     FUNCTIONS:
      REAL BMTRN

!     FETCH CROSS-SECTION TEMPERATURE-GRID INTERPOLATION PARAMETERS:
      IHI_T=KTMS(ISEG)
      ILO_T=IHI_T-1
      F_TEMP=GTMS(ISEG)

!     INITIALIZE CONTINUUM OPTICAL DEPTH WITH SPECTRALLY INTERPOLATED
!     5 CM-1 (AER+CLD+RAIN+RAY+H2O+N2+O2+O3+NO2+SO2) DATA:
      SMBEER=TX(14)

!     LOOP OVER BEER'S LAW MOLECULAR SPECIES (E.G. CFC'S):
!       13=CFC-11    14=CFC-12    15=CFC-13    16=CFC-14    17=CFC-22
!       18=CFC-113   19=CFC-114   20=CFC-115   21=CLONO2    22=HNO4
!       23=CHCL2F    24=CCL4      25=N2O5      26=H2        27=HE
      DO IACT=1,NACTX
          MOLSPC=MACTX(IACT)
          COLAMT=WPTHMS(MPOINT(MOLSPC),ISEG)

!         ADD BEER'S LAW OPTICAL DEPTHS OF X-SPECIES TO SMBEER:
          IF(SDTL(0,1,1,MOLSPC).GT.0. .AND. COLAMT.GT.0.)THEN
              BEER=SDTL(0,IHI_T,1,MOLSPC)
              BEER=BEER+F_TEMP*(SDTL(0,ILO_T,1,MOLSPC)-BEER)
              SMBEER=SMBEER+BEER*COLAMT
          ENDIF
      ENDDO

!     INITIALIZE CONTINUUM OPTICAL DEPTH ARRAY:
      DO ITLSUB=0,NTLSUB
          SMCONT(ITLSUB)=0.
      ENDDO

!     INITIALIZE MOLECULAR BAND MODEL SPECIES SUMS:
      SUMDEP=0.
      SMROOT=0.
      SUMDOP=0.
      SUMLOR=0.

!     FETCH BAND MODEL TEMPERATURE-GRID INTERPOLATION PARAMETERS:
      IHI_T=JTMS(ISEG)
      ILO_T=IHI_T-1
      F_TEMP=FTMS(ISEG)

!     INITIALIZE BAND MODEL TRANSMISSION MINIMUM LINE SPACING:
      TRNTOT=1.
      SPACMN=1/BNDWID

!     LOOP OVER BAND MODEL MOLECULAR SPECIES:
!       1=H2O    2=CO2    3=O3     4=N2O    5=CO     6=CH4
!       7=O2     8=NO     9=SO2   10=NO2   11=NH3   12=HNO3
      DO IACT=1,NACTBM
          MOLSPC=ABS(MACTBM(IACT))

!         SKIP SPECIES IF COLUMN DENSITY IS ZERO:
          COLAMT=WPTHMS(MPOINT(MOLSPC),ISEG)
          IF(COLAMT.GT.0.)THEN

!             LINE CENTER CONTRIBUTIONS
              IF(MACTBM(IACT).LT.0)THEN

!                 MOLSPC HAS LINES CENTERED IN THE CURRENT SPECTRAL BIN.
!                 INTERPOLATE BAND MODEL DATA OVER TEMPERATURE.
                  ABCOEF=SDCN(IHI_T,MOLSPC)
                  ABCOEF=ABCOEF+F_TEMP*(SDCN(ILO_T,MOLSPC)-ABCOEF)
                  OPTDEP=ABCOEF*COLAMT
                  SUMDEP=SUMDEP+OPTDEP
                  SPCLIN=ODCN(IHI_T,MOLSPC)
                  SPCLIN=SPCLIN+F_TEMP*(ODCN(ILO_T,MOLSPC)-SPCLIN)
                  IF(SPCLIN.LT.SPACMN)SPACMN=SPCLIN
                  SMROOT=SMROOT+SQRT(OPTDEP*SPCLIN)
                  ALFDOP=T5MS(ISEG)*DOP0(MOLSPC)
                  SUMDOP=SUMDOP+OPTDEP*ALFDOP

!                 ASSUME LORENTZ/COLLISION HALF-WIDTH FOR ALL MOLECULES
!                 VARIES WITH TEMPERATURE TO THE NEGATIVE 3/4 POWER.
                  ALFLOR=PTMS(ISEG)*ALF0(MOLSPC)
                  SUMLOR=SUMLOR+OPTDEP*ALFLOR

!                 CALCULATE THE BAND MODEL TRANSMITTANCE
                  IF(OPTDEP.LT..001 .AND. SUMDEP.GT..01)THEN
!2BIN                 IF(EDGENR.GT.0)THEN
                          TRNTOT=TRNTOT*(1-OPTDEP)
!2BIN                 ELSE
!2BIN                     TRNTOT=TRNTOT*(1-OPTDEP/2)
!2BIN                 ENDIF
                  ELSE
                      WIDDOP=SPCLIN*ALFDOP
                      WIDLOR=SPCLIN*ALFLOR
                      LBMWID=.TRUE.
                      TRNTOT=TRNTOT                                     &
     &                  *BMTRN(OPTDEP,SPCLIN,WIDDOP,WIDLOR,LBMWID)
                  ENDIF
              ENDIF

!             LINE TAIL (TO 25 CM-1 FROM LINE CENTER) CONTRIBUTIONS.
!             VOIGT LINE TAILS WERE COMPUTED AT 1.0 & 0.1 ATM.  PRESSURE
!             IS INCORPORATED INTO THE COLUMN AMOUNT VARIABLE, COLAMT.
              IF(SDTL(0,1,1,MOLSPC).GT.0.)THEN
                  COLAMT=COLAMT*PATMMS(ISEG)
                  DO ITLSUB=0,NTLSUB

!                     PRESSURE INTERP/EXTRAPOLATION (1.0 & 0.1 ATM):
                      STLTHI=SDTL(ITLSUB,IHI_T,1,MOLSPC)
                      STLTHI=STLTHI+P2MS(ISEG)                          &
     &                  *(SDTL(ITLSUB,IHI_T,2,MOLSPC)-STLTHI)
                      STLTLO=SDTL(ITLSUB,ILO_T,1,MOLSPC)
                      STLTLO=STLTLO+P2MS(ISEG)                          &
     &                  *(SDTL(ITLSUB,ILO_T,2,MOLSPC)-STLTLO)
                      TAIL25=STLTHI+F_TEMP*(STLTLO-STLTHI)
                      SMCONT(ITLSUB)=SMCONT(ITLSUB)+TAIL25*COLAMT
                  ENDDO
              ENDIF
          ENDIF
      ENDDO

!     CONTINUUM TRANSMITTANCE AND OPTICAL DEPTH:
      PRIOR=EXP(-SMCONT(NTLSUB))
      ITLSUB=NTLSUB
      DO ITLSB1=NTLSUB-1,0,-1
          CURREN=EXP(-SMCONT(ITLSB1))
          DELTA=SMCONT(ITLSUB)-SMCONT(ITLSB1)
          IF (ABS(DELTA).GE..01)THEN
              TNCONT(ITLSUB)=(CURREN-PRIOR)/DELTA
              IF(TNCONT(ITLSUB).GT.0. .AND. TRNTOT.GT.1.E-30)THEN
                  SMCONT(ITLSUB)=-SNGL(LOG(DBLE(TNCONT(ITLSUB))))
              ELSE
                  SMCONT(ITLSUB)=(SMCONT(ITLSUB)+SMCONT(ITLSB1))/2
              ENDIF
          ELSE
              TNCONT(ITLSUB)=PRIOR*(1+DELTA*(1+DELTA/3)/2)
              SMCONT(ITLSUB)=(SMCONT(ITLSUB)+SMCONT(ITLSB1))/2
          ENDIF
          PRIOR=CURREN
          ITLSUB=ITLSB1
      ENDDO

!     COMPUTE CORRELATED-K EXTINCTION OPTICAL DEPTHS AND TRANSMITTANCES.
      CALL CKDEP(SUMDEP,SMROOT,SUMDOP,SUMLOR,                           &
     &  TRNTOT,JNTRVL,SPACMN,SMBEER,TNCONT,SMCONT)
      RETURN
      END

      SUBROUTINE CKDEP(SUMDEP,SMROOT,SUMDOP,SUMLOR,                     &
     &  TRNTOT,JNTRVL,SPACMN,SMBEER,TNCONT,SMCONT)

!     CKDEP COMPUTES k-DISTRIBUTION SEGMENT EXTINCTION OPTICAL DEPTHS &
!     TRANSMITTANCES BY FITTING TO THE SEGMENT BAND MODEL TRANSMITTANCE.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUTS:
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.
!       SMROOT   MOLECULAR LINE SUM OVER SQUARE ROOT OF LINE STRENGTHS
!                TIMES COLUMN AMOUNT ALL DIVIDED BY BIN WIDTH.
!       SUMDOP   DOPPLER LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       SUMLOR   LORENTZ LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       TRNTOT   BAND MODEL TOTAL TRANSMITTANCE.
!       JNTRVL   NUMBER OF K-DISTRIBUTION INTERVALS FOR CURRENT FREQ.
!       SPACMN   MINIMUM LINE SPACING PARAMETER [CM].
!       SMBEER   SUM OF BEER'S LAW OPTICAL DEPTHS.
!       TNCONT   CONTINUUM TRANSMITTANCE ARRAY.
!       SMCONT   CONTINUUM OPTICAL DEPTH ARRAY.
      REAL SUMDEP,SMROOT,SUMDOP,SUMLOR,TRNTOT,                          &
     &  SPACMN,SMBEER,TNCONT(NTLSUB),SMCONT(0:NTLSUB)
      INTEGER JNTRVL

!     COMMONS:
      INCLUDE 'BMHEAD.h'

!     /CORKDT/
!       WTKSUB   SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       WTKSAV   SAVED SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       DEPLAY   INCREMENTAL OPTICAL DEPTHS.
!       TRNLAY   INCREMENTAL TRANSMITTANCES.
!       TRNCUM   CUMULATIVE TRANSMITTANCES.
!       K2TAIL   POINTER FROM K BIN TO LINE TAIL SUB-BIN
!                (=0 IF MULTIPLE LINE TAIL SUB-BINS CONTRIBUTE).
!       CONTWT   WEIGHTS FOR PARTITIONING LINE TAILS INTO K'S
!                (ONLY USED IF K2TAIL IS 0).
      REAL WTKSUB(MXKSUB),WTKSAV(NTLSUB),DEPLAY(MXKSUB),                &
     &  TRNLAY(MXKSUB),TRNCUM(MXKSUB),CONTWT(NTLSUB,MXKSUB)
      INTEGER K2TAIL(MXKSUB)
      COMMON/CORKDT/K2TAIL,WTKSUB,WTKSAV,DEPLAY,TRNLAY,TRNCUM,CONTWT
      SAVE /CORKDT/

!     LOCAL VARIABLES:
!       ITLSUB   LOOP INDEX FOR LINE TAIL SUB-INTERVALS.
!       INTRVL   K-DISTRIBUTION LOOP INDEX.
!       AVGSPC   LAYER LINE SPACING BAND MODEL PARAMETER [CM].
!       AVGDOP   LAYER DOPPLER LINE WIDTH [CM-1].
!       AVGLOR   LAYER LORENTZ/COLLISION LINE WIDTH [CM-1].
!       TNBEER   LAYER TRANSMITTANCE OF BEER'S LAW SPECIES.
      INTEGER ITLSUB,INTRVL,K2TL
      REAL AVGSPC,AVGDOP,AVGLOR,RLINES,AVGTRN,AVGDEP,TNBEER

!     SUB-INTERVAL OPTICAL DEPTHS AND TRANSMITTANCES
      IF(SUMDEP.GT.0.)THEN

!         MOLECULAR SPECIES AVERAGED BAND MODEL PARAMETERS.
          AVGSPC=SMROOT**2/SUMDEP
          AVGDOP=SUMDOP/SUMDEP
          AVGLOR=SUMLOR/SUMDEP
          IF(SUMDEP.GE..001)                                            &
     &      CALL CHKSPC(SUMDEP,AVGSPC,AVGDOP,AVGLOR,TRNTOT,SPACMN)

!         FETCH THE CORRELATED-K OPTICAL DEPTHS AND TRANSMITTANCES.
!           RLINES   LAYER EFFECTIVE NUMBER OF LINES.
!           DEPLAY   THE CORRELATED-K OPTICAL DEPTHS.
!           TRNLAY   THE CORRELATED-K TRANSMITTANCES.
          RLINES=BNDWID*AVGSPC
          CALL CORK(JNTRVL,SUMDEP,RLINES,AVGDOP,AVGLOR,TRNTOT)

!         INCLUDE CONTINUUM CONTRIBUTIONS.
          IF(SMCONT(1)+SMBEER.NE.0.)THEN

!             INCORPORATE LINE TAILS AND BEER'S LAW CONTRIBUTIONS
!             INTO LAYER OPTICAL DEPTHS AND TRANSMITTANCES
!             PARTITIONING THE LINE TAILS AMONG THE K-INTERVALS:
              TNBEER=EXP(-SMBEER)
              DO INTRVL=1,JNTRVL
                  K2TL=K2TAIL(INTRVL)
                  IF(K2TL.GT.0)THEN

!                     USE ONE LINE-TAIL EXTINCTION VALUE:
                      DEPLAY(INTRVL)=DEPLAY(INTRVL)+SMCONT(K2TL)+SMBEER
                      TRNLAY(INTRVL)=TRNLAY(INTRVL)*TNCONT(K2TL)*TNBEER
                  ELSE

!                     COMBINE MULTIPLE LINE-TAIL EXTINCTION VALUES:
                      AVGDEP=CONTWT(1,INTRVL)*SMCONT(1)
                      AVGTRN=CONTWT(1,INTRVL)*TNCONT(1)
                      DO ITLSUB=2,NTLSUB
                          AVGTRN=AVGTRN                                 &
     &                      +CONTWT(ITLSUB,INTRVL)*TNCONT(ITLSUB)
                          AVGDEP=AVGDEP                                 &
     &                      +CONTWT(ITLSUB,INTRVL)*SMCONT(ITLSUB)
                      ENDDO
                      IF(AVGTRN.GT.0. .AND. AVGTRN.LT..999)THEN
                          TRNLAY(INTRVL)=TRNLAY(INTRVL)*AVGTRN*TNBEER
                          DEPLAY(INTRVL)=DEPLAY(INTRVL)                 &
     &                      +SMBEER-SNGL(LOG(DBLE(AVGTRN)))
                      ELSE
                          AVGDEP=AVGDEP+SMBEER
                          DEPLAY(INTRVL)=DEPLAY(INTRVL)+AVGDEP
                          TRNLAY(INTRVL)=TRNLAY(INTRVL)*EXP(-AVGDEP)
                      ENDIF
                  ENDIF
              ENDDO
          ENDIF
      ELSE

!         ADD LINE TAILS AND BEER'S LAW CONTRIBUTIONS TO OPTICAL DEPTHS
!         AND TRANSMITTANCES PARTITIONING LINE TAILS AMONG K-INTERVALS:
          TNBEER=EXP(-SMBEER)
          DO INTRVL=1,JNTRVL
              K2TL=K2TAIL(INTRVL)
              IF(K2TL.GT.0)THEN

!                 USE ONE LINE-TAIL EXTINCTION VALUE:
                  DEPLAY(INTRVL)=SMCONT(K2TL)+SMBEER
                  TRNLAY(INTRVL)=TNCONT(K2TL)*TNBEER
              ELSE

!                 COMBINE MULTIPLE LINE-TAIL EXTINCTION VALUES:
                  AVGDEP=CONTWT(1,INTRVL)*SMCONT(1)
                  AVGTRN=CONTWT(1,INTRVL)*TNCONT(1)
                  DO ITLSUB=2,NTLSUB
                      AVGTRN=AVGTRN+CONTWT(ITLSUB,INTRVL)*TNCONT(ITLSUB)
                      AVGDEP=AVGDEP+CONTWT(ITLSUB,INTRVL)*SMCONT(ITLSUB)
                  ENDDO
                  IF(AVGTRN.GT.0. .AND. AVGTRN.LT..999)THEN
                      TRNLAY(INTRVL)=AVGTRN*TNBEER
                      DEPLAY(INTRVL)=SMBEER-SNGL(LOG(DBLE(AVGTRN)))
                  ELSE
                      AVGDEP=AVGDEP+SMBEER
                      DEPLAY(INTRVL)=AVGDEP
                      TRNLAY(INTRVL)=EXP(-AVGDEP)
                  ENDIF
              ENDIF
          ENDDO
      ENDIF
      RETURN
      END

      SUBROUTINE CKLOSS(JNTRVL,LEVEL,ILOS)

!     CKLOSS RETURNS SOLAR ILLUMINATION PATH TO LINE-OF-SIGHT LEVEL
!     EXTINCTION OPTICAL DEPTHS FOR THE "JNTRVL" CORRELATED-K (CK)
!     METHOD SUB-INTERVALS FOR THE CURRENT BAND MODEL SPECTRAL BIN.
      IMPLICIT NONE

!     INPUTS
!       JNTRVL   NUMBER OF K-DISTRIBUTION INTERVALS FOR CURRENT FREQ.
!       LEVEL    ATMOSPHERIC LEVEL.
!       ILOS     LOOP INDEX FOR LINE-OF-SIGHT PATHS.
      INTEGER JNTRVL,LEVEL,ILOS

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     COMMONS:
      INCLUDE 'BASE.h'
      INCLUDE 'WSOL.h'
      INCLUDE 'BMDAT.h'
      INCLUDE 'BMPTHS.h'
      INCLUDE 'BMHEAD.h'

!     /CORKDT/
!       WTKSUB   SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       WTKSAV   SAVED SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       DEPLAY   INCREMENTAL OPTICAL DEPTHS.
!       TRNLAY   INCREMENTAL TRANSMITTANCES.
!       TRNCUM   CUMULATIVE TRANSMITTANCES.
!       K2TAIL   POINTER FROM K BIN TO LINE TAIL SUB-BIN
!                (=0 IF MULTIPLE LINE TAIL SUB-BINS CONTRIBUTE).
!       CONTWT   WEIGHTS FOR PARTITIONING LINE TAILS INTO K'S
!                (ONLY USED IF K2TAIL IS 0).
      REAL WTKSUB(MXKSUB),WTKSAV(NTLSUB),DEPLAY(MXKSUB),                &
     &  TRNLAY(MXKSUB),TRNCUM(MXKSUB),CONTWT(NTLSUB,MXKSUB)
      INTEGER K2TAIL(MXKSUB)
      COMMON/CORKDT/K2TAIL,WTKSUB,WTKSAV,DEPLAY,TRNLAY,TRNCUM,CONTWT
      SAVE /CORKDT/

!     /ACTIVE/
!       NACT     NUMBER OF ACTIVE MOLECULES FOR CURRENT FREQUENCY BIN.
!       NACTBM   NUMBER OF ACTIVE BAND MODEL MOLECULES FOR CURRENT FREQ.
!       NACTX    NUMBER OF ACTIVE X & Y CROSS-SECTION MOLECULES.
!       MACTBM   LIST OF ACTIVE BAND MODEL MOLECULES FOR CURRENT FREQ.
!       MACTX    LIST OF ACTIVE X & Y CROSS-SECTION MOLECULES.
      INTEGER NACT,NACTBM,NACTX,MACTBM,MACTX
      COMMON/ACTIVE/NACT,NACTBM,NACTX,MACTBM(MMOLYT),MACTX(NMOLX)

!     /LSTART/
!       TOLABS   OUTPUT WARNING THRESHOLD FOR EXCESS ABSORPTION.
!       LLORMN   OUTPUT WARNING FLAG FOR SMALL LORENTZ HALF WIDTH.
!       LLORMX   OUTPUT WARNING FLAG FOR LARGE LORENTZ HALF WIDTH.
!       LDOPMN   OUTPUT WARNING FLAG FOR SMALL DOPPLER HALF WIDTH.
!       LDOPMX   OUTPUT WARNING FLAG FOR LARGE DOPPLER HALF WIDTH.
!       LLINMN   OUTPUT WARNING FLAG FOR SMALL EFFECTIVE LINE NUMBER.
!       LSSA     OUTPUT WARNING FLAG FOR SCATTERING ALBEDO NEAR 1.
!       LAEREX   OUTPUT WARNING FLAG FOR ROUTINE AEREXT.
!       LBMCRK   OUTPUT WARNING FLAG FOR ROUTINE CKLOSS.
!       LFLUXS   OUTPUT WARNING FLAG FOR ROUTINE FLUXES.
!       LSSRAD   OUTPUT WARNING FLAG FOR ROUTINE SSRAD.
!       LTRLAY   OUTPUT WARNING FLAG FOR ROUTINE TRLAY.
!       LNVERS   OUTPUT WARNING FLAG FOR ROUTINE DENFAC.
!       LGEOM    OUTPUT WARNING FLAG FOR INDEX OF REFRACTION GRADIENT.
!       LO3TRN   OUTPUT WARNING FLAG FOR OZONE CURTIS-GODSON PROBLEM.
      REAL TOLABS
      LOGICAL LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,                  &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      COMMON/LSTART/TOLABS,LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,     &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      SAVE /LSTART/

!     LOCAL VARIABLES:
!       ILO_T    LOWER TEMPERATURE GRID INTERPOLATION INDEX.
!       IHI_T    HIGHER TEMPERATURE GRID INTERPOLATION INDEX.
!       MOLSPC   MOLECULAR INDEX.
!       ITLSUB   LOOP INDEX FOR LINE TAIL SUB-INTERVALS.
!       ITLSB1   ITLSUB MINUS 1.
!       IACT     LOOP INDEX FOR ACTIVE MOLECULES.
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.
!       SMROOT   MOLECULAR LINE SUM OVER SQUARE ROOT OF LINE STRENGTHS
!                TIMES COLUMN AMOUNT ALL DIVIDED BY BIN WIDTH.
!       SUMDOP   DOPPLER LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       SUMLOR   LORENTZ LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       F_TEMP   INTERPOLATION FACTOR (0.=HIGHER, 1.=LOWER TEMPERATURE).
!       COLAMT   SPECIES COLUMN AMOUNT [ATM CM].
!       BEER     BEER'S LAW EXTINCTION COEFFICIENT [CM-1/ATM].
!       SMBEER   SUM OF BEER'S LAW OPTICAL DEPTHS.
!       SMCONT   k-DEPENDENT CONTINUUM OPTICAL DEPTH.
!       ABCOEF   MOLECULAR ABSORPTION COEFFICIENT [CM-1/ATM]
!       OPTDEP   MOLECULAR ABSORPTION OPTICAL DEPTH.
!       SPCLIN   LINE SPACING BAND MODEL PARAMETER [CM].
!       SPACMN   MINIMUM LINE SPACING PARAMETER [CM].
!       TNCONT   CONTINUUM TRANSMITTANCE ARRAY.
!       TAIL25   LINE TAIL BAND MODEL PARAMETER [CM-1/ATM]
!       TRNTOT   SEGMENT MOLECULAR BAND MODEL TRANSMITTANCE.
!       P2       PRESSURE SQUARED INTERPOLATION VARIABLE.
!       LBMWID   FLAG, FALSE TO NUMERICALLY INTEGRATE EQUIVALENT WIDTH.
      INTEGER ILO_T,IHI_T,MOLSPC,ITLSUB,ITLSB1,IACT
      REAL F_TEMP,SUMDEP,SMROOT,SUMDOP,SUMLOR,BEER,SMBEER,COLAMT,       &
     &  ABCOEF,OPTDEP,SPCLIN,TAIL25,ALFDOP,ALFLOR,WIDDOP,WIDLOR,        &
     &  TRNTOT,CURREN,PRIOR,DELTA,STLTLO,STLTHI,SPACMN,P2,              &
     &  TNCONT(NTLSUB),SMCONT(0:NTLSUB)
      LOGICAL LBMWID

!     FUNCTIONS:
      REAL BMTRN

!     INITIALIZE CONTINUUM OPTICAL DEPTH WITH
!     SPECTRALLY INTERPOLATED 5 CM-1 DATA:
      SMBEER=TX(14)

!     LOOP OVER BEER'S LAW MOLECULAR SPECIES (E.G. CFC'S):
!       13=CFC-11    14=CFC-12    15=CFC-13    16=CFC-14    17=CFC-22
!       18=CFC-113   19=CFC-114   20=CFC-115   21=CLONO2    22=HNO4
!       23=CHCL2F    24=CCL4      25=N2O5
      DO IACT=1,NACTX
          MOLSPC=MACTX(IACT)
          COLAMT=WSPTH(MPOINT(MOLSPC),LEVEL,ILOS)

!         ADD BEER'S LAW OPTICAL DEPTHS OF X-SPECIES TO SMCONT(1):
          IF(SDTL(1,1,1,MOLSPC).GT.0. .AND. COLAMT.GT.1.E-30)THEN
              IHI_T=KTLOSS(MOLSPC,LEVEL,ILOS)
              BEER=SDTL(1,IHI_T,1,MOLSPC)
              BEER=BEER+GTLOSS(MOLSPC,LEVEL,ILOS)                       &
     &          *(SDTL(1,IHI_T-1,1,MOLSPC)-BEER)
              SMBEER=SMBEER+BEER*COLAMT
          ENDIF
      ENDDO

!     INITIALIZE CONTINUUM OPTICAL DEPTH ARRAY:
      DO ITLSUB=0,NTLSUB
          SMCONT(ITLSUB)=0.
      ENDDO

!     INITIALIZE MOLECULAR SPECIES SUMS
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.
!       SMROOT   SUM OVER MOLECULAR LINES OF THE SQUARE ROOT OF
!                THE LINE STRENGTHS TIMES THE COLUMN AMOUNTS
!                ALL DIVIDED BY BIN WIDTH.
!       SUMDOP   DOPPLER LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       SUMLOR   LORENTZ/COLLISION LINE WIDTHS TIMES
!                OPTICAL DEPTHS [CM-1].
      SUMDEP=0.
      SMROOT=0.
      SUMDOP=0.
      SUMLOR=0.

!     INITIALIZE BAND MODEL TRANSMISSION AND MINIMUM LINE SPACING:
      TRNTOT=1.
      SPACMN=1/BNDWID

!     LOOP OVER BAND MODEL MOLECULAR SPECIES
!       1=H2O    2=CO2    3=O3     4=N2O    5=CO     6=CH4
!       7=O2     8=NO     9=SO2   10=NO2   11=NH3   12=HNO3
      DO IACT=1,NACTBM
          MOLSPC=ABS(MACTBM(IACT))

!         SKIP SPECIES IF COLUMN DENSITY IS ZERO:
          COLAMT=WSPTH(MPOINT(MOLSPC),LEVEL,ILOS)
          IF(COLAMT.GT.0.)THEN

!             FETCH TEMPERATURE INTERPOLATION PARAMETERS
              IHI_T=JTLOSS(MOLSPC,LEVEL,ILOS)
              ILO_T=IHI_T-1
              F_TEMP=FTLOSS(MOLSPC,LEVEL,ILOS)

!             LINE CENTER CONTRIBUTIONS
              IF(MACTBM(IACT).LT.0)THEN

!                 MOLSPC LINES CENTERED IN THE CURRENT SPECTRAL BIN.
!                 INTERPOLATE BAND MODEL DATA OVER TEMPERATURE.
!                   ABCOEF   ABSORPTION COEFFICIENT [ATM-1 CM-1]
!                   OPTDEP   MOLECULAR ABSORPTION OPTICAL DEPTH
!                   SPCLIN   LINE SPACING BAND MODEL PARAMETER [CM]
                  ABCOEF=SDCN(IHI_T,MOLSPC)
                  ABCOEF=ABCOEF+F_TEMP*(SDCN(ILO_T,MOLSPC)-ABCOEF)
                  OPTDEP=ABCOEF*COLAMT
                  SUMDEP=SUMDEP+OPTDEP
                  SPCLIN=ODCN(IHI_T,MOLSPC)
                  SPCLIN=SPCLIN+F_TEMP*(ODCN(ILO_T,MOLSPC)-SPCLIN)
                  IF(SPCLIN.LT.SPACMN)SPACMN=SPCLIN
                  SMROOT=SMROOT+SQRT(OPTDEP*SPCLIN)
                  ALFDOP=T5LOSS(MOLSPC,LEVEL,ILOS)*DOP0(MOLSPC)
                  SUMDOP=SUMDOP+OPTDEP*ALFDOP

!                 THE LORENTZ/COLLISION HALF-WIDTH FOR CO2 IS
!                 ASSUMED TO VARY WITH TEMPERATURE TO THE NEGATIVE
!                 3/4 POWER; FOR ALL OTHER MOLECULES, A TEMPERATURE
!                 TO THE MINUS ONE-HALF POWER VARIATION IS ASSUMED.
                  ALFLOR=PTLOSS(MOLSPC,LEVEL,ILOS)*ALF0(MOLSPC)
                  SUMLOR=SUMLOR+OPTDEP*ALFLOR

!                 CALCULATE THE BAND MODEL TRANSMITTANCE
                  IF(OPTDEP.LT..001 .AND. SUMDEP.GT..01)THEN
!2BIN                 IF(EDGENR.GT.0)THEN
                          TRNTOT=TRNTOT*(1-OPTDEP)
!2BIN                 ELSE
!2BIN                     TRNTOT=TRNTOT*(1-OPTDEP/2)
!2BIN                 ENDIF
                  ELSE
                      WIDDOP=SPCLIN*ALFDOP
                      WIDLOR=SPCLIN*ALFLOR
                      LBMWID=.TRUE.
                      TRNTOT=TRNTOT                                     &
     &                  *BMTRN(OPTDEP,SPCLIN,WIDDOP,WIDLOR,LBMWID)
                  ENDIF
              ENDIF

!             LINE TAIL (TO 25 CM-1 FROM LINE CENTER) CONTRIBUTIONS.
!               TAIL25   LINE TAIL BAND MODEL PARAMETER [ATM-1 CM-1]
              IF(SDTL(0,1,1,MOLSPC).GT.0.)THEN
                  COLAMT=COLAMT*PSATM(MOLSPC,LEVEL,ILOS)
                  P2=P2LOSS(MOLSPC,LEVEL,ILOS)
                  DO ITLSUB=0,NTLSUB
                      STLTHI=SDTL(ITLSUB,IHI_T,1,MOLSPC)                &
     &                  +P2*(SDTL(ITLSUB,IHI_T,2,MOLSPC)                &
     &                      -SDTL(ITLSUB,IHI_T,1,MOLSPC))
                      STLTLO=SDTL(ITLSUB,ILO_T,1,MOLSPC)                &
     &                  +P2*(SDTL(ITLSUB,ILO_T,2,MOLSPC)                &
     &                      -SDTL(ITLSUB,ILO_T,1,MOLSPC))
                      TAIL25=STLTHI+F_TEMP*(STLTLO-STLTHI)
                      SMCONT(ITLSUB)=SMCONT(ITLSUB)+TAIL25*COLAMT
                  ENDDO
              ENDIF
          ENDIF
      ENDDO

!     CONTINUUM TRANSMITTANCE AND OPTICAL DEPTH:
      PRIOR=EXP(-SMCONT(NTLSUB))
      ITLSUB=NTLSUB
      DO ITLSB1=NTLSUB-1,0,-1
          CURREN=EXP(-SMCONT(ITLSB1))
          DELTA=SMCONT(ITLSUB)-SMCONT(ITLSB1)
          IF (ABS(DELTA).GE..01)THEN
              TNCONT(ITLSUB)=(CURREN-PRIOR)/DELTA
              IF(TNCONT(ITLSUB).GT.0. .AND. TRNTOT.GT.1.E-30)THEN
                  SMCONT(ITLSUB)=-SNGL(LOG(DBLE(TNCONT(ITLSUB))))
              ELSE
                  SMCONT(ITLSUB)=(SMCONT(ITLSUB)+SMCONT(ITLSB1))/2
              ENDIF
          ELSE
              TNCONT(ITLSUB)=PRIOR*(1+DELTA*(1+DELTA/3)/2)
              SMCONT(ITLSUB)=(SMCONT(ITLSUB)+SMCONT(ITLSB1))/2
          ENDIF
          PRIOR=CURREN
          ITLSUB=ITLSB1
      ENDDO

!     COMPUTE CORRELATED-K EXTINCTION OPTICAL DEPTHS AND TRANSMITTANCES.
      CALL CKDEP(SUMDEP,SMROOT,SUMDOP,SUMLOR,                           &
     &  TRNTOT,JNTRVL,SPACMN,SMBEER,TNCONT,SMCONT)
      RETURN
      END

      SUBROUTINE CKMSS(JNTRVL,LEVEL)

!     CKMSS RETURNS SOLAR ILLUMINATION PATH (TO VERTICAL
!     MULTIPLE SCATTERING PATH LEVEL) EXTINCTION OPTICAL
!     DEPTHS FOR THE "JNTRVL" CORRELATED-K (CK) METHOD
!     SUB-INTERVALS OF THE CURRENT BAND MODEL SPECTRAL BIN.
      IMPLICIT NONE

!     INPUTS
!       JNTRVL   NUMBER OF K-DISTRIBUTION INTERVALS FOR CURRENT FREQ.
!       LEVEL    ATMOSPHERIC LEVEL.
      INTEGER JNTRVL,LEVEL

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     COMMONS:
      INCLUDE 'IFIL.h'
      INCLUDE 'BASE.h'
      INCLUDE 'WSOL.h'
      INCLUDE 'BMDAT.h'
      INCLUDE 'BMPTHS.h'
      INCLUDE 'BMHEAD.h'

!     /CORKDT/
!       WTKSUB   SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       WTKSAV   SAVED SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       DEPLAY   INCREMENTAL OPTICAL DEPTHS.
!       TRNLAY   INCREMENTAL TRANSMITTANCES.
!       TRNCUM   CUMULATIVE TRANSMITTANCES.
!       K2TAIL   POINTER FROM K BIN TO LINE TAIL SUB-BIN
!                (=0 IF MULTIPLE LINE TAIL SUB-BINS CONTRIBUTE).
!       CONTWT   WEIGHTS FOR PARTITIONING LINE TAILS INTO K'S
!                (ONLY USED IF K2TAIL IS 0).
      REAL WTKSUB(MXKSUB),WTKSAV(NTLSUB),DEPLAY(MXKSUB),                &
     &  TRNLAY(MXKSUB),TRNCUM(MXKSUB),CONTWT(NTLSUB,MXKSUB)
      INTEGER K2TAIL(MXKSUB)
      COMMON/CORKDT/K2TAIL,WTKSUB,WTKSAV,DEPLAY,TRNLAY,TRNCUM,CONTWT
      SAVE /CORKDT/

!     /MSRD/
!       CSSCAT   COSINE OF THE SCATTERING ANGLE.
!                (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       SLEGEN   Nth LEGENDRE POLYNOMIAL EVALUATED AT THE COSINE OF THE
!                SCATTERING ANGLE TIMES (2N+1)/4pi (N=0 TO NSTR-1).
!       CSZEN0   LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.
!       CSZEN    LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.
!       CSZENX   AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING
!                (AWAY FROM EARTH) THE CURRENT LAYER.
!       BBGRND   THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].
!       BBNDRY   LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1].
!       TCONT    LAYER CONTINUUM OPTICAL DEPTH.
!       TAUT     LAYER TOTAL VERTICAL EXTINCTION OPTICAL DEPTH.
!       GTSCAT   SUM OVER SCATTERING SOURCES OF SCATTERING OPTICAL DEPTH
!                AND PHASE FUNCTION LEGENDRE COEFFICIENT PRODUCTS.
!       COSBAR   LAYER EFFECTIVE SCATTERING ASYMMETRY FACTOR.
!       DEPRAT   FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.
!       S0DEP    OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.
!       S0TRN    TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]
!       UPF      LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].
!       DNF      LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].
!       UPFS     LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].
!       DNFS     LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].
!       CO_LIN   TRUE IF LOS AND SOLAR PATHS ARE NEARLY IDENTICAL.
      REAL CSSCAT,SLEGEN,CSZEN0,CSZEN,CSZENX,TCONT,TAUT,GTSCAT,COSBAR,  &
     &  BBGRND,BBNDRY,S0DEP,S0TRN,DEPRAT,UPF,DNF,UPFS,DNFS
      LOGICAL CO_LIN
      COMMON/MSRD/CSSCAT(MLOS),SLEGEN(0:MAZ,MLOS),CSZEN0(LAYDIM),       &
     &  CSZEN(LAYDIM),CSZENX(LAYDIM),TCONT(LAYDIM),TAUT(MXKSUB,LAYDIM), &
     &  GTSCAT(0:MXCMU,1:LAYDIM),COSBAR(LAYDIM),BBGRND,BBNDRY(LAYDIM),  &
     &  S0DEP(MXKSUB,LAYTWO),S0TRN(MXKSUB,LAYTWO),DEPRAT(MXKSUB,LAYDIM),&
     &  UPF(MXKSUB,LAYDIM),DNF(MXKSUB,LAYDIM),UPFS(MXKSUB,LAYDIM),      &
     &  DNFS(MXKSUB,LAYDIM),CO_LIN(MLOS)

!     /ACTIVE/
!       NACT     NUMBER OF ACTIVE MOLECULES FOR CURRENT FREQUENCY BIN.
!       NACTBM   NUMBER OF ACTIVE BAND MODEL MOLECULES FOR CURRENT FREQ.
!       NACTX    NUMBER OF ACTIVE X & Y CROSS-SECTION MOLECULES.
!       MACTBM   LIST OF ACTIVE BAND MODEL MOLECULES FOR CURRENT FREQ.
!       MACTX    LIST OF ACTIVE X & Y CROSS-SECTION MOLECULES.
      INTEGER NACT,NACTBM,NACTX,MACTBM,MACTX
      COMMON/ACTIVE/NACT,NACTBM,NACTX,MACTBM(MMOLYT),MACTX(NMOLX)

!     /LSTART/
!       TOLABS   OUTPUT WARNING THRESHOLD FOR EXCESS ABSORPTION.
!       LLORMN   OUTPUT WARNING FLAG FOR SMALL LORENTZ HALF WIDTH.
!       LLORMX   OUTPUT WARNING FLAG FOR LARGE LORENTZ HALF WIDTH.
!       LDOPMN   OUTPUT WARNING FLAG FOR SMALL DOPPLER HALF WIDTH.
!       LDOPMX   OUTPUT WARNING FLAG FOR LARGE DOPPLER HALF WIDTH.
!       LLINMN   OUTPUT WARNING FLAG FOR SMALL EFFECTIVE LINE NUMBER.
!       LSSA     OUTPUT WARNING FLAG FOR SCATTERING ALBEDO NEAR 1.
!       LAEREX   OUTPUT WARNING FLAG FOR ROUTINE AEREXT.
!       LBMCRK   OUTPUT WARNING FLAG FOR ROUTINE BMCRKS.
!       LFLUXS   OUTPUT WARNING FLAG FOR ROUTINE FLUXES.
!       LSSRAD   OUTPUT WARNING FLAG FOR ROUTINE SSRAD.
!       LTRLAY   OUTPUT WARNING FLAG FOR ROUTINE TRLAY.
!       LNVERS   OUTPUT WARNING FLAG FOR ROUTINE DENFAC.
!       LGEOM    OUTPUT WARNING FLAG FOR INDEX OF REFRACTION GRADIENT.
!       LO3TRN   OUTPUT WARNING FLAG FOR OZONE CURTIS-GODSON PROBLEM.
      REAL TOLABS
      LOGICAL LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,                  &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      COMMON/LSTART/TOLABS,LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,     &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      SAVE /LSTART/

!     LOCAL VARIABLES:
!       ILO_T    LOWER TEMPERATURE GRID INTERPOLATION INDEX.
!       IHI_T    HIGHER TEMPERATURE GRID INTERPOLATION INDEX.
!       MOLSPC   MOLECULAR INDEX.
!       INTRVL   K-DISTRIBUTION LOOP INDEX.
!       ITLSUB   LOOP INDEX FOR LINE TAIL SUB-INTERVALS.
!       ITLSB1   ITLSUB MINUS 1.
!       IACT     LOOP INDEX FOR ACTIVE MOLECULES.
!       LAYER    LAYER BOUNDARY INDEX FOR CURRENT PATH
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.
!       SMROOT   MOLECULAR LINE SUM OVER SQUARE ROOT OF LINE STRENGTHS
!                TIMES COLUMN AMOUNT ALL DIVIDED BY BIN WIDTH.
!       SUMDOP   DOPPLER LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       SUMLOR   LORENTZ LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       F_TEMP   INTERPOLATION FACTOR (0.=HIGHER, 1.=LOWER TEMPERATURE).
!       COLAMT   SPECIES COLUMN AMOUNT [ATM CM].
!       BEER     BEER'S LAW EXTINCTION COEFFICIENT [CM-1/ATM].
!       SMBEER   SUM OF BEER'S LAW OPTICAL DEPTHS.
!       SMCONT   k-DEPENDENT CONTINUUM OPTICAL DEPTH.
!       ABCOEF   MOLECULAR ABSORPTION COEFFICIENT [CM-1/ATM]
!       OPTDEP   MOLECULAR ABSORPTION OPTICAL DEPTH.
!       SPCLIN   LINE SPACING BAND MODEL PARAMETER [CM].
!       SPACMN   MINIMUM LINE SPACING PARAMETER [CM].
!       TNCONT   CONTINUUM TRANSMITTANCE ARRAY.
!       TAIL25   LINE TAIL BAND MODEL PARAMETER [CM-1/ATM]
!       TRNTOT   SEGMENT MOLECULAR BAND MODEL TRANSMITTANCE.
!       P2       PRESSURE SQUARED INTERPOLATION VARIABLE.
!       LBMWID   FLAG, FALSE TO NUMERICALLY INTEGRATE EQUIVALENT WIDTH.
      INTEGER ILO_T,IHI_T,MOLSPC,INTRVL,ITLSUB,ITLSB1,LEVM1,IACT
      REAL F_TEMP,SUMDEP,SMROOT,SUMDOP,SUMLOR,BEER,SMBEER,COLAMT,ABCOEF,&
     &  OPTDEP,SPCLIN,TAIL25,ALFDOP,ALFLOR,WIDDOP,WIDLOR,TRNTOT,CURREN, &
     &  PRIOR,DELTA,STLTLO,STLTHI,SPACMN,P2,                            &
     &  TNCONT(NTLSUB),SMCONT(0:NTLSUB)
      LOGICAL LBMWID

!     FUNCTIONS:
      REAL BMTRN

!     INITIALIZE CONTINUUM OPTICAL DEPTH WITH
!     SPECTRALLY INTERPOLATED 5 CM-1 DATA:
      SMBEER=TX(14)

!     LOOP OVER BEER'S LAW MOLECULAR SPECIES (E.G. CFC'S):
!       13=CFC-11    14=CFC-12    15=CFC-13    16=CFC-14    17=CFC-22
!       18=CFC-113   19=CFC-114   20=CFC-115   21=CLONO2    22=HNO4
!       23=CHCL2F    24=CCL4      25=N2O5
      DO IACT=1,NACTX
          MOLSPC=MACTX(IACT)
          COLAMT=WSPTHM(MPOINT(MOLSPC),LEVEL)

!         ADD BEER'S LAW OPTICAL DEPTHS OF X-SPECIES TO SMCONT(1):
          IF(SDTL(1,1,1,MOLSPC).GT.0. .AND. COLAMT.GT.1.E-30)THEN
              IHI_T=KTMSS(MOLSPC,LEVEL)
              BEER=SDTL(1,IHI_T,1,MOLSPC)
              BEER=BEER                                                 &
     &          +GTMSS(MOLSPC,LEVEL)*(SDTL(1,IHI_T-1,1,MOLSPC)-BEER)
              SMBEER=SMBEER+BEER*COLAMT
          ENDIF
      ENDDO

!     INITIALIZE CONTINUUM OPTICAL DEPTH ARRAY:
      DO ITLSUB=0,NTLSUB
          SMCONT(ITLSUB)=0.
      ENDDO

!     INITIALIZE MOLECULAR SPECIES SUMS
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.
!       SMROOT   SUM OVER MOLECULAR LINES OF THE SQUARE ROOT OF
!                THE LINE STRENGTHS TIMES THE COLUMN AMOUNTS
!                ALL DIVIDED BY BIN WIDTH.
!       SUMDOP   DOPPLER LINE WIDTHS TIMES OPTICAL DEPTHS [CM-1].
!       SUMLOR   LORENTZ/COLLISION LINE WIDTHS TIMES
!                OPTICAL DEPTHS [CM-1].
      SUMDEP=0.
      SMROOT=0.
      SUMDOP=0.
      SUMLOR=0.

!     INITIALIZE BAND MODEL TRANSMISSION AND MINIMUM LINE SPACING:
      TRNTOT=1.
      SPACMN=1/BNDWID

!     LOOP OVER BAND MODEL MOLECULAR SPECIES
!       1=H2O    2=CO2    3=O3     4=N2O    5=CO     6=CH4
!       7=O2     8=NO     9=SO2   10=NO2   11=NH3   12=HNO3
      DO IACT=1,NACTBM
          MOLSPC=ABS(MACTBM(IACT))

!         SKIP SPECIES IF COLUMN DENSITY IS ZERO:
          COLAMT=WSPTHM(MPOINT(MOLSPC),LEVEL)
          IF(COLAMT.GT.0.)THEN

!             FETCH TEMPERATURE INTERPOLATION PARAMETERS
              IHI_T=JTMSS(MOLSPC,LEVEL)
              ILO_T=IHI_T-1
              F_TEMP=FTMSS(MOLSPC,LEVEL)

!             LINE CENTER CONTRIBUTIONS
              IF(MACTBM(IACT).LT.0)THEN

!                 MOLSPC LINES CENTERED IN THE CURRENT SPECTRAL BIN.
!                 INTERPOLATE BAND MODEL DATA OVER TEMPERATURE.
!                   ABCOEF   ABSORPTION COEFFICIENT [ATM-1 CM-1]
!                   OPTDEP   MOLECULAR ABSORPTION OPTICAL DEPTH
!                   SPCLIN   LINE SPACING BAND MODEL PARAMETER [CM]
                  ABCOEF=SDCN(IHI_T,MOLSPC)
                  ABCOEF=ABCOEF+F_TEMP*(SDCN(ILO_T,MOLSPC)-ABCOEF)
                  OPTDEP=ABCOEF*COLAMT
                  SUMDEP=SUMDEP+OPTDEP
                  SPCLIN=ODCN(IHI_T,MOLSPC)
                  SPCLIN=SPCLIN+F_TEMP*(ODCN(ILO_T,MOLSPC)-SPCLIN)
                  IF(SPCLIN.LT.SPACMN)SPACMN=SPCLIN
                  SMROOT=SMROOT+SQRT(OPTDEP*SPCLIN)
                  ALFDOP=T5MSS(MOLSPC,LEVEL)*DOP0(MOLSPC)
                  SUMDOP=SUMDOP+OPTDEP*ALFDOP

!                 THE LORENTZ/COLLISION HALF-WIDTH FOR CO2 IS
!                 ASSUMED TO VARY WITH TEMPERATURE TO THE NEGATIVE
!                 3/4 POWER; FOR ALL OTHER MOLECULES, A TEMPERATURE
!                 TO THE MINUS ONE-HALF POWER VARIATION IS ASSUMED.
                  ALFLOR=PTMSS(MOLSPC,LEVEL)*ALF0(MOLSPC)
                  SUMLOR=SUMLOR+OPTDEP*ALFLOR

!                 CALCULATE THE BAND MODEL TRANSMITTANCE
                  IF(OPTDEP.LT..001 .AND. SUMDEP.GT..01)THEN
!2BIN                 IF(EDGENR.GT.0)THEN
                          TRNTOT=TRNTOT*(1-OPTDEP)
!2BIN                 ELSE
!2BIN                     TRNTOT=TRNTOT*(1-OPTDEP/2)
!2BIN                 ENDIF
                  ELSE
                      WIDDOP=SPCLIN*ALFDOP
                      WIDLOR=SPCLIN*ALFLOR
                      LBMWID=.TRUE.
                      TRNTOT=TRNTOT                                     &
     &                  *BMTRN(OPTDEP,SPCLIN,WIDDOP,WIDLOR,LBMWID)
                  ENDIF
              ENDIF

!             LINE TAIL (TO 25 CM-1 FROM LINE CENTER) CONTRIBUTIONS.
!               TAIL25   LINE TAIL BAND MODEL PARAMETER [ATM-1 CM-1]
              IF(SDTL(0,1,1,MOLSPC).GT.0.)THEN
                  COLAMT=COLAMT*PSATMM(MOLSPC,LEVEL)
                  P2=P2MSS(MOLSPC,LEVEL)
                  DO ITLSUB=0,NTLSUB
                      STLTHI=SDTL(ITLSUB,IHI_T,1,MOLSPC)                &
     &                  +P2*(SDTL(ITLSUB,IHI_T,2,MOLSPC)                &
     &                      -SDTL(ITLSUB,IHI_T,1,MOLSPC))
                      STLTLO=SDTL(ITLSUB,ILO_T,1,MOLSPC)                &
     &                  +P2*(SDTL(ITLSUB,ILO_T,2,MOLSPC)                &
     &                      -SDTL(ITLSUB,ILO_T,1,MOLSPC))
                      TAIL25=STLTHI+F_TEMP*(STLTLO-STLTHI)
                      SMCONT(ITLSUB)=SMCONT(ITLSUB)+TAIL25*COLAMT
                  ENDDO
              ENDIF
          ENDIF
      ENDDO

!     CONTINUUM TRANSMITTANCE AND OPTICAL DEPTH:
      PRIOR=EXP(-SMCONT(NTLSUB))
      ITLSUB=NTLSUB
      DO ITLSB1=NTLSUB-1,0,-1
          CURREN=EXP(-SMCONT(ITLSB1))
          DELTA=SMCONT(ITLSUB)-SMCONT(ITLSB1)
          IF (ABS(DELTA).GE..01)THEN
              TNCONT(ITLSUB)=(CURREN-PRIOR)/DELTA
              IF(TNCONT(ITLSUB).GT.0. .AND. TRNTOT.GT.1.E-30)THEN
                  SMCONT(ITLSUB)=-SNGL(LOG(DBLE(TNCONT(ITLSUB))))
              ELSE
                  SMCONT(ITLSUB)=(SMCONT(ITLSUB)+SMCONT(ITLSB1))/2
              ENDIF
          ELSE
              TNCONT(ITLSUB)=PRIOR*(1+DELTA*(1+DELTA/3)/2)
              SMCONT(ITLSUB)=(SMCONT(ITLSUB)+SMCONT(ITLSB1))/2
          ENDIF
          PRIOR=CURREN
          ITLSUB=ITLSB1
      ENDDO

!     COMPUTE CORRELATED-K EXTINCTION OPTICAL DEPTHS AND TRANSMITTANCES.
      CALL CKDEP(SUMDEP,SMROOT,SUMDOP,SUMLOR,                           &
     &  TRNTOT,JNTRVL,SPACMN,SMBEER,TNCONT,SMCONT)

!     FOR MULTIPLE SCATTERING, STORE THE FRACTIONAL DECREASE IN
!     WEAK-LINE OPTICAL DEPTH TO THE SUN ACROSS THE CURRENT LAYER.
      DO INTRVL=1,JNTRVL
          DEPRAT(INTRVL,LEVEL)=DEPLAY(INTRVL)
          IF(LEVEL.GT.1)THEN
              LEVM1=LEVEL-1
              IF((DEPRAT(INTRVL,LEVM1).LT.DEPLAY(INTRVL) .OR.           &
     &          DEPLAY(INTRVL).LT.0.) .AND. LBMCRK)THEN
                  LBMCRK=.FALSE.
                  WRITE(IPR,'(/A,/(21X,A,I3,A,1P,E10.3))')              &
     &              'Warning from CKMSS:  Weak-line optical depth to'// &
     &              ' the sun is negative or decreasing with altitude.',&
     &              'The depth to the sun from the bottom of layer',    &
     &              LEVM1,' is',DEPRAT(INTRVL,LEVM1),'The depth to the' &
     &              //' sun from the top    of layer',LEVM1,' is',      &
     &              DEPLAY(INTRVL),'This occurred for k-distribution'   &
     &              //' interval number',INTRVL,'.'
              ENDIF
              IF(DEPRAT(INTRVL,LEVM1).GT.0.)DEPRAT(INTRVL,LEVM1)        &
     &          =1-DEPLAY(INTRVL)/DEPRAT(INTRVL,LEVM1)
          ENDIF
      ENDDO
      RETURN
      END

      SUBROUTINE CORK(JNTRVL,SUMDEP,RLINES,AVGDOP,AVGLOR,TRNTOT)

!     THIS ROUTINE IS THE DRIVER FOR DETERMINING CORRELATED-K OPTICAL
!     DEPTHS AND TRANSMITTANCES FROM LAYER BAND MODEL PARAMETERS.
      IMPLICIT NONE

!     INPUTS:
!       JNTRVL   NUMBER OF K-DISTRIBUTION INTERVALS FOR CURRENT FREQ.
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.
!       RLINES   LAYER EFFECTIVE NUMBER OF LINES.
!       AVGDOP   LAYER DOPPLER LINE WIDTH [CM-1].
!       AVGLOR   LAYER LORENTZ/COLLISION LINE WIDTH [CM-1].
!       TRNTOT   BAND MODEL SINGLE LAYER TOTAL TRANSMITTANCE.
      INTEGER JNTRVL
      REAL SUMDEP,RLINES,AVGDOP,AVGLOR,TRNTOT

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /CORKDT/
!       WTKSUB   SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       WTKSAV   SAVED SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       DEPLAY   INCREMENTAL OPTICAL DEPTHS.
!       TRNLAY   INCREMENTAL TRANSMITTANCES.
!       TRNCUM   CUMULATIVE TRANSMITTANCES.
!       K2TAIL   POINTER FROM K BIN TO LINE TAIL SUB-BIN
!                (=0 IF MULTIPLE LINE TAIL SUB-BINS CONTRIBUTE).
!       CONTWT   WEIGHTS FOR PARTITIONING LINE TAILS INTO K'S
!                (ONLY USED IF K2TAIL IS 0).
      REAL WTKSUB(MXKSUB),WTKSAV(NTLSUB),DEPLAY(MXKSUB),                &
     &  TRNLAY(MXKSUB),TRNCUM(MXKSUB),CONTWT(NTLSUB,MXKSUB)
      INTEGER K2TAIL(MXKSUB)
      COMMON/CORKDT/K2TAIL,WTKSUB,WTKSAV,DEPLAY,TRNLAY,TRNCUM,CONTWT
      SAVE /CORKDT/

!     LOCAL VARIABLES:
!       INTRVL   K-DISTRIBUTION LOOP INDEX.
      INTEGER INTRVL,IKSUB,ITER
      REAL TRN0,TRN1,TRN2,DELTRN,SCAL,TERM,ARG,DTRN2

!     LOCAL ARRAYS:
      REAL AK(0:MXKSUB)
      CALL KNTRP(JNTRVL,AVGLOR,AVGDOP,RLINES,AK)
      CALL KDIS(JNTRVL,AK,SUMDEP,TRN0,TRN1,TRN2)

!     INITIALIZE ITERATION COUNTER:
      ITER=0
   10 CONTINUE
      DELTRN=TRNTOT-TRN0
      IF(ABS(DELTRN).LT..001)RETURN

!     SCALE ABSORPTION COEFFICIENTS TO MATCH MODTRAN TRANSMITTANCE.
      ITER=ITER+1
      IF(ITER.GE.12)THEN
          IF(LJMASS)CALL WRTBUF(FATAL)
          WRITE(IPR,'(/A)')'Error in routine CORK: Too many iterations.'
          STOP 'Error in routine CORK:  Too many iterations.'
      ENDIF
      DTRN2=2*DELTRN
      ARG=TRN1**2+TRN2*DTRN2
      IF(ARG.GT.0.)THEN
          SCAL=1-DTRN2/(TRN1+SQRT(ARG))
          IF(SCAL.GT.1.5)THEN
              SCAL=1.5
          ELSEIF(SCAL.LT..5)THEN
              SCAL=.5
          ENDIF
      ELSEIF(TRN1.GT.0.)THEN
          SCAL=1-DELTRN/TRN1
          IF(SCAL.GT.1.5)THEN
              SCAL=1.5
          ELSEIF(SCAL.LT..5)THEN
              SCAL=.5
          ENDIF
      ELSEIF(DELTRN.GT.0.)THEN
          SCAL=.5
      ELSE
          SCAL=1.5
      ENDIF
      TRN0=0.
      TRN1=0.
      TRN2=0.
      DO INTRVL=1,JNTRVL
          DEPLAY(INTRVL)=SCAL*DEPLAY(INTRVL)
          TRNLAY(INTRVL)=EXP(-DEPLAY(INTRVL))
          TERM=WTKSUB(INTRVL)*TRNLAY(INTRVL)
          TRN0=TRN0+TERM
          TERM=DEPLAY(INTRVL)*TERM
          TRN1=TRN1+TERM
          TERM=DEPLAY(INTRVL)*TERM
          TRN2=TRN2+TERM
          IF(TRNLAY(INTRVL).LT.5.E-9)GOTO 20
      ENDDO
      GOTO 10
   20 CONTINUE
      IKSUB=INTRVL+1
      DO INTRVL=IKSUB,JNTRVL
          DEPLAY(INTRVL)=SCAL*DEPLAY(INTRVL)
          TRNLAY(INTRVL)=EXP(-DEPLAY(INTRVL))
          IF(TRNLAY(INTRVL).LE.0.)GOTO 30
      ENDDO
      GOTO 10
   30 CONTINUE
      IKSUB=INTRVL+1
      DO INTRVL=IKSUB,JNTRVL
          DEPLAY(INTRVL)=SCAL*DEPLAY(INTRVL)
          TRNLAY(INTRVL)=0.
      ENDDO
      GOTO 10
      END
      SUBROUTINE KNTRP(JNTRVL,AVGLOR,AVGDOP,RLINES,AK)

!     THIS ROUTINE PERFORMS INTERPOLATION OF THE K-DISTRIBUTION TABLE.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     I/O VARIABLES:

!     INPUTS
!       JNTRVL   NUMBER OF K-DISTRIBUTION INTERVALS FOR CURRENT FREQ.
!       AVGLOR   LORENTZ HALF-WIDTH [CM-1].
!       AVGDOP   DOPPLER HALF-WIDTH [CM-1].
!       RLINES   EFFECTIVE NUMBER OF LINES.

!     OUTPUTS
!       AK       NORMALIZED ABSORPTION COEFFICIENTS AT
!                SUB-INTERVAL BOUNDARIES [DIMENSIONLESS]
      INTEGER JNTRVL
      REAL AVGLOR,AVGDOP,RLINES,AK(0:MXKSUB)

!     COMMON /CORKTB/
!       GAMLIN   LORENTZ HALF-WIDTH BOUNDARY VALUES [CM-1].
!       GAMDIN   DOPPLER HALF-WIDTH BOUNDARY VALUES [CM-1].
!       RLININ   EFFECTIVE NUMBER OF LINES BOUNDARY VALUES.
!       VAL      ABSORPTION COEFFICIENT TABLE [ATM-1 CM-1].
      INTEGER NGAML,NGAMD,NNUML
      REAL GAMLIN,GAMDIN,RLININ,VAL
      COMMON/CORKTB/NGAML,NGAMD,NNUML,GAMLIN(MXGAML),GAMDIN(MXGAMD),    &
     &  RLININ(MXNUML),VAL(1:MXGAML,1:MXGAMD,1:MXNUML,0:MXKSUB)
      SAVE /CORKTB/
      INCLUDE 'IFIL.h'

!     /LSTART/
!       TOLABS   OUTPUT WARNING THRESHOLD FOR EXCESS ABSORPTION.
!       LLORMN   OUTPUT WARNING FLAG FOR SMALL LORENTZ HALF WIDTH.
!       LLORMX   OUTPUT WARNING FLAG FOR LARGE LORENTZ HALF WIDTH.
!       LDOPMN   OUTPUT WARNING FLAG FOR SMALL DOPPLER HALF WIDTH.
!       LDOPMX   OUTPUT WARNING FLAG FOR LARGE DOPPLER HALF WIDTH.
!       LLINMN   OUTPUT WARNING FLAG FOR SMALL EFFECTIVE LINE NUMBER.
!       LSSA     OUTPUT WARNING FLAG FOR SCATTERING ALBEDO NEAR 1.
!       LAEREX   OUTPUT WARNING FLAG FOR ROUTINE AEREXT.
!       LBMCRK   OUTPUT WARNING FLAG FOR ROUTINE BMCRKS.
!       LFLUXS   OUTPUT WARNING FLAG FOR ROUTINE FLUXES.
!       LSSRAD   OUTPUT WARNING FLAG FOR ROUTINE SSRAD.
!       LTRLAY   OUTPUT WARNING FLAG FOR ROUTINE TRLAY.
!       LNVERS   OUTPUT WARNING FLAG FOR ROUTINE DENFAC.
!       LGEOM    OUTPUT WARNING FLAG FOR INDEX OF REFRACTION GRADIENT.
!       LO3TRN   OUTPUT WARNING FLAG FOR OZONE CURTIS-GODSON PROBLEM.
      REAL TOLABS
      LOGICAL LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,                  &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      COMMON/LSTART/TOLABS,LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,     &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      SAVE /LSTART/

!     LOCAL VARIABLES:
!       INTRVL   K-DISTRIBUTION LOOP INDEX.
      INTEGER IGAML,JGAML,IGAMD,JGAMD,ILINE,JLINE,INTRVL
      REAL SLOPE,WI,WJ,WII,WIJ,WJI,WJJ

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     LORENTZ HALF-WIDTH INTERPOLATION INDICES.
      IGAML=1
      IF(AVGLOR.GT.GAMLIN(1))THEN
          JGAML=1
          IF(LLORMX)THEN
              WRITE(IPR,'(2A,2(F10.6,A),/11X,A)')' WARNING:  LORENTZ ', &
     &          'HALF-WIDTH =',AVGLOR,' CM-1 EXCEEDS K-TABLE MAXIMUM =',&
     &          GAMLIN(1),' CM-1.','(THIS WARNING WILL NOT BE REPEATED)'
              LLORMX=.FALSE.
          ENDIF
          GOTO 10
      ENDIF
      DO JGAML=2,NGAML
          IF(GAMLIN(JGAML).LE.AVGLOR)GOTO 10
          IGAML=JGAML
      ENDDO
      JGAML=NGAML

!     IF AVGLOR < GAMLIN(NGAML), THE GAMLIN(NGAML) VALUES ARE USED.
      IF(LLORMN)THEN
          WRITE(IPR,'(/2(2A,F11.8),A,/(11X,2A))')' WARNING:  LORENTZ',  &
     &      ' HALF-WIDTH =',AVGLOR,' CM-1 IS LESS THAN THE TABLE',      &
     &      ' MINIMUM VALUE OF',GAMLIN(NGAML),' CM-1.','K-DISTRIBUTION',&
     &      ' INTERPOLATION WILL BE BASED ON THE TABLE MINIMUM VALUE.', &
     &      '     ***  THIS WARNING WILL NOT BE REPEATED  ***'
          LLORMN=.FALSE.
      ENDIF
   10 CONTINUE

!     DOPPLER HALF-WIDTH INTERPOLATION INDICES.
      IGAMD=1
      IF(AVGDOP.GT.GAMDIN(1))THEN
          JGAMD=1
          IF(LDOPMX)THEN
              WRITE(IPR,'(2A,2(F10.6,A),/11X,A)')' WARNING:  DOPPLER ', &
     &          'HALF-WIDTH =',AVGDOP,' CM-1 EXCEEDS K-TABLE MAXIMUM =',&
     &          GAMDIN(1),' CM-1.','(THIS WARNING WILL NOT BE REPEATED)'
              LDOPMX=.FALSE.
          ENDIF
          GOTO 20
      ENDIF
      DO JGAMD=2,NGAMD
          IF(GAMDIN(JGAMD).LE.AVGDOP)GOTO 20
          IGAMD=JGAMD
      ENDDO
      JGAMD=NGAMD

!     IF AVGDOP < GAMDIN(NGAMD), THE GAMDIN(NGAMD) VALUES ARE USED.
      IF(LDOPMN)THEN
          WRITE(IPR,'(/2(2A,F11.8),A,/(11X,2A))')' WARNING:  DOPPLER',  &
     &      ' HALF-WIDTH =',AVGDOP,' CM-1 IS LESS THAN THE TABLE',      &
     &      ' MINIMUM VALUE OF',GAMDIN(NGAMD),' CM-1.','K-DISTRIBUTION',&
     &      ' INTERPOLATION WILL BE BASED ON THE TABLE MINIMUM VALUE.', &
     &      '     ***  THIS WARNING WILL NOT BE REPEATED  ***'
          LDOPMN=.FALSE.
      ENDIF
   20 CONTINUE

!     EFFECTIVE NUMBER OF LINES INTERPOLATION INDICES.  [IF RLINES
!     EXCEEDS RLININ(NNUML), THE RLININ(NNUML) VALUES ARE USED.]
      ILINE=1
      IF(RLINES.LT.RLININ(1)-.00001)THEN
          IF(LLINMN)THEN
              WRITE(IPR,'(/2(A,1P,E11.4),/21X,A)')                      &
     &          ' WARNING from KNTRP:  Effective number of lines =',    &
     &          RLINES,' is less than',RLININ(1),' Band model tuning'   &
     &          //' enables the value to be as small as a half.'
              LLINMN=.FALSE.
          ENDIF
          JLINE=1
          RLINES=RLININ(1)
          GOTO 30
      ENDIF
      DO JLINE=2,NNUML
          IF(RLININ(JLINE).GE.RLINES)GOTO 30
          ILINE=JLINE
      ENDDO
      JLINE=NNUML
   30 CONTINUE

!     ABSORPTION COEFFICIENTS
      DO INTRVL=0,JNTRVL

!         LINEARLY INTERPOLATE OVER THE LORENTZ HALF-WIDTHS.
          WII=VAL(IGAML,IGAMD,ILINE,INTRVL)
          WJI=VAL(IGAML,JGAMD,ILINE,INTRVL)
          WIJ=VAL(IGAML,IGAMD,JLINE,INTRVL)
          WJJ=VAL(IGAML,JGAMD,JLINE,INTRVL)
          IF(GAMLIN(IGAML).NE.GAMLIN(JGAML))THEN
              SLOPE=(AVGLOR-GAMLIN(IGAML))/(GAMLIN(JGAML)-GAMLIN(IGAML))
              WII=WII+SLOPE*(VAL(JGAML,IGAMD,ILINE,INTRVL)-WII)
              WJI=WJI+SLOPE*(VAL(JGAML,JGAMD,ILINE,INTRVL)-WJI)
              WIJ=WIJ+SLOPE*(VAL(JGAML,IGAMD,JLINE,INTRVL)-WIJ)
              WJJ=WJJ+SLOPE*(VAL(JGAML,JGAMD,JLINE,INTRVL)-WJJ)
          ENDIF

!         LINEARLY INTERPOLATE OVER THE DOPPLER HALF-WIDTHS.
          WI=WII
          WJ=WIJ
          IF(GAMDIN(IGAMD).NE.GAMDIN(JGAMD))THEN
              SLOPE=(AVGDOP-GAMDIN(IGAMD))/(GAMDIN(JGAMD)-GAMDIN(IGAMD))
              WI=WII+SLOPE*(WJI-WII)
              WJ=WIJ+SLOPE*(WJJ-WIJ)
          ENDIF

!         LINEARLY INTERPOLATE OVER THE EFFECTIVE NUMBER OF LINES.
          AK(INTRVL)=WI
          IF(RLININ(ILINE).NE.RLININ(JLINE))THEN
              SLOPE=(RLINES-RLININ(ILINE))/(RLININ(JLINE)-RLININ(ILINE))
              AK(INTRVL)=WI+SLOPE*(WJ-WI)
          ENDIF
      ENDDO
      RETURN
      END
      SUBROUTINE KDIS(JNTRVL,AK,SUMDEP,TRN0,TRN1,TRN2)

!     ROUTINE TO CALCULATE K-DISTRIBUTION SUB-INTERVAL TRANSMITTANCES,
!     TRNLAY, AND OPTICAL DEPTHS, DEPLAY.  FOR SUB-INTERVAL I,

!                                       G(I)
!                             1          /      - K(G) X
!       TRNLAY(I)   =   -------------    |     e          dG
!                       G(I) - G(I-1)    /
!                                      G(I-1)

!     THE WEAK-LINE OPTICAL DEPTH, K(G)*X, IS ASSUMED TO VARY EXPONEN-
!     TIALLY WITH G FROM AK(I-1)*SUMDEP(I-1) TO AK(I)*SUMDEP(I).  THUS,

!                       E [AK(I-1) SUMDEP(I-1)]  -  E [AK(I) SUMDEP(I)]
!                        1                           1
!       TRNLAY(I)   =   -----------------------------------------------
!                       LN[AK(I) SUMDEP(I)]  -  LN[AK(I-1) SUMDEP(I-1)]

!     WHERE E1 IS THE FIRST ORDER EXPONENTIAL INTEGRAL.  THE OPTICAL
!     DEPTH FOR THE SUB-INTERVAL IS DEFINED BY DEPLAY(I)=-LN[TRNLAY(I)].
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     I/O VARIABLES:

!     INPUTS
!       JNTRVL   NUMBER OF K-DISTRIBUTION INTERVALS FOR CURRENT FREQ.
!       AK       NORMALIZED ABSORPTION COEFFICIENTS AT
!                SUB-INTERVAL BOUNDARIES [DIMENSIONLESS].
!       SUMDEP   WEAK-LINE OPTICAL DEPTH.

!     OUTPUTS (USED FOR FITTING TOTAL TRANSMITTANCE)
!       TRN0     TOTAL LAYER TRANSMITTANCE
!       TRN1     TOTAL LAYER TRANSMITTANCE FIRST MOMENT
!       TRN2     TOTAL LAYER TRANSMITTANCE SECOND MOMENT

      INTEGER JNTRVL
      REAL AK(0:MXKSUB),SUMDEP,TRN0,TRN1,TRN2

!     /CORKDT/
!       WTKSUB   SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       WTKSAV   SAVED SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       DEPLAY   INCREMENTAL OPTICAL DEPTHS.
!       TRNLAY   INCREMENTAL TRANSMITTANCES.
!       TRNCUM   CUMULATIVE TRANSMITTANCES.
!       K2TAIL   POINTER FROM K BIN TO LINE TAIL SUB-BIN
!                (=0 IF MULTIPLE LINE TAIL SUB-BINS CONTRIBUTE).
!       CONTWT   WEIGHTS FOR PARTITIONING LINE TAILS INTO K'S
!                (ONLY USED IF K2TAIL IS 0).
      REAL WTKSUB(MXKSUB),WTKSAV(NTLSUB),DEPLAY(MXKSUB),                &
     &  TRNLAY(MXKSUB),TRNCUM(MXKSUB),CONTWT(NTLSUB,MXKSUB)
      INTEGER K2TAIL(MXKSUB)
      COMMON/CORKDT/K2TAIL,WTKSUB,WTKSAV,DEPLAY,TRNLAY,TRNCUM,CONTWT
      SAVE /CORKDT/

!     FUNCTIONS:
      DOUBLE PRECISION E1FUNC

!     LOCAL VARIABLES:
!       INTRVL   K-DISTRIBUTION LOOP INDEX.
      INTEGER INTRVL,IKSUB
      LOGICAL LE1X1
      REAL AKSTOR,X1,X2,AKRAT,WEAK,EXPAN,TERM
      DOUBLE PRECISION E1X1,E1X2
      AKSTOR=AK(0)
      X1=AKSTOR*SUMDEP
      TRN0=0.
      TRN1=0.
      TRN2=0.
      DO INTRVL=1,JNTRVL
          X2=AK(INTRVL)*SUMDEP
          IF(X2.GT..002)GOTO 10
          AKRAT=AK(INTRVL)/AKSTOR
          IF(AKRAT.LT.1.02)THEN
              DEPLAY(INTRVL)=(X1+X2)/2
              TRNLAY(INTRVL)=EXP(-DEPLAY(INTRVL))
          ELSE

!             WEAK-LINE LIMIT
              WEAK=(X2-X1)/LOG(AKRAT)
              EXPAN=1-(X2+X1)/4
              TRNLAY(INTRVL)=1-WEAK*EXPAN
              DEPLAY(INTRVL)=WEAK*(EXPAN+WEAK/2)
          ENDIF
          TERM=WTKSUB(INTRVL)*TRNLAY(INTRVL)
          TRN0=TRN0+TERM
          TERM=DEPLAY(INTRVL)*TERM
          TRN1=TRN1+TERM
          TERM=DEPLAY(INTRVL)*TERM
          TRN2=TRN2+TERM
          AKSTOR=AK(INTRVL)
          X1=X2
      ENDDO
      RETURN
   10 CONTINUE
      IKSUB=INTRVL
      LE1X1=.TRUE.
      DO INTRVL=IKSUB,JNTRVL
          X2=AK(INTRVL)*SUMDEP
          AKRAT=AK(INTRVL)/AKSTOR
          IF(AKRAT.LT.1.02)THEN
              DEPLAY(INTRVL)=(X1+X2)/2
              TRNLAY(INTRVL)=EXP(-DEPLAY(INTRVL))
              LE1X1=.TRUE.
          ELSE
              IF(LE1X1)E1X1=E1FUNC(X1)
              E1X2=E1FUNC(X2)
              TRNLAY(INTRVL)=REAL(E1X1-E1X2)/LOG(AKRAT)
              IF(TRNLAY(INTRVL).LT.5.E-9)GOTO 20
              DEPLAY(INTRVL)=-LOG(TRNLAY(INTRVL))
              LE1X1=.FALSE.
              E1X1=E1X2
          ENDIF
          TERM=WTKSUB(INTRVL)*TRNLAY(INTRVL)
          TRN0=TRN0+TERM
          TERM=DEPLAY(INTRVL)*TERM
          TRN1=TRN1+TERM
          TERM=DEPLAY(INTRVL)*TERM
          TRN2=TRN2+TERM
          AKSTOR=AK(INTRVL)
          X1=X2
      ENDDO
      RETURN
   20 CONTINUE
      DEPLAY(INTRVL)=(X1+X2)/2
      TRNLAY(INTRVL)=EXP(-DEPLAY(INTRVL))
      IKSUB=INTRVL+1
      DO INTRVL=IKSUB,JNTRVL
          X1=X2
          X2=AK(INTRVL)*SUMDEP
          DEPLAY(INTRVL)=(X1+X2)/2
          TRNLAY(INTRVL)=EXP(-DEPLAY(INTRVL))
          IF(TRNLAY(INTRVL).LE.0.)GOTO 30
      ENDDO
      RETURN
   30 CONTINUE
      IKSUB=INTRVL+1
      DO INTRVL=IKSUB,JNTRVL
          X1=X2
          X2=AK(INTRVL)*SUMDEP
          DEPLAY(INTRVL)=(X1+X2)/2
          TRNLAY(INTRVL)=0.
      ENDDO
      END

      DOUBLE PRECISION FUNCTION E1FUNC(Z)

!     EXPONENTIAL INTEGRAL (E1) APPROXIMATIONS FROM ABRAMOWITZ & STEGUN
      IMPLICIT NONE

!     ARGUMENTS:
!       Z        SINGLE PRECISION ARGUMENT
      REAL Z

!     PARAMETERS:
      DOUBLE PRECISION A0,A1,A2,A3,A4,A5,B1,B2,B3,B4,C1,C2,C3,C4
      PARAMETER(A0=-.57721566D0,A1= .99999193D0,A2=-.24991055D0,        &
     &          A3= .05519968D0,A4=-.00976004D0,A5= .00107857D0,        &
     &          B1= 8.5733287401D0,B2=18.0590169730D0,                  &
     &          B3= 8.6347608925D0,B4= 0.2677737343D0,                  &
     &          C1= 9.5733223454D0,C2=25.6329561486D0,                  &
     &          C3=21.0996530827D0,C4= 3.9584969228D0)

!     LOCAL VARIABLES:
!       DZ       DOUBLE PRECISION ARGUMENT.
      DOUBLE PRECISION DZ
      DZ=DBLE(Z)
      IF(DZ.LE.1.)THEN
          E1FUNC=A0-LOG(DZ)+DZ*(A1+DZ*(A2+DZ*(A3+DZ*(A4+DZ*A5))))
      ELSEIF(DZ.LT.30.)THEN
          E1FUNC=(B4/DZ+B3+DZ*(B2+DZ*(B1+DZ)))*EXP(-DZ)                 &
     &      /(C4+DZ*(C3+DZ*(C2+DZ*(C1+DZ))))
      ELSE
          E1FUNC=3.02155D-15
      ENDIF
      RETURN
      END

      SUBROUTINE CHKSPC(SUMDEP,AVGSPC,AVGDOP,AVGLOR,TRNTOT,SPACMN)

!     CHKSPC CHECKS IF "TRN", THE COMBINED SPECIES MOLECULAR BAND MODEL
!     PARAMETER TRANSMITTANCE IS WITHIN "TOLTRN" OF "TRNTOT".  IF NOT,
!     THE LINE SPACING PARAMETER IS MODIFIED UNTIL TRANSMITTANCES AGREE.
      IMPLICIT NONE

!     PARAMETERS:
!       TOLTRN   TRANSMITTANCE TOLERANCE.
      REAL TOLTRN
      PARAMETER(TOLTRN=.0003)
      INCLUDE 'PARAMS.h'

!     INPUTS:
!       SUMDEP   WEAK-LINE OPTICAL DEPTH
!       AVGSPC   LAYER LINE SPACING BAND MODEL PARAMETER [CM].
!       AVGDOP   LAYER DOPPLER LINE WIDTH [CM-1].
!       AVGLOR   LAYER LORENTZ/COLLISION LINE WIDTH [CM-1].
!       TRNTOT   BAND MODEL SINGLE LAYER TOTAL TRANSMITTANCE.
!       SPACMN   MINIMUM LINE SPACING PARAMETER [CM].
      REAL SUMDEP,AVGSPC,AVGDOP,AVGLOR,TRNTOT,SPACMN

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /LSTART/
!       TOLABS   OUTPUT WARNING THRESHOLD FOR EXCESS ABSORPTION.
!       LLORMN   OUTPUT WARNING FLAG FOR SMALL LORENTZ HALF WIDTH.
!       LLORMX   OUTPUT WARNING FLAG FOR LARGE LORENTZ HALF WIDTH.
!       LDOPMN   OUTPUT WARNING FLAG FOR SMALL DOPPLER HALF WIDTH.
!       LDOPMX   OUTPUT WARNING FLAG FOR LARGE DOPPLER HALF WIDTH.
!       LLINMN   OUTPUT WARNING FLAG FOR SMALL EFFECTIVE LINE NUMBER.
!       LSSA     OUTPUT WARNING FLAG FOR SCATTERING ALBEDO NEAR 1.
!       LAEREX   OUTPUT WARNING FLAG FOR ROUTINE AEREXT.
!       LBMCRK   OUTPUT WARNING FLAG FOR ROUTINE BMCRKS.
!       LFLUXS   OUTPUT WARNING FLAG FOR ROUTINE FLUXES.
!       LSSRAD   OUTPUT WARNING FLAG FOR ROUTINE SSRAD.
!       LTRLAY   OUTPUT WARNING FLAG FOR ROUTINE TRLAY.
!       LNVERS   OUTPUT WARNING FLAG FOR ROUTINE DENFAC.
!       LGEOM    OUTPUT WARNING FLAG FOR INDEX OF REFRACTION GRADIENT.
!       LO3TRN   OUTPUT WARNING FLAG FOR OZONE CURTIS-GODSON PROBLEM.
      REAL TOLABS
      LOGICAL LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,                  &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      COMMON/LSTART/TOLABS,LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,     &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      SAVE /LSTART/

!     LOCAL VARIABLES:
!       LBMWID   FLAG, FALSE TO NUMERICALLY INTEGRATE EQUIVALENT WIDTH.
      INTEGER ITER
      REAL WIDDOP,WIDLOR,TRN,SPACMX
      LOGICAL LBMWID

!     EXTERNAL FUNCTIONS:
      REAL BMTRN

!     CALCULATE BAND MODEL TRANSMITTANCE
      ITER=0
      LBMWID=.TRUE.
   10 CONTINUE
      ITER=ITER+1
      WIDDOP=AVGDOP*AVGSPC
      WIDLOR=AVGLOR*AVGSPC
      TRN=BMTRN(SUMDEP,AVGSPC,WIDDOP,WIDLOR,LBMWID)
      IF(TRN-TRNTOT.GT.TOLTRN)THEN

!         TRANSMISSION TOO HIGH SO AVGSPC IS TOO LOW.
!         DOUBLE AVGSPC TO GET A TRANSMITTANCE LOWER BOUND.
          IF(ITER.GT.3)THEN

              IF(TRN-TRNTOT.GT.TOLABS)THEN

!                 RESET TOLABS TO HIGHER VALUE:
                  TOLABS=TRN-TRNTOT
                  WRITE(IPR,'(/A,3(/22X,A),F8.5,A,/2(32X,F8.5,A,/))')   &
     &              ' Warning from CHKSPC:  Although the reciprocal'//  &
     &              ' line spacing parameter (the',' number of lines'// &
     &              ' per spectral bin) was increased by a',' factor'// &
     &              ' of 8, the combined species segment absorbance',   &
     &              ' is still',TRN-TRNTOT,' less than the band model'  &
     &              //' value.',TRN,' Transmittance from combined'//    &
     &              ' species band model parameters',TRNTOT,' Product'  &
     &              //' of single molecule band model transmittances'
              ENDIF
              RETURN
          ENDIF
          AVGSPC=2*AVGSPC
          GOTO 10
      ENDIF
      IF(TRNTOT-TRN.GT..0003)THEN

!         DETERMINE TRANSMITTANCE UPPER BOUND.
          SPACMX=AVGSPC
          ITER=0
   20     CONTINUE
          WIDDOP=AVGDOP*SPACMN
          WIDLOR=AVGLOR*SPACMN
          TRN=BMTRN(SUMDEP,SPACMN,WIDDOP,WIDLOR,LBMWID)
          IF(TRN.LE.0.)THEN

!             IF SPACMN IS TOO LOW, BMTRN WILL RETURN 0 INSTEAD OF AN
!             UPPER BOUND.  TRY INCREASING SPACMN:
              ITER=ITER+1
              SPACMN=MIN(2*SPACMN,(SPACMN+SPACMX)/2)
              IF(SPACMN.GE.SPACMX .OR. ITER.GT.4)THEN
                  WRITE(IPR,'(/A)')                                     &
     &              'Error in CHKSPC:  Transmittance bounds not found.'
                  STOP                                                  &
     &              'Error in CHKSPC:  Transmittance bounds not found.'
              ENDIF
              GOTO 20
          ENDIF
   30     CONTINUE
          ITER=ITER+1
          IF(TRN-TRNTOT.LT.TOLTRN)THEN
              IF(TRNTOT-TRN.GT.TOLTRN)THEN

!                 TRANSMISSION TOO LOW SO AVGSPC IS TOO HIGH.
!                 CUT SPACMN IN HALF TO GET A TRANSMITTANCE UPPER BOUND.
                  IF(ITER.GT.3)THEN

!                     ACCEPT CURRENT VALUE IF TRANSMITTANCES ARE LOW:
                      IF(TRNTOT.LT..01 .AND. TRN.GT.0.)THEN
                          AVGSPC=SPACMN
                          RETURN
                      ENDIF
                      IF(LJMASS)CALL WRTBUF(FATAL)
                      WRITE(IPR,'(/A)')'Error in CHKSPC: '              &
     &                  //' No transmittance upper bound.'
                      STOP                                              &
     &                  'Error in CHKSPC: No transmittance upper bound.'
                  ENDIF
                  SPACMN=SPACMN/2
                  WIDDOP=AVGDOP*SPACMN
                  WIDLOR=AVGLOR*SPACMN
                  TRN=BMTRN(SUMDEP,SPACMN,WIDDOP,WIDLOR,LBMWID)
                  GOTO 30
              ENDIF

!             TRNTOT ESSENTIALLY EQUAL MAXIMUM TRANSMITTANCE
              AVGSPC=SPACMN
          ELSE

!             USE BISECTION METHOD TO DETERMINE LINE SPACING
!             THAT MATCHES TRNTOT.  PROBLEMS CAN ARISE BECAUSE
!             OF DISCONTINUITIES AT BRANCH POINTS IN BMTRN.  AS A
!             RESULT, A TOLERANCE OF THREE-HUNDREDTHS OF A PERCENT
!             HAS BEEN SET FOR THE FIRST 12 ITERATIONS, BUT
!             IT IS RELAXED TO A THIRD OF A PERCENT THEREAFTER.
              ITER=0
   40         CONTINUE
              ITER=ITER+1
              AVGSPC=(SPACMN+SPACMX)/2
              WIDDOP=AVGDOP*AVGSPC
              WIDLOR=AVGLOR*AVGSPC
              TRN=BMTRN(SUMDEP,AVGSPC,WIDDOP,WIDLOR,LBMWID)
              IF((TRN-TRNTOT.GT..0003 .AND. ITER.LE.12)                 &
     &          .OR. TRN-TRNTOT.GT..0033)THEN

!                 TRN TOO HIGH, AVGSPC TOO LOW
                  SPACMN=AVGSPC
                  IF(ITER.LT.20)GOTO 40
                  IF(LJMASS)CALL WRTBUF(FATAL)
                  WRITE(IPR,'(/A)')                                     &
     &              'Error in CHKSPC:  Too many iterations.'
                  STOP 'Error in CHKSPC:  Too many iterations.'
              ELSEIF((TRNTOT-TRN.GT..0003 .AND. ITER.LE.12)             &
     &          .OR. TRNTOT-TRN.GT..0033)THEN

!                 TRN TOO LOW, AVGSPC TOO HIGH
                  SPACMX=AVGSPC
                  IF(ITER.LT.20)GOTO 40
                  IF(LJMASS)CALL WRTBUF(FATAL)
                  WRITE(IPR,'(/A)')                                     &
     &              'Error in CHKSPC:  Too many iterations.'
                  STOP 'Error in CHKSPC:  Too many iterations.'
              ENDIF
          ENDIF
      ENDIF
      RETURN
      END
