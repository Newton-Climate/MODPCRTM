      SUBROUTINE TRANS(RESCHR,IPH,ISOURC,IDAY,ANGLEM,                   &
     &  GROUND,KNTRVL,NLOS,LNFILT,SUNFUN,APPREF,DH2O,MLTRFL,NCHALL,RAD)

!     ROUTINE TRANS CALCULATES TRANSMITTANCE AND RADIANCE VALUES
!     BETWEEN IV1 AND IV2 FOR A GIVEN ATMOSPHERIC SLANT PATH.
      IMPLICIT NONE

!     INPUT ARGUMENTS:
!       RESCHR   BAND MODEL RESOLUTION CHARACTER STRING.
!       ANGLEM   LUNAR PHASE ANGLE [0 TO 180 DEG].
!       GROUND   LOGICAL FLAG, TRUE IF LINE OF SIGHT INTERSECTS GROUND.
!       NLOS     NUMBER OF LINE-OF-SIGHT PATHS.
!       LNFILT   LENGTH OF FILTER FUNCTION FILE NAME
!                (>0 IF FILTER FUNCTION FILE IS TO BE USED)
!       SUNFUN   TOP-OF-ATMOSPHERE SOLAR IRRADIANCE
!                FUNCTION [W CM-2 / CM-1].
!       DH2O     WATER LAYER THICKNESS (mm), INPUT FROM CARD 4A!
!       MLTRFL   'T' MULTIPLE REFLECTION; 'F' SINGLE PASS EXTINCTION.
      CHARACTER RESCHR*2
      INTEGER IPH,ISOURC,IDAY,KNTRVL,NLOS,LNFILT
      LOGICAL GROUND(NLOS),APPREF,MLTRFL
      REAL SUNFUN,DH2O
      DOUBLE PRECISION ANGLEM
      EXTERNAL SUNFUN

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     COMMONS:
      INCLUDE 'IFIL.h'
      INCLUDE 'BASE.h'
      INCLUDE 'BMHEAD.h'
      INCLUDE 'YPROP.h'
      INCLUDE 'PC.h'

!     /CARD1/
!       MODEL    MODEL ATMOSPHERE INDEX.
!       ITYPE    SLANT PATH TYPE.
!       IEMSCT   RADIATIVE TRANSFER MODE.
!                  0 FOR TRANSMITTANCE
!                  1 FOR THERMAL EMISSION ONLY
!                  2 FOR THERMAL EMISSION PLUS SOLAR SCATTER
!                  3 FOR TRANSMITTED SOLAR IRRADIANCE
!                  4 FOR SOLAR SCATTER ONLY
!       M1       MODEL ATMOSPHERE FOR PRESSURE & TEMPERATURE PROFILES.
!       M2       MODEL ATMOSPHERE FOR H2O PROFILE.
!       M3       MODEL ATMOSPHERE FOR O3 PROFILE.
!       I_RD2C   READ CARD 2C, 2C1, ... IF EQUAL 1; SKIP IF EQUAL TO 0.
!       NOPRNT   PRINT FLAG.
!       MODTRN   MODTRAN BAND MODEL FLAG.
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,I_RD2C,NOPRNT
      LOGICAL MODTRN
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,I_RD2C,NOPRNT,MODTRN

!     /SRFACE/
!       NWVSRF   NUMBER OF WAVELENGTH GRID POINTS.
!       WVSURF   WAVELENGTH GRID FOR IMAGED-PIXELS (1 TO MLOS) AND
!                AREA-AVERAGED (MLOSP1) SURFACES [MICRONS].
!       GDIRRF   AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!                AT SOLAR ANGLE.
!       SALB     AREA-AVERAGED GROUND SURFACE ALBEDO SPECTRAL ARRAY.
!       GAZMOM   GAUSS ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       VAZMOM   VIEW ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       GDIREM   GAUSS ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       VDIREM   VIEW ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       HDIR     IMAGED-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCES
!                AT VIEWING ANGLES.
!       BRDF     IMAGED-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!                FUNCTION AT VIEWING, SUN AND RELATIVE AZIMUTH ANGLES.
      INTEGER NWVSRF
      REAL WVSURF,GDIRRF,SALB,GAZMOM,VAZMOM,GDIREM,VDIREM,HDIR,BRDF
      COMMON/SRFACE/NWVSRF(MLOSP1),WVSURF(MLOSP1,MWVSRF),               &
     &  GDIRRF(MWVSRF),SALB(MWVSRF),GAZMOM(1:MI,0:MI,0:MAZ,1:MWVSRF),   &
     &  VAZMOM(1:MLOS,0:MI,0:MAZ,1:MWVSRF),GDIREM(MI,MWVSRF),           &
     &  VDIREM(MLOS,MWVSRF),HDIR(MLOS,MWVSRF),BRDF(MLOS,MWVSRF)

!     /CARD4/
!       IV1      LOWEST SPECTRAL FREQUENCY OUTPUT [CM-1].
!       IV2      HIGHEST SPECTRAL FREQUENCY OUTPUT [CM-1].
!       IDV      PRINTOUT SPECTRAL FREQUENCY STEP SIZE [CM-1].
!       IFWHM    TRIANGULAR SLIT FULL-WIDTH-HALF-MAXIMUM [CM-1].
!       VBAND    CURRENT COMPUTATION BAND FREQUENCY [CM-1].
!                (EQUALS BAND CENTER FOR 1, 5 & 15 CM-1 BAND MODELS;
!                EQUALS THE MINIMUM BAND VALUE FOR 0.1 CM-1 BAND MODEL)
!       IBINPT   BIN NUMBER OF CURRENT SPECTRAL POINT.
!                (CENTER FREQUENCY = IBINPT * BNDWID + OSHIFT).
!       IBINLO   BIN NUMBER OF (PADDED) SPECTRAL RANGE LOWER BOUND.
!       IBINHI   BIN NUMBER OF (PADDED) SPECTRAL RANGE UPPER BOUND.
!       IBINMN   BIN NUMBER OF MINIMUM COMPUTATION SPECTRAL POINT.
!       IBINMX   BIN NUMBER OF MAXIMUM COMPUTATION SPECTRAL POINT.
!       IBINDL   BIN NUMBER INCREMENT FOR SPECTRAL PRINTOUT.
!       IBINRS   BIN NUMBER INCREMENT EQUAL TO SPECTRAL RESOLUTION.
!       IBINOS   BIN NUMBER OFFSET BETWEEN CURRENT & OUTPUT SPC POINTS.
!       IBINWR   BIN NUMBER OF NEXT SPECTRAL DATA WRITE.
!       MBINPT   BIN NUMBER MAXIMUM FOR CURRENT BAND MODEL RESOLUTION.
!       IDBIN5   SPECTRAL BIN NUMBER STEP SIZE FOR 5 CM-1 GRID.
!       ISTEP5   INCREMENT FOR RETRIEVING 5 CM-1 RESOLUTION DATA [CM-1].
!       NSPCDT   NUMBER OF OUTPUT SPECTRAL DATA POINTS.
      DOUBLE PRECISION IDV
      REAL IV1,IV2,IFWHM,VBAND
      INTEGER IBINPT,IBINLO,IBINHI,IBINMN,IBINMX,IBINDL,                &
     &  IBINRS,IBINOS,IBINWR,MBINPT,IDBIN5,ISTEP5,NSPCDT
      COMMON/CARD4/IDV,IV1,IV2,IFWHM,VBAND,IBINPT,IBINLO,IBINHI,IBINMN, &
     &  IBINMX,IBINDL,IBINRS,IBINOS,IBINWR,MBINPT,IDBIN5,ISTEP5,NSPCDT

!     /RCNSTN/
!       PI       THE CONSTANT PI
!       DEG      NUMBER OF DEGREES IN ONE RADIAN.
!       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.
!       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.
!       RRIGHT   SMALLEST SINGLE PRECISION REAL ADDED TO 1 EXCEEDS 1.
      REAL PI,DEG,BIGNUM,BIGEXP,RRIGHT
      COMMON/RCNSTN/PI,DEG,BIGNUM,BIGEXP,RRIGHT

!     /CNTRL/
!       NSEG     NUMBER OF PATH SEGMENTS ALONG LINE-OF-SIGHT.
!       ML       NUMBER OF ATMOSPHERIC PROFILE LEVELS.
!       MLFLX    NUMBER OF LEVELS FOR WHICH FLUX VALUES ARE WRITTEN.
!       IMULT    MULTIPLE SCATTERING FLAG
!                  (0=NONE, 1=AT SENSOR, -1=AT FINAL OR TANGENT POINT).
!       THERML   FLAG TO CALCULATE THERMAL SCATTER.
      INTEGER NSEG,ML,MLFLX,IMULT
      LOGICAL THERML
      COMMON/CNTRL/NSEG(0:MLOSP1),ML,MLFLX,IMULT,THERML

!     /SURFWV/
!       LAMBER  LOGICAL FLAG, .TRUE. FOR LAMBERTIAN SURFACE.
!       TPTEMP  TARGET-PIXEL SURFACE TEMPERATURES [K].
!       TPHDIR  TARGET-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCE AT
!               VIEWING ANGLES.
!       TPBRDF  TARGET-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!               FUNCTION AT VIEWING AND SUN ANGLES.
!       AATEMP  AREA-AVERAGED GROUND SURFACE TEMPERATURES [K].
!       AASALB  AREA-AVERAGED GROUND SURFACE ALBEDO.
!       AADREF  AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!               AT THE SOLAR ZENITH ANGLE.
!       EMU     GROUND DIRECTIONAL EMISSIVITY AT VIEWING ANGLES.
!       BEM     GROUND DIRECTIONAL EMISSIVITY AT QUADRATURE ANGLES.
!       RMU     GROUND BRDF AZIMUTH COMPONENTS AT VIEWING ANGLES
!               AND AT SUN (=0) OR QUADRATURE (>0) ANGLE.
!       BDR     GROUND BRDF AZIMUTH COMPONENTS AT QUADRATURE ANGLE
!               AND AT SUN (=0) OR QUADRATURE (>0) ANGLE.
      LOGICAL LAMBER
      REAL TPTEMP,TPHDIR,TPBRDF,AATEMP,AASALB,AADREF,EMU,BEM,RMU,BDR
      COMMON/SURFWV/LAMBER,TPTEMP(MLOS),TPHDIR(MLOS),TPBRDF(MLOS),      &
     &  AATEMP,AASALB,AADREF,EMU(MXUMU),BEM(MI),                        &
     &  RMU(1:MXUMU,0:MI,0:MAZ),BDR(1:MI,0:MI,0:MAZ)                    &

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
      REAL UMU,PHI
      INTEGER NSTR,NAZ,N2GAUS,NUMU,MAPUMU,NPHI,MAPPHI
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      COMMON/DISRT/UMU(MXUMU),PHI(MAXPHI),NSTR,NAZ,N2GAUS,NUMU,         &
     &  MAPUMU(MLOS),NPHI,MAPPHI(MLOS),DIS,DISAZM,DISALB,LDISCL
      SAVE /DISRT/

!     /DISCAL/
!       N_SCAL   NUMBER OF ISAACS-TO-DISORT SCALING SPECTRAL POINTS.
!       V_SCAL   ISAACS-TO-DISORT SCALING SPECTRAL GRID [CM-1].
!       P_SCAL   ISAACS-TO-DISORT PATH RADIANCE SCALING FACTORS.
!       S_SCAL   ISAACS-TO-DISORT SURFACE RADIANCE SCALING FACTORS.
      INTEGER N_SCAL
      REAL V_SCAL,P_SCAL,S_SCAL
      COMMON/DISCAL/N_SCAL,V_SCAL(M_SCAL),                              &
     &  P_SCAL(M_SCAL,MLOS),S_SCAL(M_SCAL,MLOS)

!     /CJM5/
!       AMOD3D   FLAG INDICATING OUTPUT DATABASE FILE TYPE:
      CHARACTER AMOD3D*1
      COMMON/CJM5/AMOD3D

!     /AER/ THERE ARE "MAER=17" PARTICULATE COMPONENTS:
!           1       AEROSOL 1 (NOMINALLY, BOUNDARY LAYER AEROSOL).
!           2       AEROSOL 2 (NOMINALLY, TROPOSPHERIC AEROSOL).
!           3       AEROSOL 3 (NOMINALLY, STRATOSPHERIC AEROSOL).
!           4       AEROSOL 4 (NOMINALLY, VOLCANIC AEROSOL).
!           5       CIRRUS CLOUD.
!           6       CLOUD 1 (NOMINALLY, WATER CLOUD).
!           7       CLOUD 2 (NOMINALLY, ICE CLOUD).
!           8-17    NOVAM (NAVY OCEANIC VERTICAL AEROSOL MODEL) LAYERS.
!       NAER     NUMBER OF ACTIVE AEROSOLS.
!       EXTV     SPECTRAL EXTINCTION (NORMALIZED TO 1 AT 550 NM).
!       ABSV     SPECTRAL ABSORPTION (1-ABSV/EXTV=SCATTERING ALBEDO).
!       ASYV     SPECTRAL LEGENDRE MOMENT (DIVIDED BY 2N+1).
!       FRAC5    5 CM-1 GRID SPECTRAL INTERPOLATION FRACTION.
!       ASYVLO   ASYMMETRY FACTOR FROM PREVIOUS SPECTRAL FREQUENCY.
      INTEGER NAER
      REAL EXTV,ABSV,ASYV,FRAC5,ASYVLO
      COMMON/AER/NAER,EXTV(MAER),ABSV(MAER),ASYV(MXCMU,MAER),           &
     &  FRAC5,ASYVLO(MAER)

!     /ANGSRF/
!       CVWSRF  COSINE OF THE VIEW ZENITH ANGLE FROM THE SURFACE.
!       CSNSRF  COSINE OF THE SOLAR (LUNAR) ZENITH AT SURFACE.
!       AZMSRF  RELATIVE AZIMUTH ANGLE (SUN - SENSOR AT SURFACE) [RAD].
!       UMU1    COSINE OF THE PATH NADIR ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       UMU0    COSINE OF THE SOLAR ZENITH ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       PHI1    RELATIVE AZIMUTH ANGLE (SUN - LOS PATH AT SENSOR) [DEG].
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       CMU     COSINE OF THE NADIR ANGLES USED IN DISORT.
      REAL CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU
      COMMON/ANGSRF/CVWSRF(MLOS),CSNSRF(MLOS),AZMSRF(MLOS),UMU1(MLOS),  &
     &  UMU0,PHI1(MLOS),CMU(MI)

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     FUNCTIONS:
      REAL BBFN,SOURCE

!     LOCAL VARIABLES:
!       IPRINT   NUMBER OF SPECTRAL LINES BETWEEN PRINTING HEADER.
!       ILOS     LOOP INDEX FOR LINE-OF-SIGHT PATHS.
!       F_SCAL   SPECTRAL INTERPOLATION FRACTION FOR DISORT SCALING.
!       TRANSM   FLAG [TRUE FOR TRANSMITTANCE ONLY CALCULATIONS].
!       LSURF    SPECTRAL FLAG [TRUE IF REFLECTANCES ARE CHANGING].
!       SINIT    FLAG, TRUE FOR INITIAL CALL TO SOURCE FROM TRANS.
!       LVBND5   LOGICAL FLAG, TRUE WHEN 5 CM-1 DATA IS TO BE OBTAINED.
!       NO_WRT   OUTPUT FLAG FOR SPECTRAL DATA AT CURRENT FREQUENCY.
!       IBIN5    SPECTRAL BIN NUMBER FOR 5 CM-1 GRID.
!       VCEN     SPECTRAL BAND CENTRAL FREQUENCY [CM-1].
!       VCENX    CONVOLVED SPECTRAL BAND CENTRAL FREQUENCY [CM-1].
!       VBAND5   5 CM-1 RESOLUTION DATA SPECTRAL FREQUENCY [CM-1].
!       ALAM     SPECTRAL WAVELENGTH [MICRONS].
!       LN_TRN   LOGARITHM OF COMBINED SPECIES TRANSMITTANCE.
!       CONVRT   CONVERSION FROM (1 / CM-1) TO (1 / MICRON).
!       disalbsv saves DISORT logical disalb for possible repeat run.
!       disazmsv saves DISORT logical disazm for possible repeat run.
!       dissv    saves DISORT logical dis for possible repeat run.
!       n2gaussv saves DISORT variable n2gaus for possible repeat run.
!       nstrsv   saves DISORT variable nstr for possible repeat run.
!       nazsv    saves DISORT variable naz for possible repeat run.
!       NEXTXY   NUMBER OF ACTIVE SPECIES.
!       NREC     NUMBER OF RECORDS IN BINARY FILE.
!       IFLAG    BRANCHING FLAG FOR ROUTINE API.
!       S0       TOP-OF-ATMOSPHERE SOLAR IRRADIANCE [W CM-2 / CM-1].
!       S0X      CONVOLVED TOA SOLAR IRRADIANCE [W CM-2 / CM-1].
!       TS0      TRANSMITTED SOLAR IRRADIANCE [W CM-2 / CM-1].
!       UNIF     UNIFORMLY MIXED GASES SPECTRAL TRANSMITTANCE.
!       TRACE    TRACE GAS SPECTRAL TRANSMITTANCE.
!       SC       TEMPORARY STORAGE FOR ISAACS-TO-DISORT SCALING.
!       FACTOR   TRAPEZOID INTEGRATION FACTOR.
!       BTERM
      LOGICAL TRANSM,LSURF,SINIT,LVBND5,NO_WRT,DISALBSV,DISAZMSV,DISSV
      INTEGER IBIN5,ILOS,K,ICOUNT,NAZSV,NSTRSV,N2GAUSSV,NEXTXY,         &
     &  NREC,JLO,JLOP1,IFLAG,IPRINT
      REAL F_SCAL,VCEN,VCENX,VBAND5,CONVRT,ALAM,LN_TRN,                 &
     &  S0,S0X,TS0,UNIF,TRACE,SC,BTERM
      DOUBLE PRECISION FACTOR

!     LOCAL ARRAYS:
!       DEMIS    DIRECTIONAL EMISSIVITY CONVOLVED WITH SLIT FUNCTION.
!       THMCUM   PATH & SCATTERED THERMAL EMISSION [W SR-1 CM-2 / CM-1].
!       SPECMN   SPECTRAL TRANSMITTANCE, RADIANCE [W CM-2 SR-1 / CM-1],
!                OR ATTENUATED SOLAR IRRADIANCE [W CM-2 / CM-1] MINIMUM.
!       SPECMX   SPECTRAL TRANSMITTANCE, RADIANCE [W CM-2 SR-1 / CM-1],
!                OR ATTENUATED SOLAR IRRADIANCE [W CM-2 / CM-1] MAXIMUM.
!       BBG      TRANSMITTED GROUND EMISSION [W SR-1 CM-2 / CM-1].
!       SUMSSR   PATH SCATTERED SOLAR [W SR-1 CM-2 / CM-1].
!       SUMSSS   PATH SINGLE SCATTERED SOLAR [W SR-1 CM-2 / CM-1].
!       RFLSS    SUN-SURFACE-SENSOR DIRECT RADIANCE[W SR-1 CM-2 / CM-1].
!       RFSURF   TRANSMITTED SURFACE REFLECTANCE [W SR-1 CM-2 / CM-1].
!       TSNOBS   TRANSMITTED SOLAR IRRADIANCE AT SENSOR [W CM-2 / CM-1].
!       TSNREF   SENSOR-FINAL_ALTITUDE-SUN TRANSMITTANCE CONVOLVED WITH
!                THE TOP-OF-ATMOSPHERE SOLAR IRRADIANCE [W CM-2 / CM-1].
!       SUMTMS   ISAACS SCATTERED THERMAL EMISSION [W SR-1 CM-2 / CM-1].
!       PTHSCL   DISORT SCALING FACTOR FOR PATH SCATTERING RADIANCE.
!       SURSCL   DISORT SCALING FACTOR FOR SURFACE REFLECTED RADIANCE.
!       SUMMS    MULTIPLE SCATTER SOLAR RADIANCE [W SR-1 CM-2 / CM-1].
!       FDNTRT   GROUND REFLECTED DOWNWARD THERMAL
!                FLUX TRANSMITTED TO SENSOR [W CM-2 SR-1 / CM-1].
!       FDNRT    GROUND REFLECTED DOWNWARD THERMAL + DIFFUSE SOLAR
!                FLUX TRANSMITTED TO SENSOR [W CM-2 SR-1 / CM-1].
!       TRNLOS   LINE-OF-SIGHT COMBINED SPECIES TRANSMITTANCE [TX(9)].
!       SUMA     CUMULATIVE ABSORPTION SPECTRAL INTEGRAL.
!       RADSUM   SPECTRALLY INTEGRATED RADIANCE AT SENSOR [W SR-1 CM-2].
!       SSOL     INTEGRATED TOP-OF-ATMOSPHERE SOLAR IRRADIANCE [W CM-2].
!       VCENMN   SPECTRAL FREQUENCY AT MINIMUM SPECTRAL RADIANCE [CM-1].
!       VCENMX   SPECTRAL FREQUENCY AT MAXIMUM SPECTRAL RADIANCE [CM-1].
!       SUMT     TOTAL SPECTRAL RADIANCE AT SENSOR [W SR-1 CM-2 / CM-1].
!       YPLTMX   MAXIMUM ORDINATE IN <rootname>.plt FILE.
      REAL DEMIS(MLOS),THMCUM(MLOS),SPECMN(MLOS),SPECMX(MLOS),BBG(MLOS),&
     &  SUMSSS(MLOS),SUMSSR(MLOS),RFLSS(MLOS),RFSURF(MLOS),TSNOBS(MLOS),&
     &  TSNREF(MLOS),SUMTMS(MLOS),PTHSCL(MLOS),SURSCL(MLOS),SUMMS(MLOS),&
     &  FDNRT(MLOS),FDNTRT(MLOS),TRNLOS(MLOS),VCENMN(MLOS),VCENMX(MLOS),&
     &  SUMT(MLOS),YPLTMX(MLOS)
      DOUBLE PRECISION SUMA(MLOS),RADSUM(MLOS),SSOL(MLOS)

!---- add timing
      REAL time1,time2,time3

!--------------ADD mono grid file   -------- 05/30/2012
      logical ADINTP
      integer kch(mxK)
      INTEGER imono,ik, nchall
      INTEGER BNDTMP 
      real rMono(MxMono),rad(MxChnl),INTPVL
    
      call CPU_TIME(time1)


!     NUMBER OF ACTIVE SPECIES:
      NEXTXY=MEXTX+NMOLY

!     INITIALIZE NO_WRT:
      NO_WRT=.TRUE.

!     SCALING TO DISORT?
      IF(LDISCL)THEN
          DISAZMSV=DISAZM
          DISALBSV=DISALB
          NAZSV=NAZ
          N2GAUSSV=N2GAUS
          NSTRSV=NSTR
          DISSV=DIS
          FRAC5=0.
          CALL TNOWRT(NEXTXY,IPH,ISOURC,IDAY,ANGLEM,                    &
     &      KNTRVL,NLOS,SUNFUN,APPREF,DH2O,MLTRFL,GROUND)
      ENDIF

!     INITIALIZE ICOUNT, USED TO DETERMINE WHEN HEADER IS PRINTED:
      NSPCDT=0
      IPRINT=((49+NLOS)/NLOS)*NLOS
      IF(LJMASS)THEN

!         NEVER PRINT HEADER FOR JMASS:
          ICOUNT=IPRINT+1
      ELSE

!         PRINT HEADER AT FIRST FREQUENCY:
          ICOUNT=IPRINT
      ENDIF

!     CALL ROUTINE "BMDATA" TO INITIALIZE BAND MODEL PARAMETERS.
      IF(MODTRN .AND. IBINMN.LE.MBINBM)CALL BMDATA(NLOS,IBINMN)

!     SLIT AND INTEGRATION WEIGHTING FACTOR INITIALIZATIONS:
      IBIN5=IBINMN-IDBIN5
      IF(IBINRS.GT.1)THEN

!         TRIANGULAR SLIT:
          CALL INSLIT(NEXTXY,NLOS,IBINRS,BNDWID)
          FACTOR=.5D0
          IF(RESCHR.EQ.'p1')IBIN5=IBIN5+1
      ELSE

!         SQUARE SLIT:
          CALL SQSLIT
          IF(RESCHR.EQ.'p1')THEN
              FACTOR=1.D0
              IBIN5=IBIN5+1
          ELSE
              FACTOR=.5D0
          ENDIF
      ENDIF
      VBAND5=IBIN5*BNDWID
      IBINWR=IBINLO+IBINOS
      INTPVL=IDBIN5*BNDWID

!     OFFSET FREQUENCY VARIABLES SO THAT
!     THEY BEGIN IN SINC WHEN INCREMENTED.
      IBINPT=IBINMN-1
      VBAND=IBINPT*BNDWID
      VCEN=VBAND+OSHIFT
      imono=0
      KCH=0

!     INITIALIZE SINIT (= 0 FOR INITIAL CALL TO ROUTINE SOURCE)
      SINIT=.TRUE.

!     INITIALIZE TRANSMITTANCE AND SURFACE REFLECTANCE FLAGS:
      TRANSM=IEMSCT.EQ.0 .OR. IEMSCT.EQ.3
      IF(.NOT.TRANSM)LSURF=.TRUE.

!     WRITE OUT 550NM AEROSOL/RAYLEIGH INFORMATION:
!       1     AEROSOL 1 (NOMINALLY, BOUNDARY LAYER AEROSOL).
!       2     AEROSOL 2 (NOMINALLY, TROPOSPHERIC AEROSOL).
!       3     AEROSOL 3 (NOMINALLY, STRATOSPHERIC AEROSOL).
!       4     AEROSOL 4 (NOMINALLY, VOLCANIC AEROSOL).
      IF(.NOT.LJMASS)THEN
          CALL AEREXT(18181.82,1)
          WRITE(IPR,'(/(A))')'550 nm SINGLE SCATTERING ALBEDO and'      &
     &      //' ASYMMETRY FACTOR of the four aerosol models',           &
     &      '[NOMINALLY: (1) Boundary Layer, (2) Tropospheric,'         &
     &      //' (3) Stratospheric, and (4) Volcanic]'
          IF(EXTV(1).GT.0.)WRITE(IPR,'(A,2F14.6)')                      &
     &      '     AER 1:',1-ABSV(1)/EXTV(1),ASYV(1,1)
          IF(EXTV(2).GT.0.)WRITE(IPR,'(A,2F14.6)')                      &
     &      '     AER 2:',1-ABSV(2)/EXTV(2),ASYV(1,2)
          IF(EXTV(3).GT.0.)WRITE(IPR,'(A,2F14.6)')                      &
     &      '     AER 3:',1-ABSV(3)/EXTV(3),ASYV(1,3)
          IF(EXTV(4).GT.0.)WRITE(IPR,'(A,2F14.6)')                      &
     &      '     AER 4:',1-ABSV(4)/EXTV(4),ASYV(1,4)

!         PRINT SPECTRAL TABLE HEADERS IF NOT JMASS:
          CALL WTHEAD(IMULT,NLOS,DIS,DISAZM,TRANSM)
      ENDIF

!     INITIALIZE NUMBER OF RECORDS IN BINARY TAPE7 FILE:
      NREC=0

!     INITIALIZE THE SPECTRAL FLUX TABLE:
      IF(IMULT.NE.0 .AND. MODTRN)CALL FLXTBL

!     LOOP OVER VIEW ANGLES:
      UNIF=0.
      TRACE=0.
      S0=0.
      TS0=0.
      DEMIS(1)=0.
      DO ILOS=1,NLOS

!         INITIALIZE PLOT.DAT FILE MAXIMUM.
          YPLTMX(ILOS)=0.

!         INITIALIZE RADIANCE MINIMUM AND MAXIMUM PARAMETERS
          SPECMN(ILOS)=BIGNUM
          SPECMX(ILOS)=0.

!         INITIALIZE SPECTRALLY INTEGRATED SUMS:
          SUMA(ILOS)=0.D0
          RADSUM(ILOS)=0.D0
          SSOL(ILOS)=0.D0

!         INITIALIZE SPECTRAL BIN TRANSMITTANCES/RADIANCES/IRRADIANCES:
          BBG(ILOS)=0.
          THMCUM(ILOS)=0.
          SUMMS(ILOS)=0.
          SUMSSS(ILOS)=0.
          SUMSSR(ILOS)=0.
          RFLSS(ILOS)=0.
          RFSURF(ILOS)=0.
          TSNOBS(ILOS)=0.
          TSNREF(ILOS)=0.
          SUMTMS(ILOS)=0.

!         ISAACS TO DISORT SCALING PARAMETERS:
          PTHSCL(ILOS)=1.
          SURSCL(ILOS)=1.
      ENDDO

!     INITIALIZE LAYER LOOP VARIABLES:
      CALL LOOP0(KNTRVL,NLOS,VBAND5,VCEN,BNDWID)

!     BEGIN OF FREQUENCY LOOP.  "VCEN" IS THE CALCULATIONAL FREQUENCY.
!     DURING THE FIRST PASS, "VCEN" AND "VBAND5" MUST BE EQUAL.
   10 CONTINUE

! ----ADD PCRTM predictor selection
          imono=imono+1
          KCH=IKCheck(imono,:)
          IBINPT=ChanCheck(imono)
          IF(MODTRN .AND. IBINPT.LE.MBINBM)CALL BMDATA(NLOS,IBINPT)

          VBAND=IBINPT*BNDWID
          VCEN=VBAND+OSHIFT
          LVBND5=IBIN5.LE.IBINPT
          BNDTMP=0
          ADINTP=.false.

          IF(LVBND5)THEN
              BNDTMP=IBINPT-IBIN5
              ADINTP=BNDTMP .GE. IDBIN5
              BNDTMP=BNDTMP/IDBIN5
              BNDTMP=BNDTMP*IDBIN5
              IBIN5=IBIN5+IDBIN5+BNDTMP
              VBAND5=IBIN5*BNDWID
          ENDIF
          FRAC5=(VBAND5-VCEN)/ISTEP5

!         EXTRA-TERRESTRIAL SOLAR IRRADIANCE:
          IF(IEMSCT.GE.2)THEN
              IF(APPREF .AND. CSNSRF(1).GT.0.)THEN
                  S0=PI/CSNSRF(1)
              ELSE
                  S0=SOURCE(SINIT,VCEN,ISOURC,IDAY,NOPRNT,ANGLEM,SUNFUN)
              ENDIF
          ENDIF

!         PRINT HEADER EVERY 50 (IPRINT) LINES:
          IF(ICOUNT.EQ.IPRINT)THEN

!             REINITIALIZE COUNTER AND WRITE .TP6 SPECTRAL DATA HEADER:
              ICOUNT=0

!             PRINT THE HEADER ONLY ONCE FOR BIN OUTPUT
              IF(BINOUT)ICOUNT=IPRINT+1
              IF(NOPRNT.LE.1)CALL T6HEAD(IPR,IEMSCT,IMULT,NLOS,DIS)
          ENDIF

!         INITIALIZE TRANSMISSION ARRAYS:
          TX(1)=1.
          TX(2)=1.
          TX(3)=1.
          DO K=4,NEXTXY
              TX(K)=0.
          ENDDO
          NO_WRT=IBINPT.LT.IBINWR

!         TRANSMITTANCE OR RADIANCE?
          IF(TRANSM)THEN

!             CALL OPTICAL OR SOLAR PATH TRANSMITTANCE DRIVER:
              CALL T_LOOP(VBAND5,IBINPT,VCEN,LVBND5,UNIF,TRACE)

!             INCREMENT FILTER FUNCTION SUMS AND APPLY TRIANGULAR SLIT:
              IF(IEMSCT.EQ.3)THEN

!                 TRANSMITTED SOLAR IRRADIANCE:
                  TS0=TX(9)*S0
                  IF(LNFILT.GT.0)CALL FLTSMS(IBINPT,TS0,S0,TX(9))

!                 TRIANGULAR SLIT FOR SOLAR IRRADIANCE:
                  IF(IBINRS.GT.1)CALL S_SLIT(VCEN,TX(9),S0,TS0)
              ELSE

!                 PATH TRANSMITTANCE ONLY RUN:
                  IF(LNFILT.GT.0)CALL FLTSMT(IBINPT,NMOLY,UNIF,TRACE,TX)

!                 TRIANGULAR SLIT FOR TRANSMITTANCE ONLY:
                  IF(IBINRS.GT.1)CALL T_SLIT(NEXTXY,VCEN,UNIF,TRACE)
              ENDIF
              TRNLOS(1)=TX(9)
          ELSE

!             SURFACE SPECTRAL REFLECTANCE/EMISSION INTEGRALS:
              IF(VCEN.LE.0.)VCEN=HBNDWD
              IF(LSURF)CALL GTSURF(10000/VCEN,LSURF,DH2O,MLTRFL,NLOS)

!             SINGLE + MULTIPLE SOLAR SCATTERED RADIANCE
              IF(LDISCL)THEN

!                 SCALE ISAACS BY DISORT-ISAACS RATIO:
                  IF(V_SCAL(1).LE.VCEN .AND. VCEN.LE.V_SCAL(N_SCAL))THEN

!                     SET SPECTRAL INTERPOLATION:
                      CALL HUNT(V_SCAL,N_SCAL,VCEN,JLO,JLOP1)
                      F_SCAL=V_SCAL(JLO)
                      F_SCAL=(VCEN-F_SCAL)/(V_SCAL(JLOP1)-F_SCAL)

!                     LOOP OVER LINES-OF-SIGHT:
                      DO ILOS=1,NLOS
                          SC=P_SCAL(JLO,ILOS)
                          PTHSCL(ILOS)=SC+F_SCAL*(P_SCAL(JLOP1,ILOS)-SC)
                          SC=S_SCAL(JLO,ILOS)
                          SURSCL(ILOS)=SC+F_SCAL*(S_SCAL(JLOP1,ILOS)-SC)
                      ENDDO
                  ENDIF
              ENDIF

!             CALL RADIANCE LAYER LOOP ROUTINE:
              IF(IMULT.EQ.0)THEN

!                 NO MULTIPLE SCATTERING:
                  CALL LOOP(VBAND5,NO_WRT,IBINPT,VCEN,IPH,SUMSSS(1),    &
     &              LVBND5,UNIF,TRACE,THMCUM(1),S0,TSNOBS(1),TSNREF(1), &
     &              KNTRVL,GROUND(1))
                  TRNLOS(1)=TX(9)

              ELSEIF(DIS)THEN

!                 DISORT MULTIPLE SCATTERING AND FLUXES:
                  CALL D_LOOP(VBAND5,NO_WRT,IBINPT,VCEN,NLOS,SUMMS,     &
     &              IPH,SUMSSS,LVBND5,THMCUM,S0,TSNOBS,TSNREF,          &
     &              FDNTRT,FDNRT,KNTRVL,GROUND,TRNLOS,BTERM,ADINTP,     &
     &              INTPVL)
                  
              ELSE

!                 DISORT MULTIPLE SCATTERING AND FLUXES:
                  CALL I_LOOP(VBAND5,NO_WRT,IBINPT,VCEN,NLOS,SUMTMS,    &
     &              SUMMS,IPH,SUMSSS,LVBND5,THMCUM,S0,TSNOBS,TSNREF,    &
     &              FDNTRT,FDNRT,KNTRVL,PTHSCL,SURSCL,GROUND,TRNLOS)
                  
              ENDIF

!             LOOP OVER LINES-OF-SIGHT:
              DO ILOS=1,NLOS

!                 COPY CENTER SPECTRAL FREQUENCY:
                  VCENX=VCEN
                  S0X=S0

!                 THERMAL EMISSION:
                  DEMIS(ILOS)=1-TPHDIR(ILOS)
                  IF(TPTEMP(ILOS).GT.0.)BBG(ILOS)                       &
     &              =BBFN(TPTEMP(ILOS),VCEN)*TRNLOS(ILOS)*DEMIS(ILOS)

!                 COMPUTE SURFACE TERMS AND INCREMENT FILTER FNC SUMS:
                  IF(IEMSCT.EQ.1)THEN

!                     THERMAL EMISSION ONLY:
                      IF(IMULT.NE.0 .AND. GROUND(ILOS))THEN

!                         SURFACE REFLECTED THERMAL SCATTERED RADIANCE:
                          RFSURF(ILOS)=FDNTRT(ILOS)
                      ELSE
                          RFSURF(ILOS)=0.
                      ENDIF
                      IF(LNFILT.GT.0)CALL FLTSME(IBINPT,ILOS,DIS,       &
     &                  THMCUM(ILOS)+BBG(ILOS)+RFSURF(ILOS),            &
     &                  THMCUM(ILOS),SUMTMS(ILOS),BBG(ILOS),            &
     &                  RFSURF(ILOS),TRNLOS(ILOS),DEMIS(ILOS))

!                     TRIANGULAR SLIT FOR THERMAL EMITTED RADIANCE:
                      IF(IBINRS.GT.1)CALL E_SLIT(ILOS,VCENX,            &
     &                  TRNLOS(ILOS),DEMIS(ILOS),THMCUM(ILOS),          &
     &                  SUMTMS(ILOS),BBG(ILOS),RFSURF(ILOS))
                  ELSE

!                     SINGLE + MULTIPLE SOLAR SCATTERED RADIANCE:
                      SUMSSR(ILOS)=SUMSSS(ILOS)+SUMMS(ILOS)

!                     SURFACE REFLECTED SOLAR SCATTER RADIANCES:
                      RFLSS(ILOS)=0.
                      IF(GROUND(ILOS))THEN

!                         DIRECT TERM:
                          IF(TSNREF(ILOS).GT.0.)RFLSS(ILOS)=            &
     &                      TSNREF(ILOS)*TPBRDF(ILOS)*CSNSRF(ILOS)/PI

!                         SOLAR + THERMAL SURFACE REFLECTED RADIANCE:
                          IF(IMULT.NE.0)THEN
                              RFSURF(ILOS)=RFLSS(ILOS)+FDNRT(ILOS)
                          ELSE
                              RFSURF(ILOS)=RFLSS(ILOS)
                          ENDIF
                      ENDIF
                      IF(LNFILT.GT.0)CALL FLTSMR(IBINPT,ILOS,DIS,       &
     &                  THMCUM(ILOS)+BBG(ILOS)+RFSURF(ILOS)             &
     &                  +SUMSSR(ILOS),THMCUM(ILOS),SUMTMS(ILOS),        &
     &                  BBG(ILOS),SUMSSR(ILOS),SUMSSS(ILOS),            &
     &                  RFSURF(ILOS),RFLSS(ILOS),TSNREF(ILOS),          &
     &                  TSNOBS(ILOS),TRNLOS(ILOS),DEMIS(ILOS))
!bug &                  BTERM,SUMSSR(ILOS),SUMSSS(ILOS),                &
!bug &                  RFSURF(ILOS),RFLSS(ILOS),TSNREF(ILOS),          &
!bug &                  TSNOBS(ILOS),TRNLOS(ILOS),DEMIS(ILOS))

!                     TRIANGULAR SLIT FOR THERMAL + SOLAR RADIANCES:
                      IF(IBINRS.GT.1)CALL R_SLIT(ILOS,VCENX,            &
     &                  TRNLOS(ILOS),DEMIS(ILOS),THMCUM(ILOS),          &
     &                  SUMTMS(ILOS),BBG(ILOS),SUMSSR(ILOS),            &
     &                  SUMSSS(ILOS),RFSURF(ILOS),RFLSS(ILOS),          &
     &                  TSNREF(ILOS),TSNOBS(ILOS),S0X)
                  ENDIF

!             END LOOP OVER LINES-OF-SIGHT:
              ENDDO

!             SET LINE-OF-SIGHT INDEPENDENT DATA TO CONVOLVED VALUE:
              VCEN=VCENX
              S0=S0X
          ENDIF

!         CHECK IF VALUES ARE TO BE PRINTED:
          IF(NO_WRT)GOTO 10
          IBINWR=IBINWR+IBINDL
          IF(IBINWR.GT.IBINMX .AND.                                     &
     &      (IBINRS.GT.1 .OR. OSHIFT.EQ.0.))FACTOR=.5D0
          ICOUNT=ICOUNT+NLOS
          NSPCDT=NSPCDT+1

!         SPECTRAL FREQUENCY OUTPUTS:
          ALAM=10000/(VCEN+.000001)

!         CONVRT IS THE CONVERSION FROM (1 / CM-1) TO (1 / MICRON):
          IF(VCEN.LE.0.)THEN
              CONVRT=.0001*HBNDWD**2
          ELSE
              CONVRT=.0001*VCEN**2
          ENDIF

!         RADIATIVE TRANSFER MODE BRANCHING:
          IF(IEMSCT.EQ.0)THEN

!             SPECTRAL TRANSMITTANCE RUN:  IN-BAND ABSORPTION.
              SUMA(1)=SUMA(1)+FACTOR*IDV*(1-DBLE(TRNLOS(1)))

!             LN_TRN IS OUTPUT USING AN F FORMAT WHEN IEMSCT = 1 OR 2,
!             SO THE MAXIMUM IS SET TO 99.99 (STILL ABSURDLY LARGE)
              IF(TRNLOS(1).GT.0.)THEN
                  LN_TRN=-SNGL(LOG(DBLE(TRNLOS(1))))
                  IF(LN_TRN.GT.99.99)LN_TRN=99.99
              ELSE
                  LN_TRN=99.99
              ENDIF

!             DETERMINE EXTREME VALUES:
              IF(TRNLOS(1).GE.SPECMX(1))THEN
                  VCENMX(1)=VCEN
                  SPECMX(1)=TRNLOS(1)
              ENDIF
              IF(TRNLOS(1).LE.SPECMN(1))THEN
                  VCENMN(1)=VCEN
                  SPECMN(1)=TRNLOS(1)
              ENDIF

!             GENERATE OUTPUT:
              IF(.NOT.LJMASS)THEN

!                 WRITE SPECTRAL TRANSMITTANCE DATA:
                  CALL TWRITE(NEXTXY,NOPRNT,NREC,VCEN,ALAM,             &
     &              UNIF,TRACE,REAL(SUMA(1)),LN_TRN,TX(1))
              ELSEIF(AMOD3D.NE.'T')THEN

!                 FILL JMASS COMMON BLOCKS:
                  CALL API(0,VCEN,ALAM,TRNLOS(1),UNIF,TRACE,            &
     &              LN_TRN,REAL(SUMA(1)),CONVRT,THMCUM(1),              &
     &              RFSURF(1),0.,REAL(RADSUM(1)),SUMSSR(1),             &
     &              SUMSSS(1),RFLSS(1),S0,TS0,REAL(SSOL(1)),            &
     &              SPECMN(1),SPECMX(1),VCENMN(1),VCENMX(1),AASALB)
              ENDIF
          ELSEIF(IEMSCT.EQ.3)THEN

!             DIRECTLY TRANSMITTED SOLAR IRRADIANCE [W CM-2 / CM-1]:
!             RADSUM IS THE INTEGRATED TRANSMITTED SOLAR
!             IRRADIANCE AND SSOL IS THE INTEGRATED
!             TOP-OF-ATMOSPHERE SOLAR IRRADIANCE (W/CM2).
              RADSUM(1)=RADSUM(1)+FACTOR*IDV*DBLE(TS0)
              SSOL(1)=SSOL(1)+FACTOR*IDV*DBLE(S0)
              SUMT(1)=TS0

!             IN-BAND ABSORPTION:
              SUMA(1)=SUMA(1)+FACTOR*IDV*(1-DBLE(TRNLOS(1)))

!             LN_TRN IS OUTPUT USING AN F FORMAT WHEN IEMSCT = 1 OR 2,
!             SO THE MAXIMUM IS SET TO 99.99 (STILL ABSURDLY LARGE)
              IF(TRNLOS(1).GT.0.)THEN
                  LN_TRN=-SNGL(LOG(DBLE(TRNLOS(1))))
                  IF(LN_TRN.GT.99.99)LN_TRN=99.99
              ELSE
                  LN_TRN=99.99
              ENDIF

!             DETERMINE EXTREME VALUES:
              IF(SUMT(1).GE.SPECMX(1))THEN
                  VCENMX(1)=VCEN
                  SPECMX(1)=SUMT(1)
              ENDIF
              IF(SUMT(1).LE.SPECMN(1))THEN
                  VCENMN(1)=VCEN
                  SPECMN(1)=SUMT(1)
              ENDIF

!             SOLAR IRRADIANCE DATA:
              IF(.NOT.LJMASS)THEN

!                 WRITE SPECTRAL DATA:
                  CALL SWRITE(NOPRNT,NREC,VCEN,ALAM,CONVRT,TS0,S0,      &
     &              REAL(RADSUM(1)),REAL(SSOL(1)),TRNLOS(1),LN_TRN)
              ELSEIF(AMOD3D.NE.'T')THEN

!                 FILL JMASS COMMON BLOCKS:
                  CALL API(3,VCEN,ALAM,TRNLOS(1),UNIF,TRACE,            &
     &              LN_TRN,REAL(SUMA(1)),CONVRT,THMCUM(1),              &
     &              RFSURF(1),SUMT(1),REAL(RADSUM(1)),SUMSSR(1),        &
     &              SUMSSS(1),RFLSS(1),S0,TS0,REAL(SSOL(1)),            &
     &              SPECMN(1),SPECMX(1),VCENMN(1),VCENMX(1),AASALB)
              ENDIF
          ELSEIF(IEMSCT.EQ.1)THEN

!             THERMAL RADIANCE ONLY:  LOOP OVER LINES-OF-SIGHT.
              DO ILOS=1,NLOS

!                 PATH, SURFACE AND SCATTERED EMISSION DATA:
!                 SUMT IS THE TOTAL SPECTRAL RADIANCE, I.E. SUMT EQUALS
!                 THE SUM OF DIRECT + MULTIPLY SCATTERED THERMAL PATH
!                 RADIANCE (THMCUM), SURFACE EMISSION (BBG), AND
!                 THE REFLECTED SURFACE TERM (RFSURF).  EACH OF THESE
!                 TERMS HAS UNITS (W SR-1 CM-2 / CM-1).  RADSUM IS THE
!                 SPECTRALLY INTEGRATED TOTAL RADIANCE (W SR-1 CM-2).
                  SUMT(ILOS)=THMCUM(ILOS)+BBG(ILOS)+RFSURF(ILOS)
                  RADSUM(ILOS)=RADSUM(ILOS)+FACTOR*IDV*DBLE(SUMT(ILOS))

!                 IN-BAND ABSORPTION:
                  SUMA(ILOS)                                            &
     &              =SUMA(ILOS)+FACTOR*IDV*(1-DBLE(TRNLOS(ILOS)))

!                 LN_TRN IS OUTPUT USING AN F FORMAT WITH THE
!                 MAXIMUM SET TO 99.99 (STILL ABSURDLY LARGE):
                  IF(TRNLOS(ILOS).GT.0.)THEN
                      LN_TRN=-SNGL(LOG(DBLE(TRNLOS(ILOS))))
                      IF(LN_TRN.GT.99.99)LN_TRN=99.99
                  ELSE
                      LN_TRN=99.99
                  ENDIF

!                 DETERMINE EXTREME VALUES:
                  IF(SUMT(ILOS).GE.SPECMX(ILOS))THEN
                      VCENMX(ILOS)=VCEN
                      SPECMX(ILOS)=SUMT(ILOS)
                  ENDIF
                  IF(SUMT(ILOS).LE.SPECMN(ILOS))THEN
                      VCENMN(ILOS)=VCEN
                      SPECMN(ILOS)=SUMT(ILOS)
                  ENDIF

!                 GENERATE OUTPUT:
                  IF(.NOT.LJMASS)THEN

!                     WRITE SPECTRAL DATA:
                      CALL EWRITE(DIS,IMULT,NOPRNT,NREC,VCEN,ALAM,      &
     &                  NLOS,ILOS,DEMIS(ILOS),CONVRT,THMCUM(ILOS),      &
     &                  SUMTMS(ILOS),BBG(ILOS),RFSURF(ILOS),SUMT(ILOS), &
     &                  REAL(RADSUM(ILOS)),TRNLOS(ILOS),LN_TRN,IFWHM)
                  ELSEIF(AMOD3D.NE.'T')THEN

!                     FILL JMASS COMMON BLOCKS:
                      CALL API(1,VCEN,ALAM,TRNLOS(ILOS),UNIF,TRACE,     &
     &                  LN_TRN,REAL(SUMA(ILOS)),CONVRT,THMCUM(ILOS),    &
     &                  RFSURF(ILOS),SUMT(ILOS),REAL(RADSUM(ILOS)),     &
     &                  SUMSSR(ILOS),SUMSSS(ILOS),RFLSS(ILOS),S0,TS0,   &
     &                  REAL(SSOL(ILOS)),SPECMN(ILOS),SPECMX(ILOS),     &
     &                  VCENMN(ILOS),VCENMX(ILOS),AASALB)
                  ENDIF

!             END OF LINE-OF-SIGHT LOOP:
              ENDDO
          ELSE

!             THERMAL AND SOLAR RADIANCE:  LOOP OVER LINES-OF-SIGHT.
              DO ILOS=1,NLOS

!                 PATH, SURFACE AND SCATTERED EMISSION AND SOLAR DATA:
!                 SUMT IS THE TOTAL SPECTRAL RADIANCE, I.E. SUMT
!                 EQUALS THE SUM OF THE DIRECT + MULTIPLY SCATTERED
!                 THERMAL PATH RADIANCE (THMCUM), THE SURFACE EMISSION
!                 (BBG), THE SINGLE + MULTIPLE SOLAR SCATTERED RADIANCE
!                 (SUMSSR) AND THE REFLECTED SURFACE TERM (RFSURF).
!                 EACH OF THESE TERMS HAS UNITS (W SR-1 CM-2 / CM-1).
!                 RADSUM EQUALS THE SPECTRALLY INTEGRATED TOTAL
!                 RADIANCE (W SR-1 CM-2).
                  SUMT(ILOS)                                            &
     &              =THMCUM(ILOS)+BBG(ILOS)+SUMSSR(ILOS)+RFSURF(ILOS)
                  RADSUM(ILOS)=RADSUM(ILOS)+FACTOR*IDV*DBLE(SUMT(ILOS))

!                 IN-BAND ABSORPTION:
                  SUMA(ILOS)                                            &
     &              =SUMA(ILOS)+FACTOR*IDV*(1-DBLE(TRNLOS(ILOS)))

!                 LN_TRN IS OUTPUT USING AN F FORMAT WITH THE
!                 MAXIMUM SET TO 99.99 (STILL ABSURDLY LARGE):
                  IF(TRNLOS(ILOS).GT.0.)THEN
                      LN_TRN=-SNGL(LOG(DBLE(TRNLOS(ILOS))))
                      IF(LN_TRN.GT.99.99)LN_TRN=99.99
                  ELSE
                      LN_TRN=99.99
                  ENDIF

!                 DETERMINE EXTREME VALUES:
                  IF(SUMT(ILOS).GE.SPECMX(ILOS))THEN
                      VCENMX(ILOS)=VCEN
                      SPECMX(ILOS)=SUMT(ILOS)
                  ENDIF
                  IF(SUMT(ILOS).LE.SPECMN(ILOS))THEN
                      VCENMN(ILOS)=VCEN
                      SPECMN(ILOS)=SUMT(ILOS)
                  ENDIF

!                 GENERATE OUTPUT:
                  IF(.NOT.LJMASS)THEN

!                     WRITE SPECTRAL DATA:
                      CALL RWRITE(DIS,IMULT,NOPRNT,NREC,VCEN,ALAM,      &
     &                  NLOS,ILOS,DEMIS(ILOS),CONVRT,THMCUM(ILOS),      &
     &                  SUMTMS(ILOS),BBG(ILOS),S0,SUMSSR(ILOS),         &
     &                  SUMSSS(ILOS),RFSURF(ILOS),RFLSS(ILOS),          &
     &                  SUMT(ILOS),TSNREF(ILOS),TSNOBS(ILOS),           &
     &                  REAL(RADSUM(ILOS)),TRNLOS(ILOS),LN_TRN,IFWHM)
                  ELSEIF(AMOD3D.NE.'T')THEN

!                     FILL JMASS COMMON BLOCKS:
                      CALL API(2,VCEN,ALAM,TRNLOS(ILOS),UNIF,TRACE,     &
     &                  LN_TRN,REAL(SUMA(ILOS)),CONVRT,THMCUM(ILOS),    &
     &                  RFSURF(ILOS),SUMT(ILOS),REAL(RADSUM(ILOS)),     &
     &                  SUMSSR(ILOS),SUMSSS(ILOS),RFLSS(ILOS),S0,TS0,   &
     &                  REAL(SSOL(ILOS)),SPECMN(ILOS),SPECMX(ILOS),     &
     &                  VCENMN(ILOS),VCENMX(ILOS),AASALB)
                  ENDIF

!             END OF LINE-OF-SIGHT LOOP:
              ENDDO
          ENDIF

!         WRITE <rootname>.plt SPECTRAL DATA:
          IF(BINOUT)THEN
              CALL WPLTBN(JPLOT,VCEN,ALAM,NLOS,YPLTMX,                  &
     &          TRNLOS,CONVRT,SUMT)
          ELSE
              CALL WRTPLT(IPLOT,VCEN,ALAM,NLOS,YPLTMX,                  &
     &          TRNLOS,CONVRT,SUMT)
          ENDIF
          FACTOR=1.D0
          rMono(imono)=0.1*SUMT(NLOS)*VCEN**2
!     CHECK FOR END OF SPECTRAL FREQUENCY LOOP:
!      IF(IBINWR.LE.IBINMX)GOTO 10

!----- modify ENDing check ------------05/31/2012
      if (imono .lt. nmono) goto 10
!      print *, 'END of imono loop'

! ----end of mono radiance calculation
!------- convert mono radiance to Channel radiance
      call CPU_time(time2)
      print *, 'CPU TIME =', time2-time1
      call PCRTM (rMono,nchall,rad)

      call CPU_time(time3)
      print *, 'PCRTM TIME =', time3-time2
!----END of PCRTM MODIFICATION ------------------

!     PRINT PLOT.DAT FILE DELIMITER.
      IF(BINOUT)THEN
          CALL ENDPTB(JPLOT,IEMSCT,NLOS,YPLTMX)
      ELSE
          CALL ENDPLT(IPLOT,IEMSCT,NLOS,YPLTMX)
      ENDIF

!     BAND PASS DATA:
      IF(LJMASS)THEN

!         FILL JMASS COMMON BLOCKS:
          IFLAG=4

!         LOOP OVER LINE-OF-SIGHT PATHS:
          DO ILOS=1,NLOS
              CALL API(IFLAG,VCEN,ALAM,TRNLOS(ILOS),UNIF,TRACE,LN_TRN,  &
     &          REAL(SUMA(ILOS)),CONVRT,THMCUM(ILOS),RFSURF(ILOS),      &
     &          SUMT(ILOS),REAL(RADSUM(ILOS)),SUMSSR(ILOS),SUMSSS(ILOS),&
     &          RFLSS(ILOS),S0,TS0,REAL(SSOL(ILOS)),SPECMN(ILOS),       &
     &          SPECMX(ILOS),VCENMN(ILOS),VCENMX(ILOS),AASALB)
          ENDDO
      ELSE

!         COOLING RATE AND FLUX DATA:
          IF(IMULT.NE.0)THEN

!             INTEGRATED COOLING RATES.
              IF(NOPRNT.LE.1)THEN
                  WRITE(IPR,'(/A)')                                     &
     &              ' MULTIPLE SCATTERING CALCULATION RESULTS:'
                  IF(ML.GE.4)CALL WTCOOL(BNDWID,IEMSCT)
              ENDIF

!             WRITE OUT IN-BAND LAYER BOUNDARY FLUX VALUES:
              IF(MODTRN)CALL FLXSUM
          ENDIF

!         WRITE OUTPUT FILES (SET VCEN TO END OF SPECTRAL INTEGRATION):
          IF(IBINRS.EQ.1)VCEN=VCEN+OSHIFT
          WRITE(IPR,'(/(A,I4,A,2(F9.2,A),F12.4,A))')                    &
     &      ('INTEGRATED ABSORPTION FOR SLANT PATH NO.',ILOS,' FROM',   &
     &      IV1,' TO',VCEN,' CM-1 =',SUMA(ILOS),' CM-1',ILOS=1,NLOS)
          WRITE(IPR,'(/(A,I4,A,F7.4))')                                 &
     &      ('SLANT PATH NO.',ILOS,' AVERAGE TRANSMITTANCE =',          &
     &      1-SUMA(ILOS)/DBLE(VCEN-IV1),ILOS=1,NLOS)
          IF(IEMSCT.EQ.3)THEN
              WRITE(IPR,'(/A,1P,E12.4,0P,2(A,F8.2),A,                   &
     &          /(A,1P,E12.4,0P,A,F8.2,A))')                            &
     &          ' INTEGRATED IRRADIANCE =',RADSUM(1),                   &
     &          ' WATTS CM-2 (FROM ',IV1,' TO ',VCEN,' CM-1)',          &
     &          ' MINIMUM IRRADIANCE    =',SPECMN(1),                   &
     &          ' WATTS CM-2 AT',VCENMN(1),' CM-1',                     &
     &          ' MAXIMUM IRRADIANCE    =',SPECMX(1),                   &
     &          ' WATTS CM-2 AT',VCENMX(1),' CM-1'
          ELSEIF(IEMSCT.NE.0)THEN
              WRITE(IPR,'(/(A,I4,A,1P,E12.4,0P,A,2(A,F8.2),A))')        &
     &          ('SLANT PATH NO.',ILOS,' INTEGRATED TOTAL RADIANCE =',  &
     &          RADSUM(ILOS),' WATTS CM-2 STER-1',' (FROM ',IV1,        &
     &          ' TO ',VCEN,' CM-1 )',ILOS=1,NLOS)
              WRITE(IPR,'(/(A,I4,A,1P,E12.4,0P,A,F8.2,A))')             &
     &          ('SLANT PATH NO.',ILOS,' MINIMUM SPECTRAL RADIANCE =',  &
     &          SPECMN(ILOS),' WATTS CM-2 STER-1 / CM-1  AT ',          &
     &          VCENMN(ILOS),' CM-1',ILOS=1,NLOS)
              WRITE(IPR,'(/(A,I4,A,1P,E12.4,0P,A,F8.2,A))')             &
     &          ('SLANT PATH NO.',ILOS,' MAXIMUM SPECTRAL RADIANCE =',  &
     &          SPECMX(ILOS),' WATTS CM-2 STER-1 / CM-1  AT ',          &
     &          VCENMX(ILOS),' CM-1',ILOS=1,NLOS)
              WRITE(IPR,'(/A,F11.3,2(/A),/(12F11.3))')                  &
     &          ' AREA-AVERAGED GROUND TEMPERATURE [K] =',AATEMP,       &
     &          ' IMAGED-PIXEL (H2ALT) SURFACE TEMPERATURES [K]',       &
     &          ' ---------------------------------------------',       &
     &          (TPTEMP(ILOS),ILOS=1,NLOS)
              IF(NWVSRF(MLOSP1).EQ.1)WRITE(IPR,'(/A,F11.3)')            &
     &          ' AREA-AVERAGED GROUND EMISSIVITY =',1-AASALB
              DO ILOS=1,NLOS
                  IF(NWVSRF(ILOS).EQ.1)WRITE(IPR,'(A,I3,A,12F11.3)')    &
     &              ' IMAGED-PIXEL No.',ILOS,                           &
     &              ' DIRECTIONAL EMISSIVITY =',1-TPHDIR(ILOS)
              ENDDO
          ENDIF
          IF(LNFILT.GT.0)CALL WRTFLT(IEMSCT,NMOLY,NLOS,DIS)
          IF(BINOUT)CALL ENDWRT(NREC)
      ENDIF

!     RECLAIM SAVED DISORT VALUES IN CASE THERE IS A REPEAT RUN.
      IF(LDISCL)THEN
          DISAZM=DISAZMSV
          DISALB=DISALBSV
          NAZ=NAZSV
          N2GAUS=N2GAUSSV
          NSTR=NSTRSV
          DIS=DISSV
      ENDIF

!     RETURN TO DRIVER:
      RETURN
      END

      SUBROUTINE TNOWRT(NEXTXY,IPH,ISOURC,IDAY,ANGLEM,                  &
     &  KNTRVL,NLOS,SUNFUN,APPREF,DH2O,MLTRFL,GROUND)

!     ROUTINE TRANS CALCULATES TRANSMITTANCE AND RADIANCE VALUES
!     BETWEEN IV1 AND IV2 FOR A GIVEN ATMOSPHERIC SLANT PATH.
      IMPLICIT NONE

!     ARGUMENTS:
!       NEXTXY   NUMBER OF ACTIVE SPECIES.
!       ANGLEM   LUNAR PHASE ANGLE [0 TO 180 DEG].
!       SUNFUN   TOP-OF-ATMOSPHERE SOLAR IRRADIANCE
!                FUNCTION [W CM-2 / CM-1].
!       NLOS     NUMBER OF LINE-OF-SIGHT PATHS.
!       DH2O     WATER LAYER THICKNESS (mm), INPUT FROM CARD 4A!
!       MLTRFL  'T' MULTIPLE REFLECTION; 'F' SINGLE PASS EXTINCTION.
!       GROUND   LOGICAL FLAG, TRUE IF LINE OF SIGHT INTERSECTS GROUND.
      INTEGER NEXTXY,IPH,ISOURC,IDAY,KNTRVL,NLOS
      LOGICAL APPREF,MLTRFL,GROUND(NLOS)
      REAL SUNFUN,DH2O
      DOUBLE PRECISION ANGLEM
      EXTERNAL SUNFUN

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     COMMONS:
      INCLUDE 'BMHEAD.h'
      INCLUDE 'BASE.h'

!     /CARD1/
!       MODEL    MODEL ATMOSPHERE INDEX.
!       ITYPE    SLANT PATH TYPE.
!       IEMSCT   RADIATIVE TRANSFER MODE.
!                  0 FOR TRANSMITTANCE
!                  1 FOR THERMAL EMISSION ONLY
!                  2 FOR THERMAL EMISSION PLUS SOLAR SCATTER
!                  3 FOR TRANSMITTED SOLAR IRRADIANCE
!                  4 FOR SOLAR SCATTER ONLY
!       M1       MODEL ATMOSPHERE FOR PRESSURE & TEMPERATURE PROFILES.
!       M2       MODEL ATMOSPHERE FOR H2O PROFILE.
!       M3       MODEL ATMOSPHERE FOR O3 PROFILE.
!       I_RD2C   READ CARD 2C, 2C1, ... IF EQUAL 1; SKIP IF EQUAL TO 0.
!       NOPRNT   PRINT FLAG.
!       MODTRN   MODTRAN BAND MODEL FLAG.
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,I_RD2C,NOPRNT
      LOGICAL MODTRN
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,I_RD2C,NOPRNT,MODTRN

!     /CARD4/
!       IV1      LOWEST SPECTRAL FREQUENCY OUTPUT [CM-1].
!       IV2      HIGHEST SPECTRAL FREQUENCY OUTPUT [CM-1].
!       IDV      PRINTOUT SPECTRAL FREQUENCY STEP SIZE [CM-1].
!       IFWHM    TRIANGULAR SLIT FULL-WIDTH-HALF-MAXIMUM [CM-1].
!       VBAND    CURRENT COMPUTATION BAND FREQUENCY [CM-1].
!                (EQUALS BAND CENTER FOR 1, 5 & 15 CM-1 BAND MODELS;
!                EQUALS THE MINIMUM BAND VALUE FOR 0.1 CM-1 BAND MODEL)
!       IBINPT   BIN NUMBER OF CURRENT SPECTRAL POINT.
!                (CENTER FREQUENCY = IBINPT * BNDWID + OSHIFT).
!       IBINLO   BIN NUMBER OF (PADDED) SPECTRAL RANGE LOWER BOUND.
!       IBINHI   BIN NUMBER OF (PADDED) SPECTRAL RANGE UPPER BOUND.
!       IBINMN   BIN NUMBER OF MINIMUM COMPUTATION SPECTRAL POINT.
!       IBINMX   BIN NUMBER OF MAXIMUM COMPUTATION SPECTRAL POINT.
!       IBINDL   BIN NUMBER INCREMENT FOR SPECTRAL PRINTOUT.
!       IBINRS   BIN NUMBER INCREMENT EQUAL TO SPECTRAL RESOLUTION.
!       IBINOS   BIN NUMBER OFFSET BETWEEN CURRENT & OUTPUT SPC POINTS.
!       IBINWR   BIN NUMBER OF NEXT SPECTRAL DATA WRITE.
!       MBINPT   BIN NUMBER MAXIMUM FOR CURRENT BAND MODEL RESOLUTION.
!       IDBIN5   SPECTRAL BIN NUMBER STEP SIZE FOR 5 CM-1 GRID.
!       ISTEP5   INCREMENT FOR RETRIEVING 5 CM-1 RESOLUTION DATA [CM-1].
!       NSPCDT   NUMBER OF OUTPUT SPECTRAL DATA POINTS.
      DOUBLE PRECISION IDV
      REAL IV1,IV2,IFWHM,VBAND
      INTEGER IBINPT,IBINLO,IBINHI,IBINMN,IBINMX,IBINDL,                &
     &  IBINRS,IBINOS,IBINWR,MBINPT,IDBIN5,ISTEP5,NSPCDT
      COMMON/CARD4/IDV,IV1,IV2,IFWHM,VBAND,IBINPT,IBINLO,IBINHI,IBINMN, &
     &  IBINMX,IBINDL,IBINRS,IBINOS,IBINWR,MBINPT,IDBIN5,ISTEP5,NSPCDT

!     /RCNSTN/
!       PI       THE CONSTANT PI
!       DEG      NUMBER OF DEGREES IN ONE RADIAN.
!       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.
!       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.
!       RRIGHT   SMALLEST SINGLE PRECISION REAL ADDED TO 1 EXCEEDS 1.
      REAL PI,DEG,BIGNUM,BIGEXP,RRIGHT
      COMMON/RCNSTN/PI,DEG,BIGNUM,BIGEXP,RRIGHT

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
      REAL UMU,PHI
      INTEGER NSTR,NAZ,N2GAUS,NUMU,MAPUMU,NPHI,MAPPHI
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      COMMON/DISRT/UMU(MXUMU),PHI(MAXPHI),NSTR,NAZ,N2GAUS,NUMU,         &
     &  MAPUMU(MLOS),NPHI,MAPPHI(MLOS),DIS,DISAZM,DISALB,LDISCL
      SAVE /DISRT/

!     /DISCAL/
!       N_SCAL   NUMBER OF ISAACS-TO-DISORT SCALING SPECTRAL POINTS.
!       V_SCAL   ISAACS-TO-DISORT SCALING SPECTRAL GRID [CM-1].
!       P_SCAL   ISAACS-TO-DISORT PATH RADIANCE SCALING FACTORS.
!       S_SCAL   ISAACS-TO-DISORT SURFACE RADIANCE SCALING FACTORS.
      INTEGER N_SCAL
      REAL V_SCAL,P_SCAL,S_SCAL
      COMMON/DISCAL/N_SCAL,V_SCAL(M_SCAL),                              &
     &  P_SCAL(M_SCAL,MLOS),S_SCAL(M_SCAL,MLOS)

!     /ANGSRF/
!       CVWSRF  COSINE OF THE VIEW ZENITH ANGLE FROM THE SURFACE.
!       CSNSRF  COSINE OF THE SOLAR (LUNAR) ZENITH AT SURFACE.
!       AZMSRF  RELATIVE AZIMUTH ANGLE (SUN - SENSOR AT SURFACE) [RAD].
!       UMU1    COSINE OF THE PATH NADIR ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       UMU0    COSINE OF THE SOLAR ZENITH ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       PHI1    RELATIVE AZIMUTH ANGLE (SUN - LOS PATH AT SENSOR) [DEG].
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       CMU     COSINE OF THE NADIR ANGLES USED IN DISORT.
      REAL CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU
      COMMON/ANGSRF/CVWSRF(MLOS),CSNSRF(MLOS),AZMSRF(MLOS),UMU1(MLOS),  &
     &  UMU0,PHI1(MLOS),CMU(MI)

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     FUNCTIONS:
!       SOURCE   SOLAR/LUNAR EXTRA-TERRESTRIAL SOURCE [W CM-2/CM-1].
      REAL SOURCE

!     LOCAL VARIABLES:
!       TRANSM   FLAG [TRUE FOR TRANSMITTANCE ONLY CALCULATIONS].
!       LSURF    SPECTRAL FLAG [TRUE IF REFLECTANCES ARE CHANGING].
!       SINIT    FLAG, TRUE FOR INITIAL CALL TO SOURCE FROM TRANS.
!       NPRTSV   SAVED VALUE OF PRINT FLAG SWITCH "NOPRNT".
!       VBAND5   5 CM-1 RESOLUTION DATA SPECTRAL FREQUENCY [CM-1].
!       VCEN     SPECTRAL BAND CENTRAL FREQUENCY [CM-1].
!       I_SCAL   LOOP INDEX FOR ISAACS-TO-DISORT SCALING SPECTRAL GRID.
!       BTERM
      LOGICAL LSURF,SINIT,DAZMSV
      INTEGER I,K,NSTRSV,NPRTSV,JLO,JLOP1,JHI,JHIP1,ISWITCH,I_SCAL,ILOS
      REAL V,VBAND5,VCEN,SUMSSS(MLOS),S0,BTERM

!     LOCAL ARRAYS:
!       THMCUM   PATH & SCATTERED THERMAL EMISSION [W SR-1 CM-2 / CM-1].
!       SUMMSD   DISORT MULTIPLE SCATTERED SOLAR [W SR-1 CM-2 / CM-1].
!       SUMMS    ISAACS MULTIPLE SCATTERED SOLAR [W SR-1 CM-2 / CM-1].
!       SUMTMS   SCATTERED THERMAL EMISSION [W SR-1 CM-2 / CM-1].
!       TSNREF   SENSOR-FINAL_ALTITUDE-SUN TRANSMITTANCE CONVOLVED WITH
!                THE TOP-OF-ATMOSPHERE SOLAR IRRADIANCE [W CM-2 / CM-1].
!       TSNOBS   TRANSMITTED SOLAR IRRADIANCE AT SENSOR [W CM-2 / CM-1].
!       FDNRTD   DISORT GROUND REFLECTED DOWNWARD THERMAL + DIFFUSE
!                SOLAR FLUX TRANSMITTED TO SENSOR [W CM-2 SR-1 / CM-1].
!       FDNTRT   GROUND REFLECTED DOWNWARD THERMAL
!                FLUX TRANSMITTED TO SENSOR [W CM-2 SR-1 / CM-1].
!       FDNRT    ISAACS GROUND REFLECTED DOWNWARD THERMAL + DIFFUSE
!                SOLAR FLUX TRANSMITTED TO SENSOR [W CM-2 SR-1 / CM-1].
!       TRNLOS   LINE-OF-SIGHT COMBINED SPECIES TRANSMITTANCE [TX(9)].
!       PTHSCL   DISORT SCALING FACTOR FOR PATH SCATTERING RADIANCE.
!       SURSCL   DISORT SCALING FACTOR FOR SURFACE REFLECTED RADIANCE.
      REAL THMCUM(MLOS),SUMMSD(MLOS),SUMMS(MLOS),SUMTMS(MLOS),          &
     &  TSNOBS(MLOS),TSNREF(MLOS),FDNRTD(MLOS),FDNRT(MLOS),FDNTRT(MLOS),&
     &  TRNLOS(MLOS),PTHSCL(MLOS),SURSCL(MLOS)

!     DATA:
!       VSCALE   SCALING TO DISORT SPECTRAL GRID, MULTIPLE OF 15 [CM-1].
      REAL VSCALE(M_SCAL)
      SAVE VSCALE
      DATA VSCALE/4665.,  5955.,  8040.,  9840., 11625., 15585.,        &
     &           18000., 22020., 29400., 30975., 32550., 49995./
      ILOS=1

!     BEFORE SCALING, LDISCL IS SET TO .FALSE.
      LDISCL=.FALSE.

!     ALL VALUES OF VSCALE ARE MULTIPLES OF 15.
      CALL HUNT(VSCALE,M_SCAL,IV1+0.01,JLO,JLOP1)
      CALL HUNT(VSCALE,M_SCAL,IV2,JHI,JHIP1)
      IF(JLO.EQ.0)JLO=1
      IF(JHI.EQ.0)JHI=1
      N_SCAL=JHI-JLO+1
      DO I=JLO,JHI
          V_SCAL(I-JLO+1)=VSCALE(I)
      ENDDO
      IF(JHIP1.LE.M_SCAL)THEN
          N_SCAL=N_SCAL+1
          V_SCAL(N_SCAL)=VSCALE(JHI+1)
      ENDIF

!     SAVE VARIABLES MODIFIED SPECIFICALLY FOR DISORT SCALING:
      NSTRSV=NSTR
      DAZMSV=DISAZM
      NPRTSV=NOPRNT
      NOPRNT=9
      PTHSCL(ILOS)=1.
      SURSCL(ILOS)=1.

!     LOOP OVER DISORT SCALING SPECTRAL GRID:
      DO I_SCAL=1,N_SCAL
          DIS=.TRUE.
          DISAZM=DAZMSV
          NSTR=NSTRSV
          NAZ=ABS(NSTR)-1
          N2GAUS=ABS(NSTR)/2

!         PERFORM DISORT (ISWITCH=1) & ISAACS (ISWITCH=2) CALCULATIONS:
          DO ISWITCH=1,2

!             INITIALIZE TRANSMITTANCE/RADIANCE/IRRADIANCE TERMS:
              SUMSSS(ILOS)=0.
              S0=0.
              TSNOBS(ILOS)=0.
              TSNREF(ILOS)=0.
              SUMTMS(ILOS)=0.
              IBINPT=NINT(V_SCAL(I_SCAL)/BNDWID)
              VBAND5=IBINPT*BNDWID
              VCEN=VBAND5+OSHIFT

!             CALL ROUTINE "BMDATA" TO INITIALIZE BAND MODEL PARAMETERS.
              IF(MODTRN .AND. IBINPT.LE.MBINBM)CALL BMDATA(NLOS,IBINPT)

!             INITIALIZE TRANSMITTANCE AND SURFACE REFLECTANCE FLAGS:
              LSURF=.TRUE.

!             INITIALIZE THE SPECTRAL FLUX TABLE:
              IF(MODTRN)CALL FLXTBL

!             INITIALIZE LAYER LOOP VARIABLES
              CALL LOOP0(KNTRVL,NLOS,VBAND5,VCEN,BNDWID)

!             END INITIALIZATION, BEGIN OF FREQUENCY LOOP
              SINIT=.TRUE.
              IF(IEMSCT.GE.2)THEN
                  IF(APPREF .AND. CSNSRF(1).GT.0.)THEN
                      S0=PI/CSNSRF(1)
                  ELSE
                      S0=SOURCE(SINIT,VCEN,ISOURC,                      &
     &                  IDAY,NOPRNT,ANGLEM,SUNFUN)
                  ENDIF
              ENDIF

!             SURFACE SPECTRAL REFLECTANCE/EMISSION INTEGRALS:
              V=VCEN
              IF(VCEN.LE.0.)V=BNDWID/2
              IF(LSURF)CALL GTSURF(10000/V,LSURF,DH2O,MLTRFL,NLOS)

!             INITIALIZE TRANSMISSION ARRAY
              TX(1)=1.
              TX(2)=1.
              TX(3)=1.
              DO K=4,NEXTXY
                  TX(K)=0.
              ENDDO

!             CALL LAYER LOOP ROUTINE
              IF(ISWITCH.EQ.1)THEN

!                 DISORT:
                  CALL D_LOOP(VBAND5,.TRUE.,IBINPT,VCEN,NLOS,SUMMSD,    &
     &              IPH,SUMSSS,.TRUE.,THMCUM,S0,TSNOBS,TSNREF,          &
     &              FDNTRT,FDNRTD,KNTRVL,GROUND,TRNLOS,BTERM)

!                 SET UP FOR ISAACS (ISWITCH=2):
                  DIS=.FALSE.
                  DISAZM=.FALSE.
                  NSTR=1
                  NAZ=-1
                  N2GAUS=0
              ELSE

!                 ISAACS:
                  CALL I_LOOP(VBAND5,.TRUE.,IBINPT,VCEN,NLOS,SUMTMS,    &
     &              SUMMS,IPH,SUMSSS,.TRUE.,THMCUM,S0,TSNOBS,TSNREF,    &
     &              FDNTRT,FDNRT,KNTRVL,PTHSCL,SURSCL,GROUND,TRNLOS)
                  SUMMS(ILOS)=SUMMS(ILOS)+SUMTMS(ILOS)
              ENDIF
          ENDDO

!         NEED THESE DISORT AND ISAAC RATIOS:
          IF(DBLE(SUMMS(ILOS)).GT.1.D-30*DBLE(SUMMSD(ILOS)))THEN
              P_SCAL(I_SCAL,ILOS)=SUMMSD(ILOS)/SUMMS(ILOS)
          ELSEIF(I_SCAL.GT.1)THEN
              P_SCAL(I_SCAL,ILOS)=P_SCAL(I_SCAL-1,ILOS)
          ELSE
              P_SCAL(I_SCAL,ILOS)=1.
          ENDIF
          IF(DBLE(FDNRT(ILOS)).GT.1.D-30*DBLE(FDNRTD(ILOS)))THEN
              S_SCAL(I_SCAL,ILOS)=FDNRTD(ILOS)/FDNRT(ILOS)
          ELSEIF(I_SCAL.GT.1)THEN
              S_SCAL(I_SCAL,ILOS)=S_SCAL(I_SCAL-1,ILOS)
          ELSE
              S_SCAL(I_SCAL,ILOS)=1.
          ENDIF
      ENDDO

!     RESET LDISCL TO .TRUE.
      LDISCL=.TRUE.
      NOPRNT=NPRTSV
      RETURN
      END

      SUBROUTINE API(IFLAG,VCEN,ALAM,TRNLOS,UNIF,TRACE,LN_TRN,SUMA,     &
     &  CONVRT,THMCUM,RFSURF,SUMT,RADSUM,SUMSSR,SUMSSS,RFLSS,           &
     &  S0,TS0,SSOL,SPECMN,SPECMX,VCENMN,VCENMX,AASALB)

!     API STUFFS DATA INTO COMMON FOR APPLICATION PROGRAMMERS INTERFACE.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'
      INCLUDE 'JMASS.h'
      INCLUDE 'ERROR.h'

!     ARGUMENTS:
!       IFLAG    DATA TYPE FLAG:
!       VCEN     SPECTRAL BAND CENTRAL FREQUENCY [CM-1].
!       ALAM     SPECTRAL WAVELENGTH [MICRONS].
!       TRNLOS   LINE-OF-SIGHT COMBINED SPECIES TRANSMITTANCE [TX(9)].
!       UNIF     UNIFORMLY MIXED GASES SPECTRAL TRANSMITTANCE.
!       TRACE    TRACE GAS SPECTRAL TRANSMITTANCE.
!       LN_TRN   LOGARITHM OF COMBINED SPECIES TRANSMITTANCE.
!       SUMA     CUMULATIVE ABSORPTION SPECTRAL INTEGRAL.
!       CONVRT   CONVERSION FROM (1 / CM-1) TO (1 / MICRON).
!       THMCUM   PATH & SCATTERED THERMAL EMISSION [W SR-1 CM-2 / CM-1].
!       RFSURF   TRANSMITTED SURFACE REFLECTANCE [W SR-1 CM-2 / CM-1].
!       SUMT     TOTAL SPECTRAL RADIANCE AT SENSOR [W SR-1 CM-2 / CM-1].
!       RADSUM   SPECTRALLY INTEGRATED RADIANCE AT SENSOR [W SR-1 CM-2].
!       SUMSSR   PATH SCATTERED SOLAR [W SR-1 CM-2 / CM-1].
!       SUMSSS   PATH SINGLE SCATTERED SOLAR [W SR-1 CM-2 / CM-1].
!       RFLSS    SUN-SURFACE-SENSOR DIRECT RADIANCE[W SR-1 CM-2 / CM-1].
!       S0       TOP-OF-ATMOSPHERE SOLAR IRRADIANCE [W CM-2 / CM-1].
!       TS0      TRANSMITTED SOLAR IRRADIANCE [W CM-2 / CM-1].
!       SSOL     INTEGRATED TOP-OF-ATMOSPHERE SOLAR IRRADIANCE [W CM-2].
!       SPECMN   SPECTRAL TRANSMITTANCE, RADIANCE [W CM-2 SR-1 / CM-1],
!                OR ATTENUATED SOLAR IRRADIANCE [W CM-2 / CM-1] MINIMUM.
!       SPECMX   SPECTRAL TRANSMITTANCE, RADIANCE [W CM-2 SR-1 / CM-1],
!                OR ATTENUATED SOLAR IRRADIANCE [W CM-2 / CM-1] MAXIMUM.
!       VCENMN   SPECTRAL FREQUENCY AT MINIMUM SPECTRAL RADIANCE [CM-1].
!       VCENMX   SPECTRAL FREQUENCY AT MAXIMUM SPECTRAL RADIANCE [CM-1].
!       AASALB   AREA-AVERAGE SURFACE ALBEDO.
      INTEGER IFLAG
      REAL VCEN,ALAM,TRNLOS,UNIF,TRACE,LN_TRN,SUMA,CONVRT,              &
     &  THMCUM,RFSURF,SUMT,RADSUM,SUMSSR,SUMSSS,RFLSS,                  &
     &  S0,TS0,SSOL,SPECMN,SPECMX,VCENMN,VCENMX,AASALB

!     COMMONS:
      INCLUDE 'BASE.h'

!     DATA:
      INTEGER NUMERR
      SAVE NUMERR
      DATA NUMERR/0/

!     BRANCH BASED OF DATA TYPE.
      IF(IFLAG.EQ.4)THEN
          MINIMUMRAD=SPECMN
          MAXIMUMRAD=SPECMX
          MINRADVALUE=VCENMN
          MAXRADVALUE=VCENMX
          BOUNDEMIS=1-AASALB
      ELSE

!         INCREMENT SPECTRAL COUNTER:
          OUTPUTCOUNT=OUTPUTCOUNT+1
          IF(OUTPUTCOUNT.GT.ARRAYSIZE)THEN

!             ERROR HANDLING:
              ERRORCODE=FATAL
              IF(NUMERR.LE.MAXERR)WRITE(ERRORBUF(NUMERR),'(A)')         &
     &          'MODTRAN:  Parameter ARRAYSIZE exceeded.'
              NUMERR=NUMERR+1
              RETURN
          ENDIF
          FREQS(OUTPUTCOUNT)=VCEN
          WAVELENGTHS(OUTPUTCOUNT)=ALAM
          TOTTRANS(OUTPUTCOUNT)=TRNLOS
          LOGTOTTRANS(OUTPUTCOUNT)=LN_TRN
          IF(IFLAG.EQ.0)THEN

!             SPECTRAL TRANSMITTANCE DATA.
              H2OTRANS(OUTPUTCOUNT)=TX(17)
              CO2PTRANS(OUTPUTCOUNT)=UNIF
              OZONETRANS(OUTPUTCOUNT)=TX(31)
              TRACETRANS(OUTPUTCOUNT)=TRACE
              N2CONTTRANS(OUTPUTCOUNT)=TX(4)
              H2OCONTTRANS(OUTPUTCOUNT)=TX(5)
              MOLSCATTRANS(OUTPUTCOUNT)=TX(6)
              TOTAERTRANS(OUTPUTCOUNT)=TX(7)
              HNO3TRANS(OUTPUTCOUNT)=TX(11)
              AERABSORP(OUTPUTCOUNT)=TX(10)
              CO2TRANS(OUTPUTCOUNT)=TX(36)
              COTRANS(OUTPUTCOUNT)=TX(44)
              CH4TRANS(OUTPUTCOUNT)=TX(46)
              N2OTRANS(OUTPUTCOUNT)=TX(47)
              O2TRANS(OUTPUTCOUNT)=TX(50)
              NH3TRANS(OUTPUTCOUNT)=TX(52)
              NOTRANS(OUTPUTCOUNT)=TX(54)
              NO2TRANS(OUTPUTCOUNT)=TX(55)
              SO2TRANS(OUTPUTCOUNT)=TX(56)
              INTABS(OUTPUTCOUNT)=SUMA
          ELSEIF(IFLAG.EQ.1)THEN

!             SPECTRAL RADIANCE WITHOUT SOLAR.
              ATMOSRADCM(OUTPUTCOUNT)=THMCUM
              ATMOSRADMIC(OUTPUTCOUNT)=CONVRT*THMCUM
              GRRADCM(OUTPUTCOUNT)=RFSURF
              GRRADMIC(OUTPUTCOUNT)=CONVRT*RFSURF
              TRADCM(OUTPUTCOUNT)=SUMT
              TRADMIC(OUTPUTCOUNT)=CONVRT*SUMT
              INTRAD(OUTPUTCOUNT)=RADSUM
              SRADCM(OUTPUTCOUNT)=SUMSSR
              SRADMIC(OUTPUTCOUNT)=CONVRT*SUMSSR
              SRADSSCM(OUTPUTCOUNT)=SUMSSS
              GRRADDIRCM(OUTPUTCOUNT)=RFLSS
              GRRADDIRMIC(OUTPUTCOUNT)=CONVRT*RFLSS
          ELSEIF(IFLAG.EQ.2)THEN

!             SPECTRAL RADIANCE WITH SOLAR.
              ATMOSRADCM(OUTPUTCOUNT)=THMCUM
              ATMOSRADMIC(OUTPUTCOUNT)=CONVRT*THMCUM
              GRRADCM(OUTPUTCOUNT)=RFSURF
              GRRADMIC(OUTPUTCOUNT)=CONVRT*RFSURF
              TRADCM(OUTPUTCOUNT)=SUMT
              TRADMIC(OUTPUTCOUNT)=CONVRT*SUMT
              INTRAD(OUTPUTCOUNT)=RADSUM
              SRADCM(OUTPUTCOUNT)=SUMSSR
              SRADMIC(OUTPUTCOUNT)=CONVRT*SUMSSR
              SRADSSCM(OUTPUTCOUNT)=SUMSSS
              GRRADDIRCM(OUTPUTCOUNT)=RFLSS
              GRRADDIRMIC(OUTPUTCOUNT)=CONVRT*RFLSS
              SOLARIRRADCM(OUTPUTCOUNT)=S0
              SOLARIRRADMIC(OUTPUTCOUNT)=CONVRT*S0
          ELSEIF(IFLAG.EQ.3)THEN

!             SOLAR IRRADIANCE.
              TRANSIRRADCM(OUTPUTCOUNT)=TS0
              TRANSIRRADMIC(OUTPUTCOUNT)=CONVRT*TS0
              SOLARIRRADCM(OUTPUTCOUNT)=S0
              SOLARIRRADMIC(OUTPUTCOUNT)=CONVRT*S0
              INTRAD(OUTPUTCOUNT)=RADSUM
              INTSIRRAD(OUTPUTCOUNT)=SSOL
          ENDIF
      ENDIF
      ERRORCODE=SUCCES
      RETURN
      END



      SUBROUTINE PCRTM(rMono,nchall,rad)
!______________________________________________________________________|
!                                                                      |
!   06/15/2012 added by Hui Li          
!   regenerating channel radiance by PCRTM                             |
!______________________________________________________________________|

!      ZEROS A REAL ARRAY -A- HAVING -LENGTH- ELEMENTS:
       IMPLICIT NONE
       INCLUDE 'PARAMS.h'


!     COMMONS:
      INCLUDE 'PC.h'


!     /ANGSRF/
!       CVWSRF  COSINE OF THE VIEW ZENITH ANGLE FROM THE SURFACE.
!       CSNSRF  COSINE OF THE SOLAR (LUNAR) ZENITH AT SURFACE.
!       AZMSRF  RELATIVE AZIMUTH ANGLE (SUN - SENSOR AT SURFACE) [RAD].
!       UMU1    COSINE OF THE PATH NADIR ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       UMU0    COSINE OF THE SOLAR ZENITH ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       PHI1    RELATIVE AZIMUTH ANGLE (SUN - LOS PATH AT SENSOR) [DEG].
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       CMU     COSINE OF THE NADIR ANGLES USED IN DISORT.
      REAL CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU
      COMMON/ANGSRF/CVWSRF(MLOS),CSNSRF(MLOS),AZMSRF(MLOS),UMU1(MLOS),  &
     &  UMU0,PHI1(MLOS),CMU(MI)

   
      real*8 sr2d
      parameter(sr2d=90.d0/acos(0.d0))

       real*8 rad(MxChnl)
       integer i,j, irec
       real rMono(MxMono)
!!! local variable
       real*8 coefMean(MxPc),coef(MxPc)
       real*8 rm(mxReg), rc(MxChnl)
       integer ib,nchAll,ncstart
       integer nmstart,nmend   

       nchAll=0
       ncstart=1
       if (initflag)then
           nmstart=2
       else
           nmstart=1
       end if 
       rad=0
       do ib=1,nb
            rM=0
!            nPcBnd(ib)=100
            nmend=nmstart+nReg(ib)-1
            nchAll=nchAll+nch(ib)
            rm(1:nReg(ib))=rMono(nmstart:nmend)
            nmstart=nmend+1

!!!!!!!!    convert selected mono spectrum to channel spectrum

            Do i=1,nPcBnd(ib)
                coefMean(i)=dot_product(Pc(i,1:nch(ib),ib),
     &                      radMeanCh(1:nch(ib),ib))
                
                coef(i)=dot_product(rm(1:nReg(ib)),
     &                  RegCoef(1:nReg(ib),i,ib))               
     &                  -coefMean(i)

            ENDDO

            do i=1,nch(ib)
                rc(i)=dot_product(pc(1:npcBnd(ib),i,ib),
     &                Coef(1:nPcBnd(ib)))

            enddo

            rad(ncstart:nchAll)=(rc+radMeanCh(1:nch(ib),ib))*
     &                         radStdCh(1:nch(ib),ib)
            ncstart=nchAll+1
       end do ! do ib=1,nb
      

!!     open(617,file='radiance.out',status='replace')
!!     write(617,*) 'No. of Chans, SolZen in tape5'
!!     write(617, *) nchAll, acos(UMU0)*sr2d
!!     DO i=1,nchAll
!!        write(617,*)rad(i) 
!!     ENDDO

!!     close(617)
       
       RETURN
       END

