      LOGICAL FUNCTION GEODRV(GROUND,KPRINT,LDASTM,LASTM,ASTMC,ASTMX,   &
     &  RHASYM,AERRH,ZMAX,ILOS,H1SAV,H2SAV,OZENSV,RNGSAV,BETASV,HMINSV, &
     &  BZENSV,LENNSV,IKMAXS,KNTRVL,ICH,LNFLRT,FLRT,LABEL)

!     RETURN FALSE IF PROBLEM ARISES COMPUTING COLUMN AMOUNTS:
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       KPRINT   LOGICAL FLAG DICTATING K-DISTRIBUTION OUTPUT.
!       LASTM    LOGICAL FLAG, TRUE IS ANGSTROM PARAMETERS ARE INPUT.
!       LDASTM   LOGICAL IMPLYING THAT ASTMX IS A DELTA VALUE.
!       ASTMC    AEROSOL ANGSTROM LAW COEFFICIENT @ 550 NM.
!       ASTMX    AEROSOL ANGSTROM LAW EXPONENT.
!       ZMAX     MAXIMUM ATMOSPHERIC PROFILE ALTITUDE [KM].
!       ILOS     LOOP INDEX FOR OBSERVER ZENITH ANGLES.
!       KNTRVL   NUMBER OF SUB-INTERVALS USED IN CORRELATED-K ALGORITHM.
!       ICH      NUMERIC LABEL FOR AEROSOL MODEL.
!       LNFLRT   LENGTH OF FILE ROOT NAME.
!       FLRT     FILE ROOT NAME.
      LOGICAL KPRINT,LDASTM(2),LASTM
      REAL ASTMC,ASTMX,RHASYM,AERRH
      DOUBLE PRECISION ZMAX
      INTEGER ILOS,KNTRVL,LNFLRT,ICH(4)
      CHARACTER FLRT*(NAMLEN-4),LABEL*6

!     OUTPUT ARGUMENTS:
!       GROUND   FLAG, .TRUE. IF LINE-OF-SIGHT TERMINATES AT THE GROUND.
!       H1SAV    SAVED VALUE OF INPUT H1ALT [KM].
!       H2SAV    SAVED VALUE OF INPUT H2ALT [KM].
!       OZENSV   SAVED VALUE OF INPUT OBSZEN [DEG].
!       RNGSAV   SAVED VALUE OF INPUT HRANGE [KM].
!       BETASV   SAVED VALUE OF INPUT BETA [DEG].
!       HMINSV   SAVED VALUE OF HMIN [KM].
!       BZENSV   SAVED VALUE OF INPUT PHI [DEG].
!       LENNSV   SAVED VALUE OF INPUT LENN.
!       IKMAXS   SAVED NUMBER OF PATH SEGMENTS.
      LOGICAL GROUND(MLOS)
      DOUBLE PRECISION H1SAV,H2SAV,OZENSV,RNGSAV,BETASV,HMINSV,BZENSV
      INTEGER LENNSV,IKMAXS

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /CNTRL/
!       NSEG     NUMBER OF PATH SEGMENTS ALONG LINE-OF-SIGHT.
!       ML       NUMBER OF ATMOSPHERIC PROFILE LEVELS.
!       MLFLX    NUMBER OF LEVELS FOR WHICH FLUX VALUES ARE WRITTEN.
!       IMULT    MULTIPLE SCATTERING FLAG
!                  (0=NONE, 1=AT SENSOR, -1=AT FINAL OR TANGENT POINT).
!       THERML   FLAG TO CALCULATE THERMAL SCATTER.
      INTEGER NSEG,ML,MLFLX,IMULT
      LOGICAL THERML
      COMMON/CNTRL/NSEG(0:MLOSP1),ML,MLFLX,IMULT,THERML

!     /CARD1/
!       MODEL    MODEL ATMOSPHERE INDEX.
!       ITYPE    SLANT PATH TYPE.
!       IEMSCT   RADIATIVE TRANSFER MODE.
!                  0 FOR TRANSMITTANCE
!                  1 FOR THERMAL EMISSION ONLY
!                  2 FOR THERMAL EMISSION PLUS SOLAR SCATTER
!                  3 FOR TRANSMITTED SOLAR IRRADIANCE
!                  4 FOR SOLAR SCATTER ONLY
!       M1       MODEL ATMOSPHERE FOR PRESSURE & TEMPERATURE PROFILES.
!       M2       MODEL ATMOSPHERE FOR H2O PROFILE.
!       M3       MODEL ATMOSPHERE FOR O3 PROFILE.
!       I_RD2C   READ CARD 2C, 2C1, ... IF EQUAL 1; SKIP IF EQUAL TO 0.
!       NOPRNT   PRINT FLAG.
!       MODTRN   MODTRAN BAND MODEL FLAG.
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,I_RD2C,NOPRNT
      LOGICAL MODTRN
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,I_RD2C,NOPRNT,MODTRN

!     /CARD3/
!       H1ALT    OBSERVER (SENSOR) ALTITUDE [KM].
!       H2ALT    FINAL (TANGENT FOR LIMB PATH) ALTITUDE [KM].
!       OBSZEN   OBSERVER ZENITH ANGLE (H1ALT TO H2ALT) [DEG].
!       HRANGE   DISTANCE FROM H1ALT TO H2ALT [KM].
!       BETA     EARTH CENTER ANGLE BETWEEN H1ALT AND H2ALT [DEG].
!       REARTH   RADIUS OF THE EARTH [KM].
!       HMIN     PATH MINIMUM ALTITUDE [KM].
!       HMAX     PATH MAXIMUM ALTITUDE [KM].
!       CKRANG   MAXIMUM PATH RANGE FOR K-DISTRIBUTION OUTPUT
!                (=0. FOR TOTAL PATH ONLY; <0. FOR ALL RANGES).
!       BCKZEN   ZENITH ANGLE FOR BACKWARD (H2ALT TO H1ALT) PATH [DEG].
!       REARTH   EARTH RADIUS [KM].
!       ANGLEM   LUNAR PHASE ANGLE [0 TO 180 DEG].
!       LENN     PATH LENGTH SWITCH (0=SHORT, 1=LONG).
!       IDAY     DAY OF YEAR [0-366, DEFAULT (0) IS DAY 91].
!       ISOURC   SOURCE FLAG [0=SUN AND 1=MOON].
!       NLOS     NUMBER OF LINE-OF-SIGHT PATHS.
      INTEGER LENN,IDAY,ISOURC,NLOS
      DOUBLE PRECISION H1ALT,H2ALT,OBSZEN,HRANGE,BETA,REARTH,           &
     &  HMIN,HMAX,CKRANG,BCKZEN,ANGLEM
      COMMON/CARD3/H1ALT(MLOS),H2ALT(MLOS),OBSZEN(MLOS),HRANGE(MLOS),   &
     &  BETA(MLOS),HMIN(MLOS),HMAX(MLOS),CKRANG(MLOS),BCKZEN(MLOS),     &
     &  REARTH,ANGLEM,LENN(MLOS),IDAY,ISOURC,NLOS

!     /GRND/
!       GNDALT   GROUND ALTITUDE, ABOVE SEA LEVEL [KM].
      DOUBLE PRECISION GNDALT
      COMMON/GRND/GNDALT

!     /JM3A1/
!       IPARM    SOLAR/LUNAR GEOMETRY SPECIFICATION FLAG.
      INTEGER IPARM
      COMMON/JM3A1/IPARM

!     /JM3A2/
!       IPRMSV   SAVED VALUE OF IPARM INPUT.
!       PARM1    SENSOR LATITUDE IF IPARM=0 OR =1 [DEG N OF EQUATOR].
!                TARGET LATITUDE IF IPARM=10 OR =11 [DEG N OF EQUATOR].
!                SOLAR REL AZIMUTH AT SENSOR IF IPARM=2 [DEG E OF N].
!                SOLAR REL AZIMUTH AT TARGET IF IPARM=12 [DEG E OF N].
!       PARM2    SENSOR LONGITUDE IF IPARM=0 OR =1 [DEG W OF GRNWCH].
!                TARGET LONGITUDE IF IPARM=10 OR =11 [DEG W OF GRNWCH].
!                SOLAR ZENITH AT SENSOR IF IPARM IS 2 [DEG].
!                SOLAR ZENITH AT TARGET IF IPARM IS 12 [DEG].
!       SRCLAT   SOURCE (SUN OR MOON) LATITUDE [DEG NORTH OF EQUATOR].
!       SRCLON   SOURCE (SUN OR MOON) LONGITUDE [DEG WEST OF GREENWICH].
!       GMTIME   GREENWICH MEAN TIME [DECIMAL HOURS].
!       TRUEAZ   PATH TRUE AZIMUTH ANGLE [DEG EAST OF NORTH].
      INTEGER IPRMSV
      DOUBLE PRECISION PARM1,PARM2,SRCLAT,SRCLON,GMTIME,TRUEAZ
      COMMON/JM3A2/PARM1,PARM2,SRCLAT,SRCLON,GMTIME,TRUEAZ,IPRMSV

!     /MPROF/
!       ZM       PROFILE LEVEL ALTITUDES [KM].
!       PM       PROFILE LEVEL PRESSURES [MBAR].
!       TM       PROFILE LEVEL TEMPERATURES [K].
!       RFNDX    PROFILE LEVEL REFRACTIVITIES.
!       LRHSET   FLAG, .TRUE. IF RELATIVE HUMIDITY IS NOT TO BE SCALED.
      DOUBLE PRECISION ZM
      REAL PM,TM,RFNDX
      LOGICAL LRHSET
      COMMON/MPROF/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    &
     &  RFNDX(LAYDIM),LRHSET(LAYDIM)

!     /CARD3A/
!       G        SCATTERING FUNCTION ASYMMETRY FACTOR.
      INTEGER IPH
      REAL G
      COMMON/CARD3A/IPH,G

!     /PATH/
!       PTHCOS   COSINE OF PATH ZENITH AT PATH BOUNDARIES.
!       PTHZEN   PATH ZENITH AT PATH BOUNDARIES [DEG].
!       PTHECA   SENSOR TO PATH EARTH CENTER ANGLE [DEG].
!       PTHALT   ALTITUDES AT PATH BOUNDARIES [KM].
!       PTH_MS   ALTITUDES AT PATH BOUNDARIES FOR THE MS PATH.
!       PTHSEG   PATH SEGMENT LENGTH [KM].
!       PTHRNG   SENSOR TO PATH BOUNDARY RANGE [KM].
!       JMAX     NUMBER OF DISTINCT LOS PATH SEGMENT ENDPOINT ALTITUDES.
!       IKHMIN   PATH BOUNDARY INDEX OF PATH MINIMUM ALTITUDE.
!       IKHMAX   PATH BOUNDARY INDEX OF PATH MAXIMUM ALTITUDE.
!       IKOUT    NUMBER OF PATH BOUNDARIES K DATA IS OUTPUT.
!       NTKDIS   RECORD NUMBER FOR K-DISTRIBUTION TRANSMITTANCE FILE.
!       NRKDIS   RECORD NUMBER FOR K-DISTRIBUTION RADIANCE FILE.
!       MAPPTH   MAPPING FROM PATH SEGMENT MIDPOINT TO VERTICAL LAYER.
!       IPTHHT   ALTITUDES (HEIGHTS) AT PATH BOUNDARIES [M].
!       LOWALT   VERTICAL LAYER BOUNDARY INDEX AT OR JUST BELOW PTHALT.
!       FACALT   ALTITUDE INTERPOLATION FRACTION FOR PTHALT
!       PATH_T   TEMPERATURE AT PATH BOUNDARIES [K].
!       PATH_P   PRESSURE AT PATH BOUNDARIES [ATM].
!       PTHRH    RELATIVE HUMIDITY AT PATH BOUNDARIES [K].
!       LSSGEO   LOGICAL FLAG, .TRUE. FOR SOLAR PATHS.
!       LTANMX   LOGICAL FLAG, .TRUE. IF PATH HAS A TANGENT MAXIMUM.
      DOUBLE PRECISION PTHCOS,PTHZEN,PTHECA,PTHALT,PTH_MS,PTHSEG,PTHRNG
      INTEGER JMAX,IKHMIN,IKHMAX,IKOUT,NTKDIS,NRKDIS,MAPPTH,            &
     &  IPTHHT,LOWALT
      REAL FACALT,PATH_T,PATH_P,PTHRH
      LOGICAL LSSGEO,LTANMX
      COMMON/PATH/PTHCOS(0:LAYTWO),PTHZEN(0:LAYTWO),PTHECA(0:LAYTWO),   &
     &  PTHALT(0:LAYTWO,1:MLOS),PTH_MS(0:LAYDIM),PTHSEG(LAYTWO),        &
     &  PTHRNG(0:LAYTWO,1:MLOS),JMAX,IKHMIN(MLOS),IKHMAX(MLOS),         &
     &  IKOUT(MLOS),MAPPTH(LAYTWO,1:MLOS),IPTHHT(0:LAYTWO),NTKDIS,      &
     &  NRKDIS,LOWALT(0:LAYTWO,1:MLOS),FACALT(0:LAYTWO,1:MLOS),         &
     &  PATH_T(0:LAYTWO,1:MLOS),PATH_P(0:LAYTWO,1:MLOS),                &
     &  PTHRH(0:LAYTWO,1:MLOS),LSSGEO,LTANMX

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
      REAL UMU,PHI
      INTEGER NSTR,NAZ,N2GAUS,NUMU,MAPUMU,NPHI,MAPPHI
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      COMMON/DISRT/UMU(MXUMU),PHI(MAXPHI),NSTR,NAZ,N2GAUS,NUMU,         &
     &  MAPUMU(MLOS),NPHI,MAPPHI(MLOS),DIS,DISAZM,DISALB,LDISCL
      SAVE /DISRT/

!     /CARD2/
!       IHAZE    BOUNDARY LAYER AEROSOL MODEL NUMBER.
!       ISEASN   SEASON NUMBER (1=SPRING-SUMMER, 2=FALL-WINTER).
!       IVULCN   VOLCANIC AEROSOL MODEL NUMBER.
!       ICSTL    COASTAL AIRMASS MODEL NUMBER.
!       ICLD     CLOUD MODEL NUMBER.
!       IVSA     VERTICAL STRUCTURE ALGORITHM (0=OFF, 1=ON).
!       VIS      SURFACE VISIBILITY (GROUND METEOROLOGICAL RANGE) [KM].
!       WSS      CURRENT WIND SPEED (M/S).
!       WHH      24-HOUR WIND SPEED (M/S).
!       RAINRT   RAIN RATE (MM/HR)
!       LSAP     LOGICAL FLAG FOR SPECTRAL AEROSOL PROFILES INPUT.
      INTEGER IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA
      REAL VIS,WSS,WHH,RAINRT
      LOGICAL LSAP
      COMMON/CARD2/IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,                 &
     &  VIS,WSS,WHH,RAINRT,LSAP

!     /SAP/
!       NWVSAP   NUMBER OF AEROSOL SPECTRAL GRID POINTS.
!       NLGSAP   HIGHEST AEROSOL PHASE FUNCTION LEGENDRE MOMENT.
!       NANSAP   NUMBER OF AEROSOL PHASE FUNCTION ANGULAR POINTS.
!       LEVSAP   NUMBER OF AEROSOL ATMOSPHERIC LEVELS.
!       ANGSAP   AEROSOL PHASE FUNCTION ANGULAR GRID [DEGREES].
!       COSSAP   COSINE OF THE AEROSOL PHASE FUNCTION ANGLES.
!       WAVSAP   AEROSOL SPECTRAL GRID [MICRONS].
!       LEGSAP   AEROSOL LEGENDRE COEFFICIENTS.
!       PFSAP    AEROSOL PHASE FUNCTION [SR-1].
!       LOSSAP   LOGICAL FLAG, TRUE FOR LINE-OF-SIGHT PATH.
      INTEGER NWVSAP,NLGSAP,NANSAP,LEVSAP
      DOUBLE PRECISION ANGSAP,COSSAP,PFSAP
      REAL WAVSAP,LEGSAP
      LOGICAL LOSSAP
      COMMON/SAP/NWVSAP,NLGSAP,NANSAP,LEVSAP,ANGSAP(MANSAP),            &
     &  COSSAP(MANSAP),WAVSAP(MWVSAP),LEGSAP(MLGSAP,MWVSAP,LAYDIM),     &
     &  PFSAP(MANSAP,MWVSAP,LAYDIM),LOSSAP

!     /LATLON/
!       H1LAT    ORIGINAL OBSERVER LATITUDE [DEG NORTH OF EQUATOR].
!       H1LON    ORIGINAL OBSERVER LONGITUDE [DEG WEST OF GREENWICH].
!       H2LAT    ORIGINAL TARGET LATITUDE [DEG NORTH OF EQUATOR].
!       H2LON    ORIGINAL TARGET LONGITUDE [DEG WEST OF GREENWICH].
      DOUBLE PRECISION H1LAT,H1LON,H2LAT,H2LON
      COMMON/LATLON/H1LAT,H1LON,H2LAT,H2LON

!     /ANGSRF/
!       CVWSRF  COSINE OF THE VIEW ZENITH ANGLE FROM THE SURFACE.
!       CSNSRF  COSINE OF THE SOLAR (LUNAR) ZENITH AT SURFACE.
!       AZMSRF  RELATIVE AZIMUTH ANGLE (SUN - SENSOR AT SURFACE) [RAD].
!       UMU1    COSINE OF THE PATH NADIR ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       UMU0    COSINE OF THE SOLAR ZENITH ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       PHI1    RELATIVE AZIMUTH ANGLE (SUN - LOS PATH AT SENSOR) [DEG].
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       CMU     COSINE OF THE NADIR ANGLES USED IN DISORT.
      REAL CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU
      COMMON/ANGSRF/CVWSRF(MLOS),CSNSRF(MLOS),AZMSRF(MLOS),UMU1(MLOS),  &
     &  UMU0,PHI1(MLOS),CMU(MI)

!     FUNCTIONS:
!       CNVPHI   CONVERTS FROM TARGET TO SENSOR BASED
!                GEOMETRY, .TRUE. FOR SUCCESS.
!       NEWSRC   TRUE IF SOURCE GEOMETRY INPUT SUCCESSFULLY CONVERTED.
!       H1_VEC   TRUE IF PATH LOCATION & DIRECTION AT H1ALT IS RETURNED.
      LOGICAL CNVPHI,NEWSRC,H1_VEC

!     LOCAL VARIABLES:
!       ITYPSV   SAVED VALUE OF INPUT ITYPE.
!       LEVEL    LEVEL INDEX.
!       IERROR   INTEGER ERROR FLAG.
!       NTHEAD   HEADER RECORD FOR K-DEPENDENT TRANSMITTANCE FILE.
!       NRHEAD   HEADER RECORD FOR K-DEPENDENT RADIANCE FILE.
!       N4BYTE   NUMBER OF 4 BYTE VARIABLES PER RECORD.
!       NTREC    NUMBER OF RECORDS PER SPECTRAL POINT IN TRANSM FILE.
!       NRREC    NUMBER OF RECORDS PER SPECTRAL POINT IN RADIANCE FILE.
!       NRANGE   NUMBER OF OUTPUT PATH RANGES.
!       JLOS     SECOND LOOP INDEX FOR LINES-OF-SIGHT.
!       WDKDIS   BAND MODEL WIDTH [CM-1].
!       V0KDIS   CALCULATION INITIAL FREQUENCY.
!       ECA_H2   EARTH CENTERED ANGLE FROM H1ALT TO H2ALT [DEG].
!       PRM1NW   SENSOR LATITUDE [DEGREES NORTH OF EQUATOR].
!       PRM2NW   SENSOR LONGITUDE [DEGREES WEST OF GREENWICH].
!       BEND     PATH BENDING FROM REFRACTION [DEG].
!       PTHCSS   SAVED PTHCOS ARRAY.
!       H1LATX   LATITUDE AT H1ALT [DEG NORTH OF EQUATOR].
!       H1LONX   LONGITUDE AT H1ALT [DEG WEST OF GREENWICH].
!       H1AZMX   TRUE PATH AZIMUTH ANGLE AT H1ALT [DEG EAST OF NORTH].
      INTEGER ITYPSV,LEVEL,IERROR,NTHEAD,NRHEAD,N4BYTE,                 &
     &  NTREC,NRREC,NRANGE,JLOS
      REAL WDKDIS,V0KDIS
!     REAL ECA_H2,PRM1NW,PRM2NW
      DOUBLE PRECISION H1LATX,H1LONX,H1AZMX,H2_AZM,BEND,PTHCSS(0:LAYTWO)

!     DATA:
!       BETAH2   EARTH CENTER ANGLE BETWEEN H1ALT AND H2ALT.
      DOUBLE PRECISION BETAH2
      SAVE BETAH2,NTHEAD,NRHEAD
      DATA BETAH2/0.D0/


!     INITIALIZE GEODRV:
      GEODRV=.FALSE.

!     INITIALIZE COLUMN AMOUNTS AND OPTICAL DEPTH ARRAYS:
      CALL PATH0(ILOS,NWVSAP,LSAP)

!     IF TARGET-BASED (H2ALT) ZENITH ANGLE (BCKZEN) HAS BEEN INPUT,
!     CONVERT TO OBSERVER-BASED (H1ALT) LINE-OF-SIGHT PARAMETERS.
      LSSGEO=.FALSE.
      IF(ITYPE.GT.1 .AND. ITYPE.NE.4 .AND. BCKZEN(ILOS).GT.0.D0)THEN
          IF(H2ALT(ILOS).LT.GNDALT)THEN
              WRITE(IPR,'(A,I4,A,2(F10.5,A),/22X,A)')' Warning from'    &
     &          //' GEODRV:  Final altitude for path No.',ILOS,         &
     &          ' (H2ALT =',H2ALT(ILOS),' km) below ground (GNDALT =',  &
     &          GNDALT,' km).','    H2ALT has been reset to GNDALT.'
              H2ALT(ILOS)=GNDALT
          ENDIF
          IF(.NOT.CNVPHI(ITYPE,REARTH,ZMAX,H1ALT(ILOS),                 &
     &      H2ALT(ILOS),OBSZEN(ILOS),HRANGE(ILOS),                      &
     &      BETA(ILOS),LENN(ILOS),BCKZEN(ILOS)))RETURN
      ELSEIF(H1ALT(ILOS).LT.GNDALT)THEN
          WRITE(IPR,'(A,I4,A,2(F10.5,A),/22X,A)')' Warning from'        &
     &      //' GEODRV:  Observer altitude for path No.',ILOS,          &
     &      ' (H1ALT =',H1ALT(ILOS),' km) below ground (GNDALT =',      &
     &      GNDALT,' km).','    H1ALT has been reset to GNDALT.'
          H1ALT(ILOS)=GNDALT
      ENDIF

!     SAVE LINE-OF-SIGHT INPUTS FOR MULTIPLE RUN REUSE.
      H1SAV=H1ALT(ILOS)
      H2SAV=H2ALT(ILOS)
      OZENSV=OBSZEN(ILOS)
      RNGSAV=HRANGE(ILOS)
      BETASV=BETA(ILOS)
      BZENSV=BCKZEN(ILOS)
      LENNSV=LENN(ILOS)

!     MULTIPLE SCATTERING PATH DATA DEFINED FOR FIRST LINE-OF-SIGHT:
      IF(ILOS.EQ.1)THEN

!         SAVE PATH TYPE FOR MULTIPLE RUN REUSE.
          ITYPSV=ITYPE
          IF(ITYPE.EQ.4)THEN

!             FOR USER DEFINED REFRACTED PATH, MINIMUM ALTITUDE & NUMBER
!             OF SEGMENTS ARE ALREADY DETERMINED AND MUST BE SAVED.
              HMINSV=HMIN(1)
              IKMAXS=NSEG(1)
              DO LEVEL=0,IKMAXS
                  PTHCSS(LEVEL)=PTHCOS(LEVEL)
              ENDDO
          ENDIF

!         ADJUST GEOMETRY INPUTS FOR SOLAR/LUNAR CALCULATIONS.
          IF(IEMSCT.EQ.2)THEN

!             SAVE IPARM FOR DECIPHERING "TRUEAZ" IF MULTIPLE LOS PATHS:
              IPRMSV=IPARM
              IF(.NOT.NEWSRC(ZMAX,H1SAV,H2SAV,OZENSV,                   &
     &          RNGSAV,BETASV,LENNSV,IPARM,PARM1,PARM2,                 &
     &          SRCLAT,SRCLON,TRUEAZ,BETAH2))RETURN
              H1LATX=PARM1
              H1LONX=PARM2
              H1AZMX=TRUEAZ
          ENDIF
          IF(IMULT.NE.0)THEN

!             SET UP VERTICAL MULTIPLE SCATTERING PATH:
              LOSSAP=.FALSE.
              H1ALT(1)=GNDALT
              H2ALT(1)=ZM(ML)
              ITYPE=2
              OBSZEN(1)=0.D0
              HRANGE(1)=0.D0
              BETA(1)=0.D0
              CALL GEO(MLOSP1,.TRUE.,ICH(1),CKRANG(1),REARTH,ZMAX,      &
     &          AERRH,LENN(1),H1ALT(1),H2ALT(1),OBSZEN(1),HRANGE(1),    &
     &          BETA(1),HMIN(1),HMAX(1),BCKZEN(1),IERROR,BEND)

!             LOAD AEROSOL EXTINCTION, ABSORPTION, AND ASYMMETRY COEFS:
              CALL EXABIN(ICH,ASTMC,ASTMX,LDASTM,RHASYM,AERRH,LASTM)
              IF(IEMSCT.EQ.2)THEN
                  LSSGEO=.TRUE.
                  IF(IMULT.EQ.1)THEN

!                     SUN CONTRIBUTIONS TO MULTIPLE SCATTERING AT H1ALT:
                      CALL SSGEO(MLOSP1,H1ALT(1),H2ALT(1),OBSZEN(1),    &
     &                  REARTH,LENN(1),ZMAX,IERROR,IPH,H1LAT,H1LON,     &
     &                  SRCLAT,SRCLON,TRUEAZ,G,.TRUE.,ICH(1),KNTRVL)
                  ELSE

!                     SUN CONTRIBUTIONS TO MULTIPLE SCATTERING AT H2ALT:
                      CALL PSIECA(H2LAT,H2LON,H1LAT,H1LON,H2_AZM,BETAH2)
                      CALL SSGEO(MLOSP1,H1ALT(1),H2ALT(1),OBSZEN(1),    &
     &                  REARTH,LENN(1),ZMAX,IERROR,IPH,H2LAT,H2LON,     &
     &                  SRCLAT,SRCLON,H2_AZM,G,.TRUE.,ICH(1),KNTRVL)
                  ENDIF
              ENDIF
          ENDIF
          H1ALT(1)=H1SAV
          H2ALT(1)=H2SAV
          OBSZEN(1)=OZENSV
          HRANGE(1)=RNGSAV
          BETA(1)=BETASV
          BCKZEN(1)=BZENSV
          LENN(1)=LENNSV
          ITYPE=ITYPSV
          IF(ITYPE.EQ.4)THEN

!             FOR USER SPECIFIED REFRACTED PATHS, RESET MINIMUM
!             ALTITUDE AND NUMBER OF SEGMENTS.
              HMIN(1)=HMINSV
              NSEG(1)=IKMAXS
              DO LEVEL=0,IKMAXS
                  PTHCOS(LEVEL)=PTHCSS(LEVEL)
              ENDDO
          ELSEIF(NLOS.GT.1)THEN
              IF(IMULT.EQ.1)THEN
                  WRITE(IPR,'(/A,/(A,F10.5,A))')'SENSOR latitude and'// &
     &              ' longitude are the same for all lines-of-sight:',  &
     &              'Latitude: ',H1LAT,' [Degrees North of Equator]',   &
     &              'Longitude:',H1LON,' [Degrees West of Greenwich]'
              ELSE
                  WRITE(IPR,'(/A,/(A,F10.5,A))')'TARGET latitude and'// &
     &              ' longitude are the same for all lines-of-sight:',  &
     &              'Latitude: ',H2LAT,' [Degrees North of Equator]',   &
     &              'Longitude:',H2LON,' [Degrees West of Greenwich]'
              ENDIF
          ENDIF
      ENDIF

!     TRACE PATH THROUGH THE ATMOSPHERE AND CALCULATE ABSORBER AMOUNTS:
      LSSGEO=.FALSE.
      LOSSAP=.TRUE.
      PTHRNG(0,ILOS)=0.D0
      CALL GEO(ILOS,.FALSE.,ICH(1),CKRANG(ILOS),REARTH,ZMAX,AERRH,      &
     &  LENN(ILOS),H1ALT(ILOS),H2ALT(ILOS),OBSZEN(ILOS),HRANGE(ILOS),   &
     &  BETA(ILOS),HMIN(ILOS),HMAX(ILOS),BCKZEN(ILOS),IERROR,BEND)

!     DEFINE AEROSOL TEMPERATURE FOR MICROWAVE FOG MODEL:
      IF(ILOS.EQ.1)CALL AERTMP

!     SAVE ZENITH ANGLE DATA (ALREADY SAVED FOR ITYPE=4).
      IF(IMULT.NE.0 .AND. ITYPE.NE.4)THEN
          DO LEVEL=0,NSEG(ILOS)
              PTHCSS(LEVEL)=PTHCOS(LEVEL)
          ENDDO
      ENDIF
      IF(IERROR.GT.0)RETURN
      IF(IEMSCT.EQ.3 .AND. IERROR.EQ. -5)THEN
          WRITE(IPR,'(/A)')' DIRECT PATH TO SUN INTERSECTS'//           &
     &      ' THE EARTH: SKIP TO NEXT CASE'
          RETURN
      ENDIF

!     THE SECOND CALL TO SSGEO IS TO GET THE CORRECT ANGLES
!     FOR PHASE FUNCTIONS AND TO SAVE SOLAR PATH INFORMATION.
      IF(IEMSCT.EQ.2)THEN
          LSSGEO=.TRUE.
          LOSSAP=.FALSE.

!         DETERMINE THE LAT/LON AND TRUE AZIMUTH AT H1ALT:
          IF(ILOS.GT.1)THEN
              IF(.NOT.H1_VEC(IMULT,IPRMSV,H1SAV,H2SAV,H1ALT(ILOS),      &
     &          H2ALT(ILOS),OBSZEN(ILOS),BETA(ILOS),BCKZEN(ILOS),       &
     &          REARTH,TRUEAZ,H1LATX,H1LONX,H1AZMX))THEN
                  IERROR=1
                  RETURN
              ENDIF
          ENDIF
          WRITE(IPR,'(/A,I5,A,/(F15.5,3X,A))')                          &
     &      'Line-of-Sight No.',ILOS,' location and direction:',        &
     &      H1LATX,'Latitude at H1ALT [Deg North of Equator]',          &
     &      H1LONX,'Longitude at H1ALT [Deg West of Greenwich]',        &
     &      H1AZMX,'True Azimuth at H1ALT [Deg East of North]'
          CALL SSGEO(ILOS,H1ALT(ILOS),H2ALT(ILOS),OBSZEN(ILOS),         &
     &      REARTH,LENN(ILOS),ZMAX,IERROR,IPH,H1LATX,H1LONX,            &
     &      SRCLAT,SRCLON,H1AZMX,G,.FALSE.,ICH(1),KNTRVL)
          IF(IERROR.GT.0)RETURN
      ELSEIF(DIS)THEN

!         DISORT THERMAL SCATTER IS COMPUTE BUT NO SOLAR:
          IF(ILOS.EQ.1)THEN

!             SET PHI ARRAY TO 0 SINCE NO SOLAR:
              NPHI=1
              PHI(1)=0.
              MAPPHI(1)=1
          ENDIF

!         ADD UMU1 TO LIST OF MONOTONICALLY INCREASING USER COSINES:
          CALL UMULST(ILOS,UMU1(ILOS))
      ENDIF
      IF(IMULT.NE.0 .OR. ITYPE.EQ.4)THEN
          DO LEVEL=0,NSEG(ILOS)
              PTHCOS(LEVEL)=PTHCSS(LEVEL)
          ENDDO
      ENDIF

!     RESET IKOUT<0 IF K DATA IS NOT OUTPUT, OTHERWISE WRITE HEADERS.
      IF(.NOT.KPRINT)THEN
          IKOUT(ILOS)=-1
      ELSEIF(BINOUT)THEN

!         BINARY HEADERS:
          IF(NTKDIS.GT.0)THEN

!             REPEAT BINARY RUN:  UPDATE PREVIOUS HEADERS.
              READ(JTKDIS,REC=NTHEAD)                                   &
     &          N4BYTE,NTREC,NRANGE,NTKDIS,WDKDIS,V0KDIS
              WRITE(JTKDIS,REC=NTHEAD)                                  &
     &          N4BYTE,NTREC,NRANGE,NTKDIS,WDKDIS,V0KDIS,.FALSE.
              READ(JRKDIS,REC=NRHEAD)                                   &
     &          N4BYTE,NRREC,NRANGE,NRKDIS,WDKDIS,V0KDIS
              WRITE(JRKDIS,REC=NRHEAD)                                  &
     &          N4BYTE,NRREC,NRANGE,NRKDIS,WDKDIS,V0KDIS,.FALSE.
          ENDIF
          NTHEAD=NTKDIS+1
          NRHEAD=NRKDIS+1
          IF(IKOUT(ILOS).LT.NSEG(ILOS))THEN
              WRITE(JTKDIS,REC=NTHEAD)                                  &
     &          KNTRVL+3,IKOUT(ILOS)+2,IKOUT(ILOS)+1
              WRITE(JRKDIS,REC=NRHEAD)                                  &
     &          KNTRVL+3,IKOUT(ILOS)+3,IKOUT(ILOS)+1
          ELSE
              WRITE(JTKDIS,REC=NTHEAD)KNTRVL+3,NSEG(ILOS)+1,NSEG(ILOS)
              WRITE(JRKDIS,REC=NRHEAD)KNTRVL+3,NSEG(ILOS)+2,NSEG(ILOS)
          ENDIF
      ELSE

!         ASCII HEADERS:
          IF(IKOUT(ILOS).LT.NSEG(ILOS))THEN
              WRITE(ITKDIS,'(/I5,A)')                                   &
     &          IKOUT(ILOS)+1,'  NUMBER OF OUTPUT RANGES'
              WRITE(IRKDIS,'(/I5,A)')                                   &
     &          IKOUT(ILOS)+1,'  NUMBER OF OUTPUT RANGES'
          ELSE
              WRITE(ITKDIS,'(/I5,A)')                                   &
     &          NSEG(ILOS),'  NUMBER OF OUTPUT RANGES'
              WRITE(IRKDIS,'(/I5,A)')                                   &
     &          NSEG(ILOS),'  NUMBER OF OUTPUT RANGES'
          ENDIF
          WRITE(ITKDIS,'(/(A))')' SPEC_FREQ #k''s  ALTITUDE       RANGE'&
     &      //'      PATH   k-INTERVAL_TRANSMITTANCES:',                &
     &      '    [CM-1]           [KM]        [KM]    TRANSM'
          WRITE(IRKDIS,'(/(A))')' SPEC_FREQ #k''s  ALTITUDE       RANGE'&
     &      //' PATH_RADIANCE  k-INTERVAL_PATH_RADIANCES:',             &
     &                          '    [CM-1]           [KM]        [KM]' &
     &      //'           [W SR-1 CM-2 / CM-1]'
      ENDIF

!     LOAD AEROSOL EXTINCTION, ABSORPTION, AND ASYMMETRY COEFFICIENTS:
      CALL EXABIN(ICH,ASTMC,ASTMX,LDASTM,RHASYM,AERRH,LASTM)

!     LOGICAL GROUND IS TRUE IF LINE-OF-SIGHT TERMINATES AT THE GROUND:
      GROUND(ILOS)=H2ALT(ILOS).LE.GNDALT

!     PREPARE FOR SUCCESSFUL RETURN:
      GEODRV=.TRUE.

!     OPEN SPHERICAL ALBEDO / DIFFUSE TRANSMITTANCE FILE:
      IF(DISALB .AND. ILOS.EQ.NLOS)THEN

!         HAS THE GROUND BE INTERSECTED?
          DO JLOS=1,NLOS
              IF(GROUND(JLOS))THEN
                  CALL ALBOPN(LNFLRT,FLRT,LABEL)
                  RETURN
              ENDIF
          ENDDO
          DISALB=.FALSE.
          WRITE(IPR,'(A,/22X,A)')' Warning from GEODRV:  The DISORT'    &
     &      //' Spherical Albedo / Diffuse Transmittance Option',       &
     &      ' was turned off because none of the'                       &
     &      //' lines-of-sight intersect the ground.'
      ENDIF
 
!     RETURN TO DRIVER
      RETURN
      END

      SUBROUTINE PATH0(ILOS,NWVSAP,LSAP)

!     PATH0 INITIALIZES COLUMN AMOUNTS AND OPTICAL DEPTH ARRAYS:
      IMPLICIT NONE

!     INPUT ARGUMENTS:
!       ILOS     LOOP INDEX FOR OBSERVER ZENITH ANGLES.
!       NWVSAP   NUMBER OF AEROSOL SPECTRAL GRID POINTS.
!       LSAP     LOGICAL FLAG FOR SPECTRAL AEROSOL PROFILES INPUT.
      INTEGER ILOS,NWVSAP
      LOGICAL LSAP

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     COMMONS:
      INCLUDE 'SEGDAT.h'
      INCLUDE 'WSOL.h'

!     /SAPDEP/
!       XSAP     LINE-OF-SIGHT PATH AEROSOL EXTINCTION OPTICAL DEPTHS.
!       XSAPM    VERTICAL MS PATH AEROSOL EXTINCTION OPTICAL DEPTHS.
!       ASAP     LINE-OF-SIGHT PATH AEROSOL ABSORPTION OPTICAL DEPTHS.
!       ASAPM    VERTICAL MS PATH AEROSOL ABSORPTION OPTICAL DEPTHS.
!       XSAPS    SOLAR PATH AEROSOL EXTINCTION OPTICAL DEPTHS FROM LOS.
!       XSAPSM   SOLAR PATH AEROSOL EXTINCTION OPTICAL DEPTHS FOR MS.
!       ASAPS    SOLAR PATH AEROSOL ABSORPTION OPTICAL DEPTHS FROM LOS.
!       ASAPSM   SOLAR PATH AEROSOL ABSORPTION OPTICAL DEPTHS FOR MS.
      REAL XSAP,XSAPM,ASAP,ASAPM,XSAPS,XSAPSM,ASAPS,ASAPSM
      COMMON/SAPDEP/                                                    &
     &  XSAP(1:MWVSAP,0:LAYTWO,0:MLOS),XSAPM(1:MWVSAP,0:LAYDIM),        &
     &  ASAP(1:MWVSAP,0:LAYTWO,0:MLOS),ASAPM(1:MWVSAP,0:LAYDIM),        &
     &  XSAPS(MWVSAP,LAYTWO,MLOS),XSAPSM(MWVSAP,LAYDIM),                &
     &  ASAPS(MWVSAP,LAYTWO,MLOS),ASAPSM(MWVSAP,LAYDIM)

!     LOCAL VARAIBLES:
!       LEVEL    LEVEL INDEX.
!       LEVOFF   LEVEL INDEX OFFSET BY LAYDIM.
!       IEXT     EXTINCTION SPECIES INDEX.
!       IWVSAP   SPECTRAL GRID INDEX FOR SPECTRAL AEROSOL PROFILES.
      INTEGER LEVEL,LEVOFF,IEXT,IWVSAP

!     INITIALIZE ARRAYS:
      IF(LSAP)THEN
          IF(ILOS.EQ.1)THEN
              DO IWVSAP=1,NWVSAP
                  XSAP(IWVSAP,0,1)=0.
                  ASAP(IWVSAP,0,1)=0.
              ENDDO
              DO LEVEL=1,LAYDIM
                  LEVOFF=LEVEL+LAYDIM
                  DO IEXT=0,MEXT
                      WPTH(IEXT,LEVEL,1)=0.
                      WPTH(IEXT,LEVOFF,1)=0.
                      WSPTH(IEXT,LEVEL,1)=0.
                      WSPTH(IEXT,LEVOFF,1)=0.
                      WPTHMS(IEXT,LEVEL)=0.
                      WSPTHM(IEXT,LEVEL)=0.
                  ENDDO
                  DO IWVSAP=1,NWVSAP
                      XSAP(IWVSAP,LEVEL,1)=0.
                      XSAP(IWVSAP,LEVOFF,1)=0.
                      XSAPM(IWVSAP,LEVEL)=0.
                      ASAP(IWVSAP,LEVEL,1)=0.
                      ASAP(IWVSAP,LEVOFF,1)=0.
                      ASAPM(IWVSAP,LEVEL)=0.
                      XSAPS(IWVSAP,LEVEL,1)=0.
                      XSAPS(IWVSAP,LEVOFF,1)=0.
                      XSAPSM(IWVSAP,LEVEL)=0.
                      ASAPS(IWVSAP,LEVEL,1)=0.
                      ASAPS(IWVSAP,LEVOFF,1)=0.
                      ASAPSM(IWVSAP,LEVEL)=0.
                  ENDDO
              ENDDO
          ELSE
              DO IWVSAP=1,NWVSAP
                  XSAP(IWVSAP,0,ILOS)=0.
                  ASAP(IWVSAP,0,ILOS)=0.
              ENDDO
              DO LEVEL=1,LAYDIM
                  LEVOFF=LEVEL+LAYDIM
                  DO IEXT=0,MEXT
                      WPTH(IEXT,LEVEL,ILOS)=0.
                      WPTH(IEXT,LEVOFF,ILOS)=0.
                      WSPTH(IEXT,LEVEL,ILOS)=0.
                      WSPTH(IEXT,LEVOFF,ILOS)=0.
                  ENDDO
                  DO IWVSAP=1,NWVSAP
                      XSAP(IWVSAP,LEVEL,ILOS)=0.
                      XSAP(IWVSAP,LEVOFF,ILOS)=0.
                      ASAP(IWVSAP,LEVEL,ILOS)=0.
                      ASAP(IWVSAP,LEVOFF,ILOS)=0.
                      XSAPS(IWVSAP,LEVEL,ILOS)=0.
                      XSAPS(IWVSAP,LEVOFF,ILOS)=0.
                      ASAPS(IWVSAP,LEVEL,ILOS)=0.
                      ASAPS(IWVSAP,LEVOFF,ILOS)=0.
                  ENDDO
              ENDDO
          ENDIF
      ELSEIF(ILOS.EQ.1)THEN
          DO LEVEL=1,LAYDIM
              LEVOFF=LEVEL+LAYDIM
              DO IEXT=0,MEXT
                  WPTH(IEXT,LEVEL,1)=0.
                  WPTH(IEXT,LEVOFF,1)=0.
                  WSPTH(IEXT,LEVEL,1)=0.
                  WSPTH(IEXT,LEVOFF,1)=0.
                  WPTHMS(IEXT,LEVEL)=0.
                  WSPTHM(IEXT,LEVEL)=0.
              ENDDO
          ENDDO
      ELSE
          DO LEVEL=1,LAYDIM
              LEVOFF=LEVEL+LAYDIM
              DO IEXT=0,MEXT
                  WPTH(IEXT,LEVEL,ILOS)=0.
                  WPTH(IEXT,LEVOFF,ILOS)=0.
                  WSPTH(IEXT,LEVEL,ILOS)=0.
                  WSPTH(IEXT,LEVOFF,ILOS)=0.
              ENDDO
          ENDDO
      ENDIF

      RETURN
      END
