      SUBROUTINE SPCFLX(NO_WRT)

!     SPCFLX WRITES OUT SPECTRAL FLUX, DEGRADED WITH
!     A TRIANGULAR SLIT FUNCTION, TO UNIT IFLUX.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       NO_WRT   OUTPUT FLAG FOR SPECTRAL DATA AT CURRENT FREQUENCY.
      LOGICAL NO_WRT

!     COMMONS:
      INCLUDE 'IFIL.h'
      INCLUDE 'BMHEAD.h'

!     /WTFLX/
!       UPDIFF   LEVEL UPWARD DIFFUSE SPECTRAL FLUX [W CM-2 / CM-1].
!       DNDIFF   LEVEL DOWNWARD DIFFUSE SPECTRAL FLUX [W CM-2 / CM-1].
!       DNDRCT   LEVEL DIRECT SOLAR SPECTRAL FLUX [W CM-2 / CM-1].
!       SMUPDF   LAYER BOUNDARY UPWARD DIFFUSE IN-BAND FLUX [W CM-2].
!       SMDNDF   LAYER BOUNDARY DOWNWARD DIFFUSE IN-BAND FLUX [W CM-2].
!       SMDNDR   LAYER BOUNDARY DIRECT SOLAR IN-BAND FLUX [W CM-2].
!       NFLUX    SPECTRAL BIN COUNTER FOR FLUX TABLE.
!       NTERMS   NUMBER OF TERMS IN FLUX SPECTRAL SUM.
      DOUBLE PRECISION UPDIFF,DNDIFF,DNDRCT,SMUPDF,SMDNDF,SMDNDR
      INTEGER NFLUX,NTERMS
      COMMON/WTFLX/UPDIFF(1:LAYDIM,-1:MWGT),DNDIFF(1:LAYDIM,-1:MWGT),   &
     &  DNDRCT(1:LAYDIM,-1:MWGT),SMUPDF(LAYDIM),SMDNDF(LAYDIM),         &
     &  SMDNDR(LAYDIM),NFLUX,NTERMS

!     /WTFLXC/
!        FRMT    FORMAT USED IN FLUX TABLE.
      CHARACTER FRMT*50
      COMMON/WTFLXC/FRMT

!     /CARD4/
!       IV1      LOWEST SPECTRAL FREQUENCY OUTPUT [CM-1].
!       IV2      HIGHEST SPECTRAL FREQUENCY OUTPUT [CM-1].
!       IDV      PRINTOUT SPECTRAL FREQUENCY STEP SIZE [CM-1].
!       IFWHM    TRIANGULAR SLIT FULL-WIDTH-HALF-MAXIMUM [CM-1].
!       VBAND    CURRENT COMPUTATION BAND FREQUENCY [CM-1].
!                (EQUALS BAND CENTER FOR 1, 5 & 15 CM-1 BAND MODELS;
!                EQUALS THE MINIMUM BAND VALUE FOR 0.1 CM-1 BAND MODEL)
!       IBINPT   BIN NUMBER OF CURRENT SPECTRAL POINT.
!                (CENTER FREQUENCY = IBINPT * BNDWID + OSHIFT).
!       IBINLO   BIN NUMBER OF (PADDED) SPECTRAL RANGE LOWER BOUND.
!       IBINHI   BIN NUMBER OF (PADDED) SPECTRAL RANGE UPPER BOUND.
!       IBINMN   BIN NUMBER OF MINIMUM COMPUTATION SPECTRAL POINT.
!       IBINMX   BIN NUMBER OF MAXIMUM COMPUTATION SPECTRAL POINT.
!       IBINDL   BIN NUMBER INCREMENT FOR SPECTRAL PRINTOUT.
!       IBINRS   BIN NUMBER INCREMENT EQUAL TO SPECTRAL RESOLUTION.
!       IBINOS   BIN NUMBER OFFSET BETWEEN CURRENT & OUTPUT SPC POINTS.
!       IBINWR   BIN NUMBER OF NEXT SPECTRAL DATA WRITE.
!       MBINPT   BIN NUMBER MAXIMUM FOR CURRENT BAND MODEL RESOLUTION.
!       IDBIN5   SPECTRAL BIN NUMBER STEP SIZE FOR 5 CM-1 GRID.
!       ISTEP5   INCREMENT FOR RETRIEVING 5 CM-1 RESOLUTION DATA [CM-1].
!       NSPCDT   NUMBER OF OUTPUT SPECTRAL DATA POINTS.
      DOUBLE PRECISION IDV
      REAL IV1,IV2,IFWHM,VBAND
      INTEGER IBINPT,IBINLO,IBINHI,IBINMN,IBINMX,IBINDL,                &
     &  IBINRS,IBINOS,IBINWR,MBINPT,IDBIN5,ISTEP5,NSPCDT
      COMMON/CARD4/IDV,IV1,IV2,IFWHM,VBAND,IBINPT,IBINLO,IBINHI,IBINMN, &
     &  IBINMX,IBINDL,IBINRS,IBINOS,IBINWR,MBINPT,IDBIN5,ISTEP5,NSPCDT

!     /CNTRL/
!       NSEG     NUMBER OF PATH SEGMENTS ALONG LINE-OF-SIGHT.
!       ML       NUMBER OF ATMOSPHERIC PROFILE LEVELS.
!       MLFLX    NUMBER OF LEVELS FOR WHICH FLUX VALUES ARE WRITTEN.
!       IMULT    MULTIPLE SCATTERING FLAG
!                  (0=NONE, 1=AT SENSOR, -1=AT FINAL OR TANGENT POINT).
!       THERML   FLAG TO CALCULATE THERMAL SCATTER.
      INTEGER NSEG,ML,MLFLX,IMULT
      LOGICAL THERML
      COMMON/CNTRL/NSEG(0:MLOSP1),ML,MLFLX,IMULT,THERML

!     /CFLAGS/
!       YFLAG    Y COORDINATE FLAG FOR PLOT.DAT FILE
!                  = "T" FOR TRANSMITTANCE
!                  = "R" FOR RADIANCE (IRRADIANCE FOR IEMSCT=3)
!                  = "N" FOR NO PLOT.DAT OUTPUT
!       XFLAG    X COORDINATE FLAG FOR PLOT.DAT FILE
!                  = "W" FOR FREQUENCY IN WAVENUMBERS (CM-1) AND
!                        RADIANCE IN W SR-1 CM-2 / CM-1
!                  = "M" FOR WAVELENGTH IN MICRONS AND
!                        RADIANCE IN W SR-1 CM-2 / MICRON
!                  = "N" FOR WAVELENGTH IN NANOMETERS AND
!                        RADIANCE IN MICRO-WATTS SR-1 CM-2 / NANOMETER
!       DLIMIT   DELIMITER CHARACTER STRING BETWEEN MODTRAN RUNS
!       FLAGS    SCANNING FUNCTION FLAGS.
      CHARACTER YFLAG*1,XFLAG*1,DLIMIT*8,FLAGS*7
      COMMON/CFLAGS/YFLAG,XFLAG,DLIMIT,FLAGS

!     /CSCAN/
!       CHUNIT   UNIT FLAG ('W'=WAVENUMBERS;'M'=MICRONS;'N'=NANOMETERS).
!       RELABS   SPECTRAL RESOLUTION FLAG('A'=ABSOLUTE;'R'=RELATIVE[%]).
!       LNFEED   LINE FEED FLAG FOR .FLX FILE ('T' FOR 80 CHARACTER
!                  LINES, 'F' FOR LONG LINES, ' ' FOR NO .FLX FILE).
      CHARACTER CHUNIT*1,RELABS*1,LNFEED*1
      COMMON/CSCAN/CHUNIT,RELABS,LNFEED

!     /TRIANG/
!       NWGT     NUMBER OF SPECTRAL BINS CONTRIBUTING TO SLIT FUNCTION.
!       IBIN0    SPECTRAL BIN OFFSET (1 FOR .2 BAND MODEL, 0 OTHERWISE).
!       WNORM    TRIANGULAR SLIT FUNCTION NORMALIZATION FACTOR.
!       WGT      NORMALIZED WEIGHTS USED TO DEFINE THE SLIT FUNCTION.
      INTEGER NWGT,IBIN0
      REAL WNORM,WGT
      COMMON/TRIANG/NWGT,IBIN0,WNORM,WGT(0:MWGT)
      SAVE /TRIANG/

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     LOCAL VARIABLES:
!       IK      LAYER INDEX.
!       IWGT    SPECTRAL INDEX FOR SLIT FUNCTION.
!       IWGTM1  PREVIOUS SPECTRAL INDEX FOR SLIT FUNCTION.
!       V       OUTPUT FREQUENCY [CM-1].
!       WAVLEN  OUTPUT WAVELENGTH [NM OR MICRONS].
!       CONV    SPECTRAL FLUX FREQUENCY TO WAVELENGTH CONVERSION FACTOR.
      INTEGER IK,IWGT,IWGTM1
      DOUBLE PRECISION V,WAVLEN,CONV

      IF(NFLUX.LT.NWGT)THEN
          NFLUX=NFLUX+1

!     SKIP FLUX CALCULATION IF LNFEED IS BLANK:
      ELSEIF(LNFEED.NE.' ')THEN

!         LAYER LOOP FIRST:
          DO IK=1,ML

!             INITIALIZE OUTPUT ARRAYS WITH WEIGHTED FIRST VALUE:
              UPDIFF(IK,-1)=DBLE(WGT(0))*UPDIFF(IK,0)
              DNDIFF(IK,-1)=DBLE(WGT(0))*DNDIFF(IK,0)
              DNDRCT(IK,-1)=DBLE(WGT(0))*DNDRCT(IK,0)

!             PASS SLIT FUNCTION OVER REMAINING VALUES
!             AND THEN PUSH VALUES UP ONE INDEX:
              IWGTM1=0
              DO IWGT=1,NWGT
                  UPDIFF(IK,-1)                                         &
     &              =UPDIFF(IK,-1)+DBLE(WGT(IWGT))*UPDIFF(IK,IWGT)
                  DNDIFF(IK,-1)                                         &
     &              =DNDIFF(IK,-1)+DBLE(WGT(IWGT))*DNDIFF(IK,IWGT)
                  DNDRCT(IK,-1)                                         &
     &              =DNDRCT(IK,-1)+DBLE(WGT(IWGT))*DNDRCT(IK,IWGT)
                  UPDIFF(IK,IWGTM1)=UPDIFF(IK,IWGT)
                  DNDIFF(IK,IWGTM1)=DNDIFF(IK,IWGT)
                  DNDRCT(IK,IWGTM1)=DNDRCT(IK,IWGT)
                  IWGTM1=IWGT
              ENDDO

!             SUM SPECTRAL FLUXES:
              IF(.NOT.NO_WRT)THEN
                  SMUPDF(IK)=SMUPDF(IK)+UPDIFF(IK,-1)
                  SMDNDF(IK)=SMDNDF(IK)+DNDIFF(IK,-1)
                  SMDNDR(IK)=SMDNDR(IK)+DNDRCT(IK,-1)
              ENDIF

!             INITIALIZE DOWNWARD DIRECT SOLAR FLUX TERM:
              DNDRCT(IK,NWGT)=0.D0
          ENDDO
          IF(NO_WRT)RETURN

!         WRITE FLUX TABLE:

          WRITE(*,*) 'WRITING SMUPDF'
          NTERMS=NTERMS+1
          V=DBLE(VBAND)-IBINOS*DBLE(BNDWID)
          IF(XFLAG.EQ.'W')THEN

!             SPECTRAL FREQUENCY IN WAVENUMBERS:
              IF(BINOUT)THEN
                  CONV=1.D0
                  CALL BNFLX4(CONV,V,UPDIFF(1,-1),DNDIFF(1,-1),         &
     &              DNDRCT(1,-1),LAYDIM,ML,MLFLX)
              ELSE
                  WRITE(IFLUX,FMT=FRMT)V,(UPDIFF(IK,-1),                &
     &              DNDIFF(IK,-1),DNDRCT(IK,-1),IK=1,MLFLX),            &
     &              UPDIFF(ML,-1),DNDIFF(ML,-1),DNDRCT(ML,-1)
              ENDIF
          ELSE

!             WAVELENGTH UNIT:
              IF(XFLAG.EQ.'N')THEN

!                 SPECTRAL WAVELENGTH IN NANOMETERS:
                  WAVLEN=1.D7/V
              ELSE

!                 SPECTRAL WAVELENGTH IN MICRONS:
                  WAVLEN=1.D4/V

              ENDIF
              CONV=V/WAVLEN
              IF(BINOUT)THEN
                  CALL BNFLX4(CONV,WAVLEN,UPDIFF(1,-1),                 &
     &              DNDIFF(1,-1),DNDRCT(1,-1),LAYDIM,ML,MLFLX)
              ELSE
                  WRITE(IFLUX,FMT=FRMT)WAVLEN,(CONV*UPDIFF(IK,-1),CONV* &
     &              DNDIFF(IK,-1),CONV*DNDRCT(IK,-1),IK=1,MLFLX),CONV*  &
     &              UPDIFF(ML,-1),CONV*DNDIFF(ML,-1),CONV*DNDRCT(ML,-1)
              ENDIF
          ENDIF
      ENDIF
      RETURN
      END
