      SUBROUTINE MCCONT(VCEN,IK,IKMAX,NMWAVE)

!     MCCONT WRITES OUT CONTINUUM DATA FOR MONTE-CARLO SIMULATIONS.
!     EITHER BAND MODEL RESOLUTION OR 1 NANOMETER SPECTRAL BINS.
!     IN EITHER CASE, INTEGRATIONS ARE OVER SPECTRAL FREQUENCY.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       VCEN     SPECTRAL BAND CENTER FREQUENCY [CM-1].
!       IK       PATH SEGMENT INDEX.
!       IKMAX    NUMBER OF PATH SEGMENTS.
!       NMWAVE   WAVELENGTH BIN OF PREVIOUS DATA [NM].

!     OUTPUT ARGUMENTS:
!       NMWAVE   WAVELENGTH BIN OF CURRENT DATA [NM].
      REAL VCEN,TMP(10)
      INTEGER IK,IKMAX,NMWAVE

!     COMMONS:
      INCLUDE 'IFIL.h'
      INCLUDE 'BMHEAD.h'

!     /JM5/
!       IRPT     REPEAT INPUT FLAG (0=NONE, 1=ALL, 3=GEOM, 4=SPEC).
!       IFAC     CURRENT COLUMN SCALING FACTOR INDEX.
!       NFACMN   NUMBER OF COLUMN SCALING FACTOR LESS THAN 1.
!       NFACMX   NUMBER OF COLUMN SCALING FACTOR GREATER THAN 1.
!       FACMC    CURRENT COLUMN SCALING FACTOR.
!       SCALMN   MINIMUM COLUMN SCALING FACTOR.
!       SCALMX   MAXIMUM COLUMN SCALING FACTOR.
!       LBMRES   LOGICAL FLAG, .TRUE. FOR BAND MODEL AND .FALSE.
!                FOR 1 NM SPECTRAL RESOLUTION OUTPUT.
      INTEGER IRPT,IFAC,NFACMN,NFACMX
      REAL FACMC
      DOUBLE PRECISION SCALMN,SCALMX
      LOGICAL LBMRES
      COMMON/JM5/SCALMN,SCALMX,IRPT,IFAC,NFACMN,NFACMX,FACMC,LBMRES

!     /BASE/
!         TX ARRAY
!           1  AEROSOL SCATTERING DEPTH WEIGHTED ASYMMETRY PARAMETER.
!           2  INCREMENTAL AEROSOL SCATTERING OPTICAL DEPTH.
!           3  TOTAL O2 CONTINUUM TRANSMITTANCE.
!           4  N2 CONTINUUM TRANSMITTANCE.
!           5  TOTAL H2O CONTINUUM TRANSMITTANCE.
!           6  RAYLEIGH MOLECULAR SCATTERED TRANSMITTANCE.
!           7  AEROSOL EXTINCTION.
!           8  TOTAL OZONE CONTINUUM TRANSMITTANCE.
!           9  PRODUCT OF ALL CONTINUUM TRANSMITTANCES EXCEPT O2 & HNO3.
!          10  AEROSOL ABSORPTION.
!          11  HNO3 TRANSMITTANCE.
!          12  MOLECULAR CONTINUUM OPTICAL DEPTH.
!          13  INCREMENTAL AEROSOL EXTINCTION OPTICAL DEPTH.
!          14  TOTAL CONTINUUM OPTICAL DEPTH.
!          15  LAYER RAYLEIGH MOLECULAR SCATTERING OPTICAL DEPTH.
!          16  CIRRUS CLOUD TRANSMITTANCE (ICLD=20 ONLY).
!          64  UV/VIS NO2 TRANSMITTANCE.
!          65  UV/VIS SO2 TRANSMITTANCE.
!          66  INCREMENTAL WATER DROPLET SCATTERING OPTICAL DEPTH.
!          67  INCREMENTAL ICE PARTICLE SCATTERING OPTICAL DEPTH.
!          74  INCREMENTAL STD/SUB-VIS CIRRUS SCATTERING OPTICAL DEPTH.
!          75  INCREMENTAL CLOUD (WATER+ICE) EXTINCTION OPTICAL DEPTH.
!          76  CLOUD ASYMMETRY PARAMETER WEIGHTED BY SCATTERING DEPTH.
!          77  INCREMENTAL RAIN EXTINCTION OPTICAL DEPTH
!          78  INCREMENTAL RAIN SCATTERING OPTICAL DEPTH
!          79  INCREMENTAL RAIN ASYMMETRY PARAMETER.
!          --  MOLECULAR LINE CENTER TRANSMITTANCE  --
!          17=H2O  36=CO2  31=O3   47=N2O  44=CO   46=CH4
!          50=O2   54=NO   56=SO2  55=NO2  52=NH3  11=HNO3
      INCLUDE 'BASE.h'

!     /PATH/
!       PTHCOS   COSINE OF PATH ZENITH AT PATH BOUNDARIES.
!       PTHZEN   PATH ZENITH AT PATH BOUNDARIES [DEG].
!       PTHECA   SENSOR TO PATH EARTH CENTER ANGLE [DEG].
!       PTHALT   ALTITUDES AT PATH BOUNDARIES [KM].
!       PTH_MS   ALTITUDES AT PATH BOUNDARIES FOR THE MS PATH.
!       PTHSEG   PATH SEGMENT LENGTH [KM].
!       PTHRNG   SENSOR TO PATH BOUNDARY RANGE [KM].
!       JMAX     NUMBER OF DISTINCT LOS PATH SEGMENT ENDPOINT ALTITUDES.
!       IKHMIN   PATH BOUNDARY INDEX OF PATH MINIMUM ALTITUDE.
!       IKHMAX   PATH BOUNDARY INDEX OF PATH MAXIMUM ALTITUDE.
!       IKOUT    NUMBER OF PATH BOUNDARIES K DATA IS OUTPUT.
!       NTKDIS   RECORD NUMBER FOR K-DISTRIBUTION TRANSMITTANCE FILE.
!       NRKDIS   RECORD NUMBER FOR K-DISTRIBUTION RADIANCE FILE.
!       MAPPTH   MAPPING FROM PATH SEGMENT MIDPOINT TO VERTICAL LAYER.
!       IPTHHT   ALTITUDES (HEIGHTS) AT PATH BOUNDARIES [M].
!       LOWALT   VERTICAL LAYER BOUNDARY INDEX AT OR JUST BELOW PTHALT.
!       FACALT   ALTITUDE INTERPOLATION FRACTION FOR PTHALT
!       PATH_T   TEMPERATURE AT PATH BOUNDARIES [K].
!       PATH_P   PRESSURE AT PATH BOUNDARIES [ATM].
!       PTHRH    RELATIVE HUMIDITY AT PATH BOUNDARIES [K].
!       LSSGEO   LOGICAL FLAG, .TRUE. FOR SOLAR PATHS.
!       LTANMX   LOGICAL FLAG, .TRUE. IF PATH HAS A TANGENT MAXIMUM.
      DOUBLE PRECISION PTHCOS,PTHZEN,PTHECA,PTHALT,PTH_MS,PTHSEG,PTHRNG
      INTEGER JMAX,IKHMIN,IKHMAX,IKOUT,NTKDIS,NRKDIS,MAPPTH,            &
     &  IPTHHT,LOWALT
      REAL FACALT,PATH_T,PATH_P,PTHRH
      LOGICAL LSSGEO,LTANMX
      COMMON/PATH/PTHCOS(0:LAYTWO),PTHZEN(0:LAYTWO),PTHECA(0:LAYTWO),   &
     &  PTHALT(0:LAYTWO,1:MLOS),PTH_MS(0:LAYDIM),PTHSEG(LAYTWO),        &
     &  PTHRNG(0:LAYTWO,1:MLOS),JMAX,IKHMIN(MLOS),IKHMAX(MLOS),         &
     &  IKOUT(MLOS),MAPPTH(LAYTWO,1:MLOS),IPTHHT(0:LAYTWO),NTKDIS,      &
     &  NRKDIS,LOWALT(0:LAYTWO,1:MLOS),FACALT(0:LAYTWO,1:MLOS),         &
     &  PATH_T(0:LAYTWO,1:MLOS),PATH_P(0:LAYTWO,1:MLOS),                &
     &  PTHRH(0:LAYTWO,1:MLOS),LSSGEO,LTANMX

!     LOCAL VARIABLES:
!       NM       CURRENT WAVELENGTH [NM].
      INTEGER NM,I,J

!     SAVED VARIABLES:
!       WT       SPECTRAL BIN NORMALIZATION.
!       DWTBEG   BEGINNING (SHORTER WAVELENGTH) SPECTRAL BIN WEIGHT.
!       DWTEND   ENDING (LONGER WAVELENGTH) SPECTRAL BIN WEIGHT.
!       SMOL     RAYLEIGH SCATTERING PATH SEGMENT OPTICAL DEPTH.
!       SAER     AEROSOL SCATTERING PATH SEGMENT OPTICAL DEPTH.
!       XAER     AEROSOL EXTINCTION PATH SEGMENT OPTICAL DEPTH.
!       GAER     AEROSOL SCATTERING ASYMMETRY FACTOR.
!       SCLD     CLOUD SCATTERING PATH SEGMENT OPTICAL DEPTH.
!       XCLD     CLOUD EXTINCTION PATH SEGMENT OPTICAL DEPTH.
!       GCLD     CLOUD SCATTERING ASYMMETRY FACTOR.
!       SRAIN    RAIN SCATTERING PATH SEGMENT OPTICAL DEPTH.
!       XRAIN    RAIN EXTINCTION PATH SEGMENT OPTICAL DEPTH.
!       GRAIN    RAIN SCATTERING ASYMMETRY FACTOR.
!       CONTDT   FINAL CONTINUUM OPTICAL DEPTH & ASYMMETRY FACTOR DATA.
      INTEGER IREC
      REAL WT,DWTBEG,DWTEND,CONTDT(0:9,1:LAYTWO),                       &
     &  SMOL(LAYTWO), SAER(LAYTWO),  XAER(LAYTWO),  GAER(LAYTWO),       &
     &                SCLD(LAYTWO),  XCLD(LAYTWO),  GCLD(LAYTWO),       &
     &                SRAIN(LAYTWO), XRAIN(LAYTWO), GRAIN(LAYTWO)
      SAVE IREC,WT,DWTBEG,DWTEND,CONTDT,                                &
     &  SMOL,SAER,XAER,GAER,SCLD,XCLD,GCLD,SRAIN,XRAIN,GRAIN
      IF(LBMRES)THEN

!         BAND MODEL RESOLUTION:
          CONTDT(0,IK)=TX(15)
          CONTDT(1,IK)=TX(2)
          CONTDT(2,IK)=TX(13)
          IF(TX(2).GT.0.)THEN
              CONTDT(3,IK)=TX(1)/TX(2)
          ELSE
              CONTDT(3,IK)=0.
          ENDIF
          SCLD(IK)=TX(66)+TX(67)+TX(74)
          CONTDT(4,IK)=SCLD(IK)
          CONTDT(5,IK)=TX(75)
          IF(SCLD(IK).GT.0.)THEN
              CONTDT(6,IK)=TX(76)/SCLD(IK)
          ELSE
              CONTDT(6,IK)=0.
          ENDIF
          CONTDT(7,IK)=TX(78)
          CONTDT(8,IK)=TX(77)
          CONTDT(9,IK)=TX(79)
          IF(IK.LT.IKMAX)RETURN

!         NMWAVE IS USED AS THE RECORD INDEX:
          NMWAVE=NMWAVE+1

!         WRITE THE FIRST RECORD TO .TP8
          IF(NMWAVE.EQ.1)THEN
              IF(BINOUT)THEN
                  CALL BNWT4A(111,IPTHHT(0),NMWAVE,VCEN)
                  DO J=1,IKMAX
                      DO I=1,10
                          TMP(I)=CONTDT(I-1,J)
                      ENDDO
                      CALL BNWT2(IPTHHT(J),TMP)
                  ENDDO
              ELSE
                  WRITE(IPR1,'(/A,F9.2,A,/2A,/I6,                       &
     &              /(I6,1X,1P,E13.7,3(2(1X,1P,E13.7),1X,0P,F7.5)))')   &
     &              'FIRST RECORD OF *.mch FILE (',VCEN,' CM-1):',      &
     &              'ALT(M)      MOL_SCAT      AER_SCAT       AER_EXT'  &
     &              //'   AER_G      CLD_SCAT       CLD_EXT   CLD_G',   &
     &                         '     RAIN_SCAT      RAIN_EXT  RAIN_G',  &
     &              IPTHHT(0),(IPTHHT(J),(CONTDT(I,J),I=0,9),J=1,IKMAX)
             ENDIF
          ENDIF
          WRITE(IDBOUT,REC=NMWAVE)((CONTDT(I,J),I=0,9),J=1,IKMAX)
          RETURN
      ENDIF

!     NANOMETER RESOLUTION:
      NM=NINT(1.E7/(VCEN+HBNDWD))
      IF(NMWAVE.EQ.NM)THEN

!         BAND MODEL DATA COMPLETELY WITHIN NM BIN.  INCREMENT & RETURN:
          SMOL(IK)=SMOL(IK)+TX(15)
          SAER(IK)=SAER(IK)+TX(2)
          XAER(IK)=XAER(IK)+TX(13)
          GAER(IK)=GAER(IK)+TX(1)
          SCLD(IK)=SCLD(IK)+TX(66)+TX(67)+TX(74)
          XCLD(IK)=XCLD(IK)+TX(75)
          GCLD(IK)=GCLD(IK)+TX(76)
          SRAIN(IK)=SRAIN(IK)+TX(78)
          XRAIN(IK)=XRAIN(IK)+TX(77)
          GRAIN(IK)=GRAIN(IK)+TX(79)
          IF(IK.EQ.IKMAX)WT=WT+1
          RETURN

!     IS THIS THE INITIATION OF THE FIRST NM BIN (I.E., DOES NMWAVE=0)?
      ELSEIF(NMWAVE.EQ.0)THEN

!         RETURN IF THE NM BIN DOESN'T BEGIN WITHIN THIS BAND MODEL BIN.
          IF(NINT(1.E7/(VCEN-HBNDWD)).EQ.NM)RETURN

!         WHAT FRACTION OF THE BAND MODEL BIN OVERLAPS WITH THE NM BIN?
          IF(IK.EQ.1)THEN

!             INITIALIZE WEIGHTS:
              DWTBEG=(VCEN-1.E7/(NM+.5))/BNDWID+.5
              WT=DWTBEG
          ENDIF
          IF(IK.EQ.IKMAX)THEN

!             PREPARE FOR NEXT BAND MODEL BIN:
              IREC=0
              NMWAVE=NM
          ENDIF
      ELSEIF(NM+1.NE.NMWAVE)THEN

!         A NM BIN HAS BEEN COMPLETELY SKIPPED:
          STOP 'Error in MCCONT:  Band model data is too coarse.'
      ELSE
!         WHAT FRACTION OF THE BAND MODEL BIN OVERLAPS WITH OLD NM BIN?
          IF(IK.EQ.1)THEN
             DWTBEG=(VCEN-1.E7/(NM+.5))/BNDWID+.5
             DWTEND=1-DWTBEG
             WT=WT+DWTEND
          ENDIF
          CONTDT(0,IK)=(SMOL(IK)+DWTEND*TX(15))/WT
          SAER(IK)=SAER(IK)+DWTEND*TX(2)
          CONTDT(1,IK)=SAER(IK)/WT
          CONTDT(2,IK)=(XAER(IK)+DWTEND*TX(13))/WT
          IF(SAER(IK).GT.0.)THEN
             CONTDT(3,IK)=(GAER(IK)+DWTEND*TX(1))/SAER(IK)
          ELSE
             CONTDT(3,IK)=0.
          ENDIF
          SCLD(IK)=SCLD(IK)+DWTEND*(TX(66)+TX(67)+TX(74))
          CONTDT(4,IK)=SCLD(IK)/WT
          CONTDT(5,IK)=(XCLD(IK)+DWTEND*TX(75))/WT
          IF(SCLD(IK).GT.0.)THEN
             CONTDT(6,IK)=(GCLD(IK)+DWTEND*TX(76))/SCLD(IK)
          ELSE
             CONTDT(6,IK)=0.
          ENDIF
          CONTDT(7,IK)=(SRAIN(IK)+DWTEND*TX(78))/WT
          CONTDT(8,IK)=(XRAIN(IK)+DWTEND*TX(77))/WT
          CONTDT(9,IK)=(GRAIN(IK)+DWTEND*TX(79))/WT
          IF(IK.EQ.IKMAX)THEN
              IF(IREC.EQ.0)THEN
                  IREC=1
                  IF(BINOUT)THEN
                      CALL BNWT4A(112,IPTHHT(0),NMWAVE,VCEN)
                      DO J=1,IKMAX
                          DO I=1,10
                              TMP(I)=CONTDT(I-1,J)
                          ENDDO
                          CALL BNWT2(IPTHHT(J),TMP)
                      ENDDO
                  ELSE
                      WRITE(IPR1,'(/A,I9,A,/2A,/I6,/(I6,1X,1P,E13.7,    &
     &                  3(2(1X,1P,E13.7),1X,0P,F7.5)))')'FIRST RECORD'  &
     &                  //' OF *.mch FILE (',NMWAVE,' NM):','ALT(M)   ' &
     &                  //'   MOL_SCAT      AER_SCAT       AER_EXT   ', &
     &                  'AER_G      CLD_SCAT       CLD_EXT   CLD_G    ' &
     &                  //' RAIN_SCAT      RAIN_EXT  RAIN_G',IPTHHT(0), &
     &                  (IPTHHT(J),(CONTDT(I,J),I=0,9),J=1,IKMAX)
                  ENDIF
              ELSE
                  IREC=IREC+1
              ENDIF
              WRITE(IDBOUT,REC=IREC)((CONTDT(I,J),I=0,9),J=1,IKMAX)
              WT=DWTBEG
              NMWAVE=NM
          ENDIF
      ENDIF
      SMOL(IK)=DWTBEG*TX(15)
      SAER(IK)=DWTBEG*TX(2)
      XAER(IK)=DWTBEG*TX(13)
      GAER(IK)=DWTBEG*TX(1)
      SCLD(IK)=DWTBEG*(TX(66)+TX(67)+TX(74))
      XCLD(IK)=DWTBEG*TX(75)
      GCLD(IK)=DWTBEG*TX(76)
      SRAIN(IK)=DWTBEG*TX(78)
      XRAIN(IK)=DWTBEG*TX(77)
      GRAIN(IK)=DWTBEG*TX(79)
      RETURN
      END
