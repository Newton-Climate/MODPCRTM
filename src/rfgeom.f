      SUBROUTINE RFGEOM(DPRE,ZLO,ZUP,CPATH,RSCLHT,GAMMA0,               &
     &  SINPTH,COSPTH,DHRANG,BEND)

!     RFGEOM PERFORMS PATH SEGMENT REFRACTIVE GEOMETRY CALCULATIONS:
      IMPLICIT NONE

!     PARAMETERS:
      DOUBLE PRECISION EPSILN,DELTAS
      PARAMETER(EPSILN=1.D-5,DELTAS=5.D0)

!     INPUT ARGUMENTS:
!       DPRE     RADIUS OF THE EARTH [KM].
!       ZLO      LOWER ALTITUDE LEVEL [KM].
!       ZUP      UPPER ALTITUDE LEVEL [KM].
!       CPATH    REFRACTIVE PATH CONSTANT [KM].
!       RSCLHT   RECIPROCAL OF THE REFRACTIVITY SCALE HEIGHT [KM-1].
!       GAMMA0   REFRACTIVITY EXTRAPOLATED DOWN TO 0 KM ALTITUDE.
      DOUBLE PRECISION DPRE,ZLO,ZUP,CPATH,RSCLHT,GAMMA0

!     OUTPUT ARGUMENTS:
!       SINPTH   SINE OF PATH ZENITH ANGLE AT PATH BOUNDARIES.
!       COSPTH   COSINE OF PATH ZENITH ANGLE AT PATH BOUNDARIES.
      DOUBLE PRECISION SINPTH,COSPTH,DHRANG,BEND

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /LSTART/
!       TOLABS   OUTPUT WARNING THRESHOLD FOR EXCESS ABSORPTION.
!       LLORMN   OUTPUT WARNING FLAG FOR SMALL LORENTZ HALF WIDTH.
!       LLORMX   OUTPUT WARNING FLAG FOR LARGE LORENTZ HALF WIDTH.
!       LDOPMN   OUTPUT WARNING FLAG FOR SMALL DOPPLER HALF WIDTH.
!       LDOPMX   OUTPUT WARNING FLAG FOR LARGE DOPPLER HALF WIDTH.
!       LLINMN   OUTPUT WARNING FLAG FOR SMALL EFFECTIVE LINE NUMBER.
!       LSSA     OUTPUT WARNING FLAG FOR SCATTERING ALBEDO NEAR 1.
!       LAEREX   OUTPUT WARNING FLAG FOR ROUTINE AEREXT.
!       LBMCRK   OUTPUT WARNING FLAG FOR ROUTINE BMCRKS.
!       LFLUXS   OUTPUT WARNING FLAG FOR ROUTINE FLUXES.
!       LSSRAD   OUTPUT WARNING FLAG FOR ROUTINE SSRAD.
!       LTRLAY   OUTPUT WARNING FLAG FOR ROUTINE TRLAY.
!       LNVERS   OUTPUT WARNING FLAG FOR ROUTINE DENFAC.
!       LGEOM    OUTPUT WARNING FLAG FOR INDEX OF REFRACTION GRADIENT.
!       LO3TRN   OUTPUT WARNING FLAG FOR OZONE CURTIS-GODSON PROBLEM.
      REAL TOLABS
      LOGICAL LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,                  &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      COMMON/LSTART/TOLABS,LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,     &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      SAVE /LSTART/

!     LOCAL VARIABLES:
!       LAST     LOGICAL FLAG, .TRUE. FOR LAST PATH SUB-SEGMENT.
      DOUBLE PRECISION H1,H2,H3,R1,R2,R3,DHMIN,DH,SNPTH1,SNPTH2,CSPTH1, &
     &  CSPTH2,Y1,Y3,X1,X2,X3,RATIO1,RATIO2,RATIO3,DSDX1,DSDX2,DSDX3,   &
     &  DBNDX1,DBNDX2,DBNDX3,W1,W2,W3,D31,D32,D21,DS,DBEND,RSH,GAM0
      LOGICAL LAST,NORMAL

!     FUNCTIONS:
!       DPRARF   RECIPROCAL OF REFRACTED PATH RADIUS OF CURVATURE.
!       DPANDX   EARTH CENTER DISTANCE AND INDEX OF REFRACTION PRODUCT.
      DOUBLE PRECISION DPANDX,DPRARF

!     INITIALIZE LOOP:
      H1=ZLO
      R1=DPRE+H1
      DHMIN=DELTAS**2/(2*R1)
      DHRANG=0.D0
      BEND=0.D0
      NORMAL=.TRUE.
      RSH=RSCLHT
      GAM0=GAMMA0

!     RE-ENTRY POINT IF GEOMETRY FAILS:
   10 CONTINUE
      SNPTH1=CPATH/DPANDX(R1,H1,RSH,GAM0)
      CSPTH1=SQRT((1-SNPTH1)*(1+SNPTH1))
      Y1=(CSPTH1/2)**2
      Y1=2*Y1*(1+Y1*(1+Y1))
      Y3=0.D0
      X1=R1*CSPTH1
      RATIO1=R1*DPRARF(H1,RSH,GAM0)
      DSDX1=1/(1-RATIO1*SNPTH1**2)
      DBNDX1=DSDX1*SNPTH1*RATIO1/R1

!     LOOP THROUGH PATH.  INTEGRATE PATH QUANTITIES USING
!     QUADRATIC INTEGRATION WITH UNEQUALLY SPACED POINTS.
   20 CONTINUE
      DH=DELTAS*CSPTH1
      IF(DH.LT.DHMIN)DH=DHMIN
      H3=H1+DH
      LAST=H3.GE.ZUP
      IF(LAST)H3=ZUP
      DH=H3-H1
      R3=DPRE+H3
      H2=H1+DH/2
      R2=DPRE+H2
      SNPTH2=CPATH/DPANDX(R2,H2,RSH,GAM0)
      SINPTH=CPATH/DPANDX(R3,H3,RSH,GAM0)
      IF(SNPTH2.GT.1.D0 .OR. SINPTH.GT.1.D0)THEN
          WRITE(IPR,'(/A,/18X,A)')' Error in RFGEOM:  The MODTRAN'//    &
     &      ' Spherical Refractive Geometry routines fail for the',     &
     &      ' given inputs. Path parameters must be entered'//          &
     &      ' explicitly using ITYPE=4'
          IF(.NOT.LGEOM)WRITE(IPR,'(18X,A)')' The failure resulted'     &
     &      //' because of large refractive index gradients.'
          STOP 'Error in Spherical Refractive Geometry Routines.'
      ENDIF
      RATIO2=R2*DPRARF(H2,RSH,GAM0)
      RATIO3=R3*DPRARF(H3,RSH,GAM0)
      IF(1-SNPTH2.LE.EPSILN)THEN

!         NEAR A TANGENT HEIGHT, COSPTH=SQRT(1-SINPTH**2) LOSES
!         PRECISION.  USE THE FOLLOWING ALGORITHM TO GET COSPTH.
          Y3=Y1+(SNPTH1*(1-RATIO1)/R1                                   &
     &        +4*SNPTH2*(1-RATIO2)/R2+SINPTH*(1-RATIO3)/R3)*DH/6
          IF(Y3.GE.0D0)THEN
              COSPTH=SQRT(Y3*(2-Y3))
          ELSE
              Y3=1-SINPTH
              COSPTH=SQRT(Y3*(1+SINPTH))
          ENDIF
          X3=R3*COSPTH
          W1=(X3-X1)/2
          W2=0.D0
          W3=W1
      ELSE
          CSPTH2=SQRT((1-SNPTH2)*(1+SNPTH2))
          COSPTH=SQRT((1-SINPTH)*(1+SINPTH))
          X2=R2*CSPTH2
          X3=R3*COSPTH

!         CALCULATE WEIGHTS.
          IF(X3.EQ.X2 .OR. X2.EQ.X1)THEN
              W1=(X3-X1)/2
              W2=0.D0
              W3=W1
          ELSE
              D31=X3-X1
              D32=X3-X2
              D21=X2-X1
              W1=(2-D32/D21)*D31/6
              W2=D31**3/(D32*D21*6)
              W3=(2-D21/D32)*D31/6
          ENDIF
      ENDIF
      DSDX3=1/(1-RATIO3*SINPTH**2)
      DBNDX3=DSDX3*SINPTH*RATIO3/R3

!     INTEGRATE
      DSDX2=1/(1-RATIO2*SNPTH2**2)
      DBNDX2=DSDX2*SNPTH2*RATIO2/R2
      DBEND=W1*DBNDX1+W2*DBNDX2+W3*DBNDX3
      DS=W1*DSDX1+W2*DSDX2+W3*DSDX3
      IF(.NOT.NORMAL)THEN

!         TRY NEXT SEGMENT WITH REFRACTION:
          NORMAL=.TRUE.
          RSH=RSCLHT
          GAM0=GAMMA0
      ELSEIF(DS.LT..99999D0*DH)THEN

!         PATH LENGTH LESS THAN VERTICAL DISTANCE?
!         TRY AGAIN WITHOUT REFRACTION
          NORMAL=.FALSE.
          RSH=0.D0
          GAM0=0.D0
          GOTO 10
      ENDIF
      DHRANG=DHRANG+DS
      BEND=BEND+DBEND
      IF(LAST)RETURN
      H1=H3
      R1=R3
      SNPTH1=SINPTH
      RATIO1=RATIO3
      Y1=Y3
      CSPTH1=COSPTH
      X1=X3
      DSDX1=DSDX3
      DBNDX1=DBNDX3
      GOTO 20
      END
