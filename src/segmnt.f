      SUBROUTINE SEGMNT(JBEG,JEND,DPRE,DHRANG,COSBEG,COSEND,            &
     &  PPSUM,TPSUM,RHOPSM,AMTPTH,APSAPX,APSAPA)

!     SEGMNT RETURNS COLUMN AMOUNTS THROUGH REFRACTED PATH SEGMENTS.
      IMPLICIT NONE

!     PARAMETERS:
!       GCAIR   GAS CONSTANT FOR AIR [MB/(GM CM-3 K)].
      DOUBLE PRECISION GCAIR
      PARAMETER(GCAIR=2870.53D0)
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       JBEG     INDEX FOR BEGINNING OF REFRACTED PATH SEGMENT.
!       JEND     INDEX FOR END OF REFRACTED PATH SEGMENT.
!       DPRE     EARTH RADIUS [KM].
!       DHRANG   SLANT RANGE OF REFRACTED PATH SEGMENT [KM].
!       COSBEG   COSINE OF PATH ZENITH AT BEGINNING OF PATH SEGMENT.
!       COSEND   COSINE OF PATH ZENITH AT END OF PATH SEGMENT.
      INTEGER JBEG,JEND
      DOUBLE PRECISION DPRE,DHRANG,COSBEG,COSEND

!     OUTPUT ARGUMENTS:
!       PPSUM    DENSITY WEIGHTED PATH SEGMENT AVERAGE PRESSURE [MBAR].
!       TPSUM    DENSITY WEIGHTED PATH SEGMENT AVERAGE TEMPERATURE [K].
!       RHOPSM   REFRACTED PATH SEGMENT COLUMN DENSITY [G/CM3].
!       AMTPTH   PATH SEGMENT COLUMN DENSITIES
!                [UNITS VARY WITH SPECIES BUT OFTEN ATM CM].
!       APSAPX   AEROSOL PATH SEGMENT SPECTRAL EXTINCTION OPTICAL DEPTH.
!       APSAPA   AEROSOL PATH SEGMENT SPECTRAL ABSORPTION OPTICAL DEPTH.
      REAL PPSUM,TPSUM,RHOPSM,AMTPTH(0:*),APSAPX(MWVSAP),APSAPA(MWVSAP)

!     COMMONS:
      INCLUDE 'YPROP.h'

!     /CARD2/
!       IHAZE    BOUNDARY LAYER AEROSOL MODEL NUMBER.
!       ISEASN   SEASON NUMBER (1=SPRING-SUMMER, 2=FALL-WINTER).
!       IVULCN   VOLCANIC AEROSOL MODEL NUMBER.
!       ICSTL    COASTAL AIRMASS MODEL NUMBER.
!       ICLD     CLOUD MODEL NUMBER.
!       IVSA     VERTICAL STRUCTURE ALGORITHM (0=OFF, 1=ON).
!       VIS      SURFACE VISIBILITY (GROUND METEOROLOGICAL RANGE) [KM].
!       WSS      CURRENT WIND SPEED (M/S).
!       WHH      24-HOUR WIND SPEED (M/S).
!       RAINRT   RAIN RATE (MM/HR)
!       LSAP     LOGICAL FLAG FOR SPECTRAL AEROSOL PROFILES INPUT.
      INTEGER IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA
      REAL VIS,WSS,WHH,RAINRT
      LOGICAL LSAP
      COMMON/CARD2/IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,                 &
     &  VIS,WSS,WHH,RAINRT,LSAP

!     /SAP/
!       NWVSAP   NUMBER OF AEROSOL SPECTRAL GRID POINTS.
!       NLGSAP   HIGHEST AEROSOL PHASE FUNCTION LEGENDRE MOMENT.
!       NANSAP   NUMBER OF AEROSOL PHASE FUNCTION ANGULAR POINTS.
!       LEVSAP   NUMBER OF AEROSOL ATMOSPHERIC LEVELS.
!       ANGSAP   AEROSOL PHASE FUNCTION ANGULAR GRID [DEGREES].
!       COSSAP   COSINE OF THE AEROSOL PHASE FUNCTION ANGLES.
!       WAVSAP   AEROSOL SPECTRAL GRID [MICRONS].
!       LEGSAP   AEROSOL LEGENDRE COEFFICIENTS.
!       PFSAP    AEROSOL PHASE FUNCTION [SR-1].
!       LOSSAP   LOGICAL FLAG, TRUE FOR LINE-OF-SIGHT PATH.
      INTEGER NWVSAP,NLGSAP,NANSAP,LEVSAP
      DOUBLE PRECISION ANGSAP,COSSAP,PFSAP
      REAL WAVSAP,LEGSAP
      LOGICAL LOSSAP
      COMMON/SAP/NWVSAP,NLGSAP,NANSAP,LEVSAP,ANGSAP(MANSAP),            &
     &  COSSAP(MANSAP),WAVSAP(MWVSAP),LEGSAP(MLGSAP,MWVSAP,LAYDIM),     &
     &  PFSAP(MANSAP,MWVSAP,LAYDIM),LOSSAP

!     /FILLP/
!       ZP       ALTITUDE AT REFRACTED PATH LEVELS [KM].
!       RANGEP   SEGMENT RANGE [KM].
!       PP       PRESSURE AT REFRACTED PATH LEVELS [MBAR].
!       TP       TEMPERATURE AT REFRACTED PATH LEVELS [K].
!       RHP      RELATIVE HUMIDITY AT REFRACTED PATH LEVELS [%].
!       RFNDXP   REFRACTIVITIES AT REFRACTED PATH LEVELS.
!       DENPTH   ATMOSPHERIC LEVEL DENSITIES
!                [UNITS VARY WITH SPECIES BUT MOST OFTEN ATM CM / KM].
      DOUBLE PRECISION ZP,RANGEP,PP,RFNDXP,DENPTH
      REAL TP,RHP
      COMMON/FILLP/ZP(LAYDM1),RANGEP(LAYDM1),PP(LAYDM1),                &
     &  TP(LAYDM1),RHP(LAYDM1),RFNDXP(LAYDM1),DENPTH(0:MEXTXY,1:LAYDM1)

!     /SAPPTH/
!       BPSAPX   AEROSOL EXTINCTION COEFFICIENTS [KM-1].
!       BPSAPA   AEROSOL ABSORPTION COEFFICIENTS [KM-1].
      DOUBLE PRECISION BPSAPX,BPSAPA
      COMMON/SAPPTH/BPSAPX(MWVSAP,LAYDM1),BPSAPA(MWVSAP,LAYDM1)

!     FUNCTIONS:
!       DENFAC   RETURNS COLUMN DENSITY INTEGRAL.
      DOUBLE PRECISION DENFAC

!     LOCAL VARIABLES:
!       KSPEC    SPECIES LOOP INDEX.
!       IWVSAP   SPECTRAL GRID INDEX FOR SPECTRAL AEROSOL PROFILES.
!       HALFDR   HALF OF DHRANG [KM].
!       ECDBEG   EARTH CENTER DISTANCE AT BEGINNING OF SEGMENT [KM].
!       ECDEND   EARTH CENTER DISTANCE AT END OF SEGMENT [KM].
!       ECDAVG   AVERAGE OF ENDPOINT EARTH CENTER DISTANCES [KM].
!       ACOEF    COEFFICIENT OF LINEAR EXPONENT TERMS.
!       ABEG     LINEAR EXPONENT TERM AT ALTITUDE OF SEGMENT BEGINNING.
!       AEND     LINEAR EXPONENT TERM AT ALTITUDE OF SEGMENT END.
!       B2BEG    QUADRATIC EXPONENT TERM AT SEGMENT BEGINNING ALTITUDE.
!       B2END    QUADRATIC EXPONENT TERM AT SEGMENT END ALTITUDE.
!       RHOBEG   DENSITY OF AIR AT SEGMENT BEGINNING ALTITUDE [G/CM3].
!       RHOEND   DENSITY OF AIR AT SEGMENT END ALTITUDE [G/CM3].
!       RHOLN    NATURAL LOGARITHM OF PATH ENDPOINT AIR DENSITY RATIO.
!       PLN      NATURAL LOGARITHM OF PATH ENDPOINT PRESSURE RATIO.
!       RHOPLN   NATURAL LOGARITHM OF PATH ENDPOINT RATIO
!                OF PRESSURE AND AIR DENSITY PRODUCTS.
!       DENLN    NATURAL LOGARITHM OF ENDPOINT SPECIES DENSITY RATIO.
      INTEGER KSPEC,IWVSAP
      DOUBLE PRECISION HALFDR,ECDBEG,ECDEND,ECDAVG,ACOEF,               &
     &  ABEG,AEND,B2BEG,B2END,RHOBEG,RHOEND,RHOLN,PLN,RHOPLN,DENLN

!     PREPARE FOR COLUMN AMOUNT CALCULATIONS:
      HALFDR=DHRANG/2
      ECDBEG=DPRE+ZP(JBEG)
      ECDEND=DPRE+ZP(JEND)
      ECDAVG=DPRE+(ZP(JBEG)+ZP(JEND))/2
      ACOEF=HALFDR/(2*(ZP(JEND)-ZP(JBEG)))
      ABEG=ACOEF*COSBEG
      AEND=-ACOEF*COSEND
      B2BEG=(HALFDR*COSBEG+ECDAVG)*(.25D0-ABEG)/ECDBEG
      B2END=(HALFDR*COSEND-ECDAVG)*(.25D0+AEND)/ECDEND

!     DETERMINE REFRACTED PATH SEGMENT QUANTITIES:
      RHOBEG=PP(JBEG)/(GCAIR*DBLE(TP(JBEG)))
      RHOEND=PP(JEND)/(GCAIR*DBLE(TP(JEND)))
      RHOLN=LOG(RHOBEG/RHOEND)
      RHOPSM=SNGL(RHOBEG*DENFAC(ABEG,B2BEG,RHOLN)                       &
     &           +RHOEND*DENFAC(AEND,B2END,RHOLN))/2
      PLN=LOG(PP(JBEG)/PP(JEND))
      TPSUM=SNGL((PP(JBEG)*DENFAC(ABEG,B2BEG,PLN)                       &
     &           +PP(JEND)*DENFAC(AEND,B2END,PLN))/GCAIR)/(2*RHOPSM)
      RHOPLN=RHOLN+PLN
      PPSUM=SNGL(RHOBEG*PP(JBEG)*DENFAC(ABEG,B2BEG,RHOPLN)              &
     &          +RHOEND*PP(JEND)*DENFAC(AEND,B2END,RHOPLN))/(2*RHOPSM)

!     DETERMINE REFRACTED PATH SEGMENT SPECIES COLUMN DENSITIES:
      DO KSPEC=0,MEXTX+NMOLY
          IF(DENPTH(KSPEC,JBEG).LE.0.D0 .OR.                            &
     &       DENPTH(KSPEC,JEND).LE.0.D0)THEN

!             AVERAGE DENSITIES IF BOTH ARE NOT POSITIVE:
              AMTPTH(KSPEC)                                             &
     &          =SNGL(HALFDR*(DENPTH(KSPEC,JBEG)+DENPTH(KSPEC,JEND)))
          ELSE

!             COMPUTE CIRCULAR ARC REFRACTED PATH COLUMN DENSITIES:
              DENLN=LOG(DENPTH(KSPEC,JBEG)/DENPTH(KSPEC,JEND))
              AMTPTH(KSPEC)=SNGL(HALFDR*                                &
     &          (DENPTH(KSPEC,JBEG)*DENFAC(ABEG,B2BEG,DENLN)            &
     &          +DENPTH(KSPEC,JEND)*DENFAC(AEND,B2END,DENLN)))
          ENDIF
      ENDDO

!     CHECK FOR SPECTRAL AEROSOL PROFILES OPTION:
      IF(.NOT.LSAP)RETURN

!     DETERMINE REFRACTED PATH SEGMENT SPECTRAL AEROSOL OPTICAL DEPTHS:
      DO IWVSAP=1,NWVSAP
          IF(BPSAPX(IWVSAP,JBEG).LE.0.D0 .OR.                           &
     &       BPSAPX(IWVSAP,JEND).LE.0.D0)THEN

!             AVERAGE EXTINCTION COEFFICIENTS IF BOTH ARE NOT POSITIVE:
              APSAPX(IWVSAP)                                            &
     &          =SNGL(HALFDR*(BPSAPX(IWVSAP,JBEG)+BPSAPX(IWVSAP,JEND)))
          ELSE

!             COMPUTE CIRCULAR ARC REFRACTED PATH OPTICAL DEPTHS:
              DENLN=LOG(BPSAPX(IWVSAP,JBEG)/BPSAPX(IWVSAP,JEND))
              APSAPX(IWVSAP)=SNGL(HALFDR*                               &
     &          (BPSAPX(IWVSAP,JBEG)*DENFAC(ABEG,B2BEG,DENLN)           &
     &          +BPSAPX(IWVSAP,JEND)*DENFAC(AEND,B2END,DENLN)))
          ENDIF
          IF(BPSAPA(IWVSAP,JBEG).LE.0.D0 .OR.                           &
     &       BPSAPA(IWVSAP,JEND).LE.0.D0)THEN

!             AVERAGE ABSORPTION COEFFICIENTS IF BOTH ARE NOT POSITIVE:
              APSAPA(IWVSAP)                                            &
     &          =SNGL(HALFDR*(BPSAPA(IWVSAP,JBEG)+BPSAPA(IWVSAP,JEND)))
          ELSE

!             COMPUTE CIRCULAR ARC REFRACTED PATH OPTICAL DEPTHS:
              DENLN=LOG(BPSAPA(IWVSAP,JBEG)/BPSAPA(IWVSAP,JEND))
              APSAPA(IWVSAP)=SNGL(HALFDR*                               &
     &          (BPSAPA(IWVSAP,JBEG)*DENFAC(ABEG,B2BEG,DENLN)           &
     &          +BPSAPA(IWVSAP,JEND)*DENFAC(AEND,B2END,DENLN)))
          ENDIF
      ENDDO

!     RETURN TO GEOPTH OR RFPATH:
      RETURN
      END

      DOUBLE PRECISION FUNCTION DENFAC(ACOEF,B2COEF,RATLOG)

!     DENFAC EVALUATES THE INTEGRAL

!          1
!          /       - RATLOG (B2COEF X + 2 ACOEF) X
!          |   EXP                                  DX
!          /
!          0

!     THE PRODUCT B2COEF * RATLOG IS POSITIVE UNLESS THERE IS A
!     DENSITY INVERSION.  THE INTEGRAL CAN BE EXPRESSED IN TERMS OF
!     ERROR FUNCTIONS OF REAL ARGUMENTS AS LONG AS THE PRODUCT IS
!     POSITIVE.  IF THE PRODUCT IS NEGATIVE, DAWSON INTEGRALS RESULT.
!     THE INTEGRAL IS EVALUATED ONLY IF B2COEF * RATLOG IS GREATER
!     THAN -0.25;  OTHERWISE, THE QUADRATIC TERM IN THE EXPANSION,
!     B2COEF, IS SET TO ZERO AND A WARNING IS PRINTED IN THE LOG FILE.
!     (THE DAWSON INTEGRAL COULD BE EVAULATED BY INTERPOLATING TABLE
!     7.5 OF ABRAMOWITZ AND STEGUN, HANDBOOK OF MATHEMATICAL FUNCTIONS)
      IMPLICIT NONE

!     PARAMETERS:
!       RTPI     SQUARE ROOT OF PI.
      DOUBLE PRECISION RTPI
      PARAMETER(RTPI=1.772453850905516D0)

!     INPUT ARGUMENTS:
!       ACOEF    COEFFICIENT OF LINEAR EXPONENT TERMS.
!       B2COEF   COEFFICIENT OF QUADRATIC EXPONENT TERMS.
!       RATLOG   EXPONENTIAL ARGMENT COEFFICIENT.
      DOUBLE PRECISION ACOEF,B2COEF,RATLOG

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /LSTART/
!       TOLABS   OUTPUT WARNING THRESHOLD FOR EXCESS ABSORPTION.
!       LLORMN   OUTPUT WARNING FLAG FOR SMALL LORENTZ HALF WIDTH.
!       LLORMX   OUTPUT WARNING FLAG FOR LARGE LORENTZ HALF WIDTH.
!       LDOPMN   OUTPUT WARNING FLAG FOR SMALL DOPPLER HALF WIDTH.
!       LDOPMX   OUTPUT WARNING FLAG FOR LARGE DOPPLER HALF WIDTH.
!       LLINMN   OUTPUT WARNING FLAG FOR SMALL EFFECTIVE LINE NUMBER.
!       LSSA     OUTPUT WARNING FLAG FOR SCATTERING ALBEDO NEAR 1.
!       LAEREX   OUTPUT WARNING FLAG FOR ROUTINE AEREXT.
!       LBMCRK   OUTPUT WARNING FLAG FOR ROUTINE BMCRKS.
!       LFLUXS   OUTPUT WARNING FLAG FOR ROUTINE FLUXES.
!       LSSRAD   OUTPUT WARNING FLAG FOR ROUTINE SSRAD.
!       LTRLAY   OUTPUT WARNING FLAG FOR ROUTINE TRLAY.
!       LNVERS   OUTPUT WARNING FLAG FOR ROUTINE DENFAC.
!       LGEOM    OUTPUT WARNING FLAG FOR INDEX OF REFRACTION GRADIENT.
!       LO3TRN   OUTPUT WARNING FLAG FOR OZONE CURTIS-GODSON PROBLEM.
      REAL TOLABS
      LOGICAL LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,                  &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      COMMON/LSTART/TOLABS,LLORMN,LLORMX,LDOPMN,LDOPMX,LLINMN,LSSA,     &
     &  LAEREX,LBMCRK,LFLUXS,LSSRAD,LTRLAY,LNVERS,LGEOM,LO3TRN
      SAVE /LSTART/

!     FUNCTIONS:
!       FACFNC
      DOUBLE PRECISION FACFNC

!     LOCAL VARIABLES:
!       A        HALF THE LINEAR EXPONENT TERM.
!       TWOA     THE LINE EXPONENT TERM.
!       A2       A SUQARED.
!       E        THE EXPONENTIAL OF NEGATIVE TWOA.
!       B2       THE QUADRATIC EXPONENT TERM.
!       B4       B2 SQUARED.
!       B6       B2 CUBED.
!       B        SQUARE ROOT OF B2.
!       APB2     A PLUS B2.
!       RAT      RATIO OF B2 TO TWOA SQUARED.
      DOUBLE PRECISION A,TWOA,A2,E,B2,B4,B6,B,APB2,RAT

!     TEST INTEGRAL DOMAIN:
      A=ACOEF*RATLOG
      B2=B2COEF*RATLOG
      IF(B2.LT.-.25D0)THEN
          IF(LNVERS)THEN
              WRITE(IPR,'(/A,F8.3,A,/(30X,A))')                         &
     &          ' WARNING from routine DENFAC:  A density inversion'    &
     &          //' caused B2 (=',B2,') to be less than -0.25.',        &
     &          ' As a result, the flat earth approximation was'        &
     &          //' used to calculated this column density.',           &
     &          ' (This warning will not be repeated for'               &
     &          //' additional density inversions.)'
              LNVERS=.FALSE.
          ENDIF
          B2=0.D0
      ENDIF

!     BRANCH BASED ON DOMAIN:
      IF(B2.LT.-.0001D0)THEN
          IF(ABS(A).LE..25D0)THEN
              B4=B2*B2
              B6=B2*B4
              A2=A*A
              DENFAC=1-A                                                &
     &          +(2*A2-B2                                               &
     &          +(A*(3*B2-2*A2)                                         &
     &          +(3*B4-4*A2*(3*B2-A2)                                   &
     &          -(A*(15*B4-2*A2*(10*B2-A2))                             &
     &          +(15*B6-A2*(90*B4-A2*(60*B2-8*A2))                      &
     &          -(A*(105*B6-A2*(210*B4-A2*(84*B2-8*A2)))                &
     &                                            )/4)/7)/3)/5)/2)/3
          ELSE
              TWOA=2*A
              E=EXP(-TWOA)
              RAT=B2/TWOA**2
              DENFAC=((1-E)                                             &
     &          -RAT*(2-E*(2+TWOA*(2+TWOA))                             &
     &          -RAT*(12-E*(12+TWOA*(12+TWOA*(6+TWOA*(2+A))))           &
     &          -RAT*(120-E*(120+TWOA*(120+TWOA*(60+TWOA*(20+TWOA*(5    &
     &                                +TWOA*(1+TWOA/6))))))))))/TWOA
          ENDIF
          RETURN
      ELSEIF(B2.LE..0001D0)THEN
          IF(ABS(A).LE..005D0)THEN
              DENFAC=1-(A-(A*A*(2-A)-B2*(1-1.5D0*A))/3)
          ELSE
              TWOA=2*A
              E=EXP(-TWOA)
              DENFAC=((1-E)-(2-E*(2+TWOA*(2+TWOA)))*B2/TWOA**2)/TWOA
          ENDIF
          RETURN
      ENDIF
      APB2=A+B2
      B=SQRT(B2)
      IF(A.GE.0.D0)THEN
          DENFAC=FACFNC(B,A)-EXP(-A-APB2)*FACFNC(B,APB2)
      ELSEIF(APB2.LE.0.D0)THEN
          DENFAC=EXP(-A-APB2)*FACFNC(B,-APB2)-FACFNC(B,-A)
      ELSE
          DENFAC=RTPI*EXP((A/B)**2)/B                                   &
     &      -EXP(-A-APB2)*FACFNC(B,APB2)-FACFNC(B,-A)
      ENDIF
      RETURN
      END
