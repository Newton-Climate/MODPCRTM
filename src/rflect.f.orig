      LOGICAL FUNCTION RFLECT(SURREF,DATDIR,LENDAT,NLOS,DH2O,MLTRFL)

!     RFLECT IS THE DRIVER FOR DEFINING THE SURFACE REFLECTANCE
!     PROPERTIES AND RETURNS A VALUE OF .TRUE. IF SUCCESSFUL.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       SURREF   SURFACE REFLECTANCE CHARACTER STRING.
!                IF FIRST NON-BLANK CHARACTER IS "B",
!                  BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!                  FUNCTION (BRDF) DATA IS READ IN.
!                IF FIRST NON-BLANK CHARACTER IS "L" OR "-"
!                  SURFACE IS MODELED AS LAMBERTIAN AND SPECTRAL
!                  ALBEDO IS READ FROM FILE "DATA/SPEC_ALB.DAT".
!                OTHERWISE, THE CHARACTER STRING IS ASSUMED TO CONTAIN
!                  A SPECTRALLY INDEPENDENT VALUE FOR SURFACE ALBEDO.
!       DATDIR   NAME OF MODTRAN DATA DIRECTORY.
!       LENDAT   LENGTH OF DATDIR.
!       NLOS     NUMBER OF LINE-OF-SIGHT PATHS.
!       DH2O     WATER LAYER THICKNESS (mm), INPUT FROM CARD 4A!
!       MLTRFL   'T' MULTIPLE REFLECTION; 'F' SINGLE PASS EXTINCTION.
      CHARACTER SURREF*7,DATDIR*(NAMLEN-LENSUN)
      INTEGER LENDAT,NLOS
      REAL DH2O
      LOGICAL MLTRFL

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /SRFACE/
!       NWVSRF   NUMBER OF WAVELENGTH GRID POINTS.
!       WVSURF   WAVELENGTH GRID FOR IMAGED-PIXELS (1 TO MLOS) AND
!                AREA-AVERAGED (MLOSP1) SURFACES [MICRONS].
!       GDIRRF   AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!                AT SOLAR ANGLE.
!       SALB     AREA-AVERAGED GROUND SURFACE ALBEDO SPECTRAL ARRAY.
!       GAZMOM   GAUSS ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       VAZMOM   VIEW ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       GDIREM   GAUSS ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       VDIREM   VIEW ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       HDIR     IMAGED-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCES
!                AT VIEWING ANGLES.
!       BRDF     IMAGED-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!                FUNCTION AT VIEWING, SUN AND RELATIVE AZIMUTH ANGLES.
      INTEGER NWVSRF
      REAL WVSURF,GDIRRF,SALB,GAZMOM,VAZMOM,GDIREM,VDIREM,HDIR,BRDF
      COMMON/SRFACE/NWVSRF(MLOSP1),WVSURF(MLOSP1,MWVSRF),               &
     &  GDIRRF(MWVSRF),SALB(MWVSRF),GAZMOM(1:MI,0:MI,0:MAZ,1:MWVSRF),   &
     &  VAZMOM(1:MLOS,0:MI,0:MAZ,1:MWVSRF),GDIREM(MI,MWVSRF),           &
     &  VDIREM(MLOS,MWVSRF),HDIR(MLOS,MWVSRF),BRDF(MLOS,MWVSRF)

!     /SURFWV/
!       LAMBER  LOGICAL FLAG, .TRUE. FOR LAMBERTIAN SURFACE.
!       TPTEMP  TARGET-PIXEL SURFACE TEMPERATURES [K].
!       TPHDIR  TARGET-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCE AT
!               VIEWING ANGLES.
!       TPBRDF  TARGET-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!               FUNCTION AT VIEWING AND SUN ANGLES.
!       AATEMP  AREA-AVERAGED GROUND SURFACE TEMPERATURES [K].
!       AASALB  AREA-AVERAGED GROUND SURFACE ALBEDO.
!       AADREF  AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!               AT THE SOLAR ZENITH ANGLE.
!       EMU     GROUND DIRECTIONAL EMISSIVITY AT VIEWING ANGLES.
!       BEM     GROUND DIRECTIONAL EMISSIVITY AT QUADRATURE ANGLES.
!       RMU     GROUND BRDF AZIMUTH COMPONENTS AT VIEWING ANGLES
!               AND AT SUN (=0) OR QUADRATURE (>0) ANGLE.
!       BDR     GROUND BRDF AZIMUTH COMPONENTS AT QUADRATURE ANGLE
!               AND AT SUN (=0) OR QUADRATURE (>0) ANGLE.
      LOGICAL LAMBER
      REAL TPTEMP,TPHDIR,TPBRDF,AATEMP,AASALB,AADREF,EMU,BEM,RMU,BDR
      COMMON/SURFWV/LAMBER,TPTEMP(MLOS),TPHDIR(MLOS),TPBRDF(MLOS),      &
     &  AATEMP,AASALB,AADREF,EMU(MXUMU),BEM(MI),                        &
     &  RMU(1:MXUMU,0:MI,0:MAZ),BDR(1:MI,0:MI,0:MAZ)                    &

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
      REAL UMU,PHI
      INTEGER NSTR,NAZ,N2GAUS,NUMU,MAPUMU,NPHI,MAPPHI
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      COMMON/DISRT/UMU(MXUMU),PHI(MAXPHI),NSTR,NAZ,N2GAUS,NUMU,         &
     &  MAPUMU(MLOS),NPHI,MAPPHI(MLOS),DIS,DISAZM,DISALB,LDISCL
      SAVE /DISRT/

!     /ANGSRF/
!       CVWSRF  COSINE OF THE VIEW ZENITH ANGLE FROM THE SURFACE.
!       CSNSRF  COSINE OF THE SOLAR (LUNAR) ZENITH AT SURFACE.
!       AZMSRF  RELATIVE AZIMUTH ANGLE (SUN - SENSOR AT SURFACE) [RAD].
!       UMU1    COSINE OF THE PATH NADIR ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       UMU0    COSINE OF THE SOLAR ZENITH ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       PHI1    RELATIVE AZIMUTH ANGLE (SUN - LOS PATH AT SENSOR) [DEG].
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       CMU     COSINE OF THE NADIR ANGLES USED IN DISORT.
      REAL CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU
      COMMON/ANGSRF/CVWSRF(MLOS),CSNSRF(MLOS),AZMSRF(MLOS),UMU1(MLOS),  &
     &  UMU0,PHI1(MLOS),CMU(MI)

!     /JM4A/
!       NSURF    NUMBER OF SURFACES (1=IMAGED_PIXEL, 2=AREA-AVERAGED).
      INTEGER NSURF
      COMMON/JM4A/NSURF

!     /JM4L1/
!       SALBFL   SPECTRAL ALBEDO FILE NAME FOR LAMBERTIAN SURFACE.
      CHARACTER SALBFL*(NAMLEN)
      COMMON/JM4L1/SALBFL

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     FUNCTIONS:
!       LENSTR   RETURNS STRING LENGTH AFTER TRIMMING LEADING BLANKS.
!       RDBRDF   READS IN SURFACE BRDF.
!       RDLAMB   READS IN THE LAMBERTIAN SURFACE IDENTIFIER.
!       RDSALB   READS IN THE LAMBERTIAN SURFACE SPECTRAL ALBEDO DATA.
      INTEGER LENSTR
      LOGICAL RDBRDF,RDLAMB,RDSALB

!     LOCAL VARIABLES:
!       IOTEST   RESULT OF IOSTAT TEST IN READ.
!       LSALB    INTEGER LABEL FOR LAMBERTIAN SURFACE SPECTRAL ALBEDO.
!                GROUND SURFACE REFLECTANCES ARE THE SAME, OTHERWISE 2).
!       IWVSRF   CURRENT SPECTRAL WAVELENGTH INDEX.
!       I2GAUS   LOOP INDEX FOR VIEW AND DOUBLE-GAUSS QUADRATURE ANGLES.
!       J2GAUS   LOOP INDEX FOR SUN AND DOUBLE-GAUSS QUADRATURE ANGLES.
!       IAZ      DISORT AZIMUTH COMPONENT LOOP INDEX.
!       ILOS     INDEX FOR LINE-OF-SIGHT PATH.
!       LNSREF   LENGTH OF "SURREF" STRING.
!       ISREF    INDEX FOR LOOPING OVER CHARACTERS OF "SURREF" STRING.
!       RSALB    INTEGER LABEL FOR LAMBERTIAN SURFACE SPECTRAL ALBEDO.
!       CWT      POLAR ANGLE WEIGHTS USED BY DISORT.
!       DTF      DUMMY 'T' OR 'F' CHARACTER.
      INTEGER IOTEST,LSALB,IWVSRF,I2GAUS,J2GAUS,IAZ,ILOS,LNSREF,ISREF
      REAL RSALB,CWT(MI)
      CHARACTER DTF*1

!     DATA:
!       CFRMT    CHARACTER STRING INPUT FORMAT.
      CHARACTER CFRMT*9
      SAVE CFRMT
      DATA CFRMT/'((A    ))'/

!     INITIALIZE RFLECT FOR SUCCESS:
      RFLECT=.TRUE.

!     TRIM LEADING BLANKS FROM STRING SURREF
      IF(LENSTR(SURREF).EQ.0)THEN

!         STRING SURREF IS BLANK.  SET SALB TO ZERO AND RETURN.
          SALB(1)=0.
          DO ILOS=1,NLOS
              HDIR(ILOS,1)=0.
              BRDF(ILOS,1)=0.
              NWVSRF(ILOS)=1
          ENDDO
          NWVSRF(MLOSP1)=1
          IF(DIS)THEN
              LAMBER=.TRUE.
              DO I2GAUS=1,N2GAUS
                  GDIREM(I2GAUS,1)=1.
              ENDDO
              DO ILOS=1,NLOS
                  VDIREM(ILOS,1)=1.
              ENDDO
              DO IAZ=0,NAZ
                  DO J2GAUS=0,N2GAUS
                      DO I2GAUS=1,N2GAUS
                          GAZMOM(I2GAUS,J2GAUS,IAZ,1)=0.
                      ENDDO
                      DO ILOS=1,NLOS
                          VAZMOM(ILOS,J2GAUS,IAZ,1)=0.
                      ENDDO
                  ENDDO
              ENDDO
              IF(LDISCL)GDIRRF(1)=0.
          ELSE
              GDIRRF(1)=0.
          ENDIF
          RETURN
      ENDIF

!     INTERPRET SURREF:
      IF(SURREF(1:1).EQ.'B' .OR. SURREF(1:1).EQ.'b')THEN

!         BIDIRECTIONAL REFLECTANCE DISTRIBUTION FUNCTION (BRDF):
          SURREF='   BRDF'
          LAMBER=.FALSE.
          IF(LJMASS)THEN
              CALL INITCD('CARD4A')
          ELSE
              READ(IRD,'(I1,F9.0,F9.0,A)',IOSTAT=IOTEST)NSURF,AATEMP,   &
     &          DH2O,DTF
              MLTRFL=DTF.EQ.'T' .OR. DTF.EQ.'t'
          ENDIF

!         CHECK FOR READ ERROR:
          IF(IOTEST.NE.0)THEN
              WRITE(IPR,'(/2A,/18X,A)')' Error in RFLECT: ',            &
     &          ' Unable to read CARD 4A (Number_of_surfaces',          &
     &          ' Area-averaged_surface_temperature and water layer).'
              RFLECT=.FALSE.
              RETURN
          ELSEIF(NSURF.LT.1 .OR. NSURF.GT.2)THEN
              WRITE(IPR,'(/2A,I3,A,/18X,A)')' Error in RFLECT: ',       &
     &          ' The input number of surfaces is',NSURF,'.',           &
     &          ' This value must be 1 or 2.'
              RFLECT=.FALSE.
              RETURN
          ELSEIF(DH2O.LE.0.)THEN
              DH2O=0.
          ELSEIF(.NOT.LJMASS)THEN
              WRITE(IPR,'(A,F12.3,A,L1)')' The water layer thickness'   &
     &          //' is',DH2O,' mm; multiple reflection flag is ',MLTRFL
          ENDIF

!         DEFINE GAUSSIAN QUADRATURE ANGLES:
          IF(DIS)CALL QGAUSN(N2GAUS,CMU,CWT)

!         DEFINE THE IMAGED-PIXEL SURFACE:
          IF(NSURF.EQ.1)THEN

!             THIS SURFACE IS ALSO USED FOR THE AREA-AVERAGED GROUND.
              IF(.NOT.LJMASS)WRITE(IPR,'(/A)')                          &
     &          ' Uniform ground surface (NSURF=1)'
              RFLECT=RDBRDF(1,NLOS,.TRUE.,DH2O,MLTRFL)
          ELSE

!             A SEPARATE AREA-AVERAGED GROUND SURFACE WILL BE DEFINED.
              IF(.NOT.LJMASS)WRITE(IPR,'(2(/A),F8.2,A)')' The area-'//  &
     &          'averaged ground surface is distinct from the imaged',  &
     &          ' pixel with temperature (AATEMP) equal',AATEMP,'K.'
              RFLECT=RDBRDF(1,NLOS,.FALSE.,DH2O,MLTRFL)
          ENDIF
          IF(RFLECT)THEN

!             DEFINE THE AREA-AVERAGED GROUND SURFACE:
              IF(NSURF.EQ.2)THEN
                  RFLECT=RDBRDF(MLOSP1,NLOS,.TRUE.,DH2O,MLTRFL)
              ELSE
                  NWVSRF(MLOSP1)=NWVSRF(1)
                  DO IWVSRF=1,NWVSRF(1)
                      WVSURF(MLOSP1,IWVSRF)=WVSURF(1,IWVSRF)
                  ENDDO
              ENDIF
          ENDIF
          RETURN
      ELSEIF(SURREF(1:1).EQ.'L' .OR. SURREF(1:1).EQ.'l')THEN

!         SPECTRALLY DEPENDENT LAMBERTIAN REFLECTOR (NEW FORMAT):
          SURREF=' LAMBER'
          LAMBER=.TRUE.

!         READ NUMBER OF SURFACES, AREA-AVERAGED SURFACE TEMPERATURE
!         AND WATER LAYER DEPTH:
          IF(LJMASS)THEN
              CALL INITCD('CARD4A')
          ELSE
              READ(IRD,'(I1,F9.0,F9.0,A)',IOSTAT=IOTEST)NSURF,AATEMP,   &
     &          DH2O,DTF
              MLTRFL=DTF.EQ.'T' .OR. DTF.EQ.'t'
          ENDIF
          IF(IOTEST.NE.0)THEN
              WRITE(IPR,'(/2A,/18X,A)')' Error in RFLECT: ',            &
     &          ' Unable to read CARD 4A (Number_of_surfaces',          &
     &          ' Area-averaged_surface_temperature and water layer).'
              RFLECT=.FALSE.
              RETURN
          ELSEIF(NSURF.LT.1 .OR. NSURF.GT.2)THEN
              WRITE(IPR,'(/2A,I3,A,/18X,A)')' Error in RFLECT: ',       &
     &          ' The input number of surfaces is',NSURF,'.',           &
     &          ' This value must be 1 or 2.'
              RFLECT=.FALSE.
              RETURN
          ELSEIF(DH2O.GT.0.)THEN
              WRITE(IPR,'(A,F12.3,A)')' The water layer thickness is',  &
     &            DH2O,' mm. Multiple reflection flag is',DTF
          ELSEIF(DH2O.LT.0.)THEN
              DH2O=0.
          ENDIF

!         READ SURFACE SPECTRAL ALBEDO FILE NAME:
          IF(LJMASS)THEN
              CALL INITCD('CARD4L1')
          ELSE
              WRITE(CFRMT(4:7),'(I4.4)')NAMLEN
              READ(IRD,CFRMT,IOSTAT=IOTEST)SALBFL
          ENDIF
          IF(IOTEST.NE.0)THEN
              WRITE(IPR,'(/2A)')' Error in RFLECT:  Unable',            &
     &          ' to read surface spectral albedo file name.'
              RFLECT=.FALSE.
              RETURN
          ENDIF

!         DEFINE THE IMAGED-PIXEL SURFACE REFLECTANCE
          IF(NSURF.EQ.1)THEN

!             THIS SURFACE IS ALSO USED FOR THE AREA-AVERAGED GROUND.
              IF(.NOT.LJMASS)WRITE(IPR,'(/A)')                          &
     &          ' Uniform ground surface (NSURF=1)'
              RFLECT=RDLAMB(1,NLOS,.TRUE.,SALBFL)
          ELSE

!             A SEPARATE AREA-AVERAGED GROUND SURFACE WILL BE DEFINED.
              IF(.NOT.LJMASS)WRITE(IPR,'(2(/A),F8.2,A)')' The area-'//  &
     &          'averaged ground surface is distinct from the imaged',  &
     &          ' pixel with temperature (AATEMP) equal',AATEMP,'K.'
              RFLECT=RDLAMB(1,NLOS,.FALSE.,SALBFL)
          ENDIF
          IF(RFLECT)THEN

!             DEFINE THE AREA-AVERAGED SURFACE REFLECTANCE:
              IF(NSURF.EQ.2)THEN
                  RFLECT=RDLAMB(MLOSP1,NLOS,.TRUE.,SALBFL)
              ELSE

!                 DEFINE SURFACE DATA FOR ADDITIONAL IMAGED PIXELS:
                  DO ILOS=2,NLOS
                      NWVSRF(ILOS)=NWVSRF(1)
                      DO IWVSRF=1,NWVSRF(1)
                          WVSURF(ILOS,IWVSRF)=WVSURF(1,IWVSRF)
                          HDIR(ILOS,IWVSRF)=HDIR(1,IWVSRF)
                          BRDF(ILOS,IWVSRF)=BRDF(1,IWVSRF)
                      ENDDO
                  ENDDO

!                 DEFINE THE AREA-AVERAGED SURFACE SPECTRAL GRID:
                  NWVSRF(MLOSP1)=NWVSRF(1)
                  DO IWVSRF=1,NWVSRF(1)
                      WVSURF(MLOSP1,IWVSRF)=WVSURF(1,IWVSRF)
                  ENDDO
              ENDIF
          ENDIF
      ELSEIF(SURREF(1:1).EQ.'-')THEN

!         SPECTRALLY DEPENDENT LAMBERTIAN REFLECTOR (OLD FORMAT):
          LAMBER=.TRUE.

!         SET WATER LAYER DEPTH TO 0:
          DH2O=0.
!         READ SURFACE SPECTRAL ALBEDO INTEGER LABEL:
          READ(SURREF(2:7),'(F6.0)',IOSTAT=IOTEST)RSALB
          IF(IOTEST.NE.0)THEN
              WRITE(IPR,'(/4A)')' Error in RFLECT:  Input surface',     &
     &          ' albedo (=',SURREF,') could not be interpreted.'
              RFLECT=.FALSE.
              RETURN
          ENDIF
          LSALB=INT(RSALB+.5)
          SALBFL=DATDIR(1:LENDAT)//'spec_alb.dat'
          RFLECT=RDSALB(1,NLOS,.TRUE.,LSALB,' ',SALBFL)
          IF(RFLECT)THEN

!             DEFINE SURFACE DATA FOR ADDITIONAL IMAGED PIXELS:
              DO ILOS=2,NLOS
                  NWVSRF(ILOS)=NWVSRF(1)
                  DO IWVSRF=1,NWVSRF(1)
                      WVSURF(ILOS,IWVSRF)=WVSURF(1,IWVSRF)
                      HDIR(ILOS,IWVSRF)=HDIR(1,IWVSRF)
                      BRDF(ILOS,IWVSRF)=BRDF(1,IWVSRF)
                  ENDDO
              ENDDO

!             DEFINE THE AREA-AVERAGED SURFACE SPECTRAL GRID:
              NWVSRF(MLOSP1)=NWVSRF(1)
              DO IWVSRF=1,NWVSRF(1)
                  WVSURF(MLOSP1,IWVSRF)=WVSURF(1,IWVSRF)
              ENDDO
          ENDIF

!         RIGHT JUSTIFY SURREF:
          LNSREF=LENSTR(SURREF)
          IF(LNSREF.LT.7)THEN
              DO ISREF=LNSREF,1,-1
                  SURREF(7+ISREF-LNSREF:7+ISREF-LNSREF)                 &
     &              =SURREF(ISREF:ISREF)
                  SURREF(ISREF:ISREF)=' '
              ENDDO
          ENDIF
      ELSE

!         SPECTRALLY CONSTANT SURFACE ALBEDO: SET WATER LAYER DEPTH = 0.
          DH2O=0.

!         READ CONSTANT SURFACE ALBEDO
          READ(SURREF,'(F7.0)',IOSTAT=IOTEST)SALB(1)
          IF(IOTEST.NE.0)THEN
              WRITE(IPR,'(/3A,/22X,A)')                                 &
     &          ' Warning from RFLECT:  Input surface albedo (=',       &
     &          SURREF,') could not be interpreted.',                   &
     &          ' A constant surface albedo of 0. will be used.'
              SALB(1)=0.
              SURREF='  0.000'
          ELSEIF(SALB(1).GT.1.)THEN
              WRITE(IPR,'(/4A,/22X,A)')' Warning from RFLECT: ',        &
     &          ' Input surface albedo exceeds 1 (=',SURREF,').',       &
     &          ' A constant surface albedo of 1 will be used.'
              SALB(1)=1.
              SURREF='  1.000'
          ENDIF
          DO ILOS=1,NLOS
              HDIR(ILOS,1)=SALB(1)
              BRDF(ILOS,1)=SALB(1)
              NWVSRF(ILOS)=1
          ENDDO
          NWVSRF(MLOSP1)=1
          IF(DIS)THEN
              LAMBER=.TRUE.
              DO I2GAUS=1,N2GAUS
                  GDIREM(I2GAUS,1)=1-SALB(1)
              ENDDO
              DO ILOS=1,NLOS
                  VDIREM(ILOS,1)=1-SALB(1)
              ENDDO
              DO J2GAUS=0,N2GAUS
                  DO I2GAUS=1,N2GAUS
                      GAZMOM(I2GAUS,J2GAUS,0,1)=SALB(1)
                  ENDDO
                  DO ILOS=1,NLOS
                      VAZMOM(ILOS,J2GAUS,0,1)=SALB(1)
                  ENDDO
              ENDDO
              IF(LDISCL)GDIRRF(1)=SALB(1)
          ELSE
              GDIRRF(1)=SALB(1)
          ENDIF
          RFLECT=.TRUE.

!         RIGHT JUSTIFY SURREF:
          LNSREF=LENSTR(SURREF)
          IF(LNSREF.LT.7)THEN
              DO ISREF=LNSREF,1,-1
                  SURREF(7+ISREF-LNSREF:7+ISREF-LNSREF)                 &
     &              =SURREF(ISREF:ISREF)
                  SURREF(ISREF:ISREF)=' '
              ENDDO
          ENDIF
      ENDIF
      IF(RFLECT .AND. DIS)THEN

!         FOR LAMBERTIAN SURFACES, ALL BRDF IAZ>0 MOMENTS ARE ZERO.
          DO IWVSRF=1,NWVSRF(MLOSP1)
              DO IAZ=1,NAZ
                  DO J2GAUS=0,N2GAUS
                      DO I2GAUS=1,N2GAUS
                          GAZMOM(I2GAUS,J2GAUS,IAZ,IWVSRF)=0.
                      ENDDO
                      DO ILOS=1,NLOS
                          VAZMOM(ILOS,J2GAUS,IAZ,IWVSRF)=0.
                      ENDDO
                  ENDDO
              ENDDO
          ENDDO
      ENDIF
      RETURN
      END

      LOGICAL FUNCTION RDLAMB(ILOSLO,NLOS,GSURF,SALBFL)

!     RDLAMB READS IN THE LAMBERTIAN SURFACE INTEGER LABEL OR
!     SURFACE NAME AND CALLS RDSALB TO READ IN THE SPECTRAL DATA.
!     IF A PROBLEM OCCURS, A VALUE OF FALSE IS RETURNED.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       ILOSLO   LOWER LIMIT ON LINE-OF-SIGHT PATH INDEX.
!       NLOS     NUMBER OF LINE-OF-SIGHT PATHS.
!       GSURF    LOGICAL FLAG, .TRUE. IF CURRENT SURFACE IS GROUND.
!       SALBFL   SPECTRAL ALBEDO FILE NAME FOR LAMBERTIAN SURFACE.
      INTEGER ILOSLO,NLOS
      LOGICAL GSURF
      CHARACTER SALBFL*(*)

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /JM4L2/
!       CSALB    LAMBERTIAN SURFACE IDENTIFIER, INTEGER LABEL OR NAME.
      CHARACTER CSALB*80
      COMMON/JM4L2/CSALB

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     FUNCTIONS:
!       LENSTR   RETURNS STRING LENGTH AFTER TRIMMING LEADING BLANKS.
!       RDSALB   READS IN THE LAMBERTIAN SURFACE SPECTRAL ALBEDO DATA.
      INTEGER LENSTR
      LOGICAL RDSALB

!     LOCAL VARIABLES:
!       ILOS0    INDEX FOR LINE-OF-SIGHT PATH.
!       ILOSHI   HIGHER LIMIT ON LINE-OF-SIGHT PATH INDEX.
!       LNSALB   LENGTH OF LAMBERTIAN SURFACE IDENTIFIER STRING.
!       LSALB    INTEGER LABEL FOR LAMBERTIAN SURFACE SPECTRAL ALBEDO.
!       IOTEST   RESULT OF IOSTAT TEST IN READ.
      INTEGER ILOS0,ILOSHI,LNSALB,LSALB,IOTEST

!     DATA:
!       IFRMT   FORMAT USED TO READ CSALB AS AN INTEGER
      CHARACTER IFRMT*5
      SAVE IFRMT
      DATA IFRMT/'(I  )'/

!     LOOP OVER LINE-OF-SIGHT PATHS:
      IF(GSURF)THEN

!         AREA-AVG'D SURFACE: ILOS0=1 ->IMAGED-PIXEL, ELSE ILOS0=MLOSP1.
          ILOSHI=ILOSLO
      ELSE

!         IMAGED-PIXEL(S):
          ILOSHI=NLOS
      ENDIF
      DO ILOS0=ILOSLO,ILOSHI

!         READ IN LAMBERTIAN SURFACE IDENTIFIER:
          IF(LJMASS)THEN
              CALL INITCD('CARD4L2')
          ELSE
              READ(IRD,'(A80)')CSALB
              IF(ILOS0.EQ.MLOSP1)THEN
                  WRITE(IPR,'(/(1X,A))')'The AREA-AVERAGED GROUND is'// &
     &              ' modeled as Lambertian with the surface name',CSALB
              ELSE
                  WRITE(IPR,'(/(1X,A,I4,A))')                           &
     &              'The IMAGED PIXEL No.',ILOS0,' is modeled'//        &
     &              ' as Lambertian with the surface name',CSALB
              ENDIF
          ENDIF

!         TRIM TRAILING COMMENTS AND LEADING/TRAILING BLANKS:
          LNSALB=INDEX(CSALB,'!')-1
          IF(LNSALB.LT.0)THEN
              LNSALB=LENSTR(CSALB)
          ELSEIF(LNSALB.GT.0)THEN
              LNSALB=LENSTR(CSALB(1:LNSALB))
          ENDIF
          IF(LNSALB.LE.0)THEN
              WRITE(IPR,'(/2A,/18X,3A)')' Error in RDLAMB: ',           &
     &          ' Lambertian surface identifier is blank.',             &
     &          ' CSALB="',CSALB,'"'
              RDLAMB=.FALSE.
              RETURN
          ENDIF

!         CHECK IF IDENTIFIER IS AN INTEGER:
          WRITE(IFRMT(3:4),'(I2.2)')LNSALB
          READ(CSALB(1:LNSALB),IFRMT,IOSTAT=IOTEST)LSALB
          IF(IOTEST.EQ.0)THEN
              RDLAMB=RDSALB(ILOS0,NLOS,GSURF,LSALB,' ',SALBFL)
          ELSE

!             IDENTIFIER IS A NAME (CHARACTER STRING):
              CALL UPCASE(CSALB)
              RDLAMB=RDSALB(ILOS0,NLOS,GSURF,0,CSALB(1:LNSALB),SALBFL)
          ENDIF
      ENDDO
      RETURN
      END

      LOGICAL FUNCTION RDSALB(ILOS0,NLOS,GSURF,LSALB,CSALB,SALBFL)

!     RDSALB READS IN THE LAMBERTIAN SURFACE SPECTRAL ALBEDO DATA.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       ILOS0    INDEX OF CURRENT LINE-OF-SIGHT PATH.
!       NLOS     NUMBER OF LINE-OF-SIGHT PATHS.
!       GSURF    LOGICAL FLAG, .TRUE. IF CURRENT SURFACE IS GROUND.
!       LSALB    INTEGER LABEL FOR LAMBERTIAN SURFACE SPECTRAL ALBEDO.
!                (SET TO ZERO IF NOT TO BE USED).
!       CSALB    NAME FOR LAMBERTIAN SURFACE SPECTRAL ALBEDO.
!       SALBFL   SPECTRAL ALBEDO FILE NAME FOR LAMBERTIAN SURFACE.
      INTEGER ILOS0,NLOS,LSALB
      LOGICAL GSURF
      CHARACTER CSALB*(*),SALBFL*(*)

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /SRFACE/
!       NWVSRF   NUMBER OF WAVELENGTH GRID POINTS.
!       WVSURF   WAVELENGTH GRID FOR IMAGED-PIXELS (1 TO MLOS) AND
!                AREA-AVERAGED (MLOSP1) SURFACES [MICRONS].
!       GDIRRF   AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!                AT SOLAR ANGLE.
!       SALB     AREA-AVERAGED GROUND SURFACE ALBEDO SPECTRAL ARRAY.
!       GAZMOM   GAUSS ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       VAZMOM   VIEW ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       GDIREM   GAUSS ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       VDIREM   VIEW ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       HDIR     IMAGED-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCES
!                AT VIEWING ANGLES.
!       BRDF     IMAGED-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!                FUNCTION AT VIEWING, SUN AND RELATIVE AZIMUTH ANGLES.
      INTEGER NWVSRF
      REAL WVSURF,GDIRRF,SALB,GAZMOM,VAZMOM,GDIREM,VDIREM,HDIR,BRDF
      COMMON/SRFACE/NWVSRF(MLOSP1),WVSURF(MLOSP1,MWVSRF),               &
     &  GDIRRF(MWVSRF),SALB(MWVSRF),GAZMOM(1:MI,0:MI,0:MAZ,1:MWVSRF),   &
     &  VAZMOM(1:MLOS,0:MI,0:MAZ,1:MWVSRF),GDIREM(MI,MWVSRF),           &
     &  VDIREM(MLOS,MWVSRF),HDIR(MLOS,MWVSRF),BRDF(MLOS,MWVSRF)

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
      REAL UMU,PHI
      INTEGER NSTR,NAZ,N2GAUS,NUMU,MAPUMU,NPHI,MAPPHI
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      COMMON/DISRT/UMU(MXUMU),PHI(MAXPHI),NSTR,NAZ,N2GAUS,NUMU,         &
     &  MAPUMU(MLOS),NPHI,MAPPHI(MLOS),DIS,DISAZM,DISALB,LDISCL
      SAVE /DISRT/

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     FUNCTIONS:
!       NUNIT    RETURNS AN UNUSED FILE UNIT NUMBER.
!       LENSTR   RETURNS STRING LENGTH AFTER TRIMMING LEADING BLANKS.
      INTEGER NUNIT,LENSTR

!     LOCAL VARIABLES:
!       LEXIST   FILE EXIST FLAG.
!       INPSTR   INPUT STRING FROM SURFACE SPECTRAL ALBEDO FILE.
!       IOTEST   RESULT OF IOSTAT TEST IN INTERNAL READ.
!       LENFIL   LENGTH OF FILE NAME.
!       LENINP   LENGTH OF INPUT STRING.
!       NUSALB   UNIT NUMBER OF LAMBERTIAN SURFACE SPECTRAL ALBEDO FILE.
!       LBANG    LOCATION OF "!" (BANG) IN CHARACTER STRING.
!       LBLANK   LOCATION OF BLANK FOLLOWING INTEGER LABEL.
!       LENINT   LENGTH OF INTEGER LABEL STRING.
!       IHEAD    INTEGER LABEL ON HEADER STRING.
!       LENNAM   LENGTH OF SURFACE NAME STRING.
!       LENFLT   LENGTH OF FLOATING POINT STRING.
!       NEXTWV   WAVELENGTH GRID COUNTER.
!       I2GAUS   LOOP INDEX FOR VIEW AND DOUBLE-GAUSS QUADRATURE ANGLES.
!       J2GAUS   LOOP INDEX FOR SUN AND DOUBLE-GAUSS QUADRATURE ANGLES.
!       ILOS     LOOP INDEX FOR VIEW ANGLES.
      LOGICAL LEXIST
      CHARACTER INPSTR*80
      INTEGER IOTEST,LENFIL,LENINP,NUSALB,LBANG,LBLANK,LENINT,          &
     &  IHEAD,LENNAM,LENFLT,NEXTWV,I2GAUS,J2GAUS,ILOS

!     DATA:
!       IFRMT    FORMAT USED TO READ A SINGLE INTEGER
!       FFRMT    FORMAT USED TO READ A SINGLE FLOATING POINT NUMBER.
      CHARACTER IFRMT*5,FFRMT*7
      SAVE IFRMT,FFRMT
      DATA IFRMT,FFRMT/'(I  )','(F  .0)'/

!     OPEN LAMBERTIAN SURFACE SPECTRAL ALBEDO FILE:
      LENFIL=LENSTR(SALBFL)
      INQUIRE(FILE=SALBFL(1:LENFIL),EXIST=LEXIST)
      IF(.NOT.LEXIST)THEN
          WRITE(IPR,'(/2A,/(19X,A))')' Error in RDSALB:  ',             &
     &      'Lambertian surface spectral albedo file',                  &
     &      SALBFL(1:LENFIL),'not found.'
          RDSALB=.FALSE.
          RETURN
      ENDIF
      NUSALB=NUNIT()
      CALL OPNFL(NUSALB,0,SALBFL,'OLD','FORMATTED','RFLECT')

!     READ LAMBERTIAN SURFACE SPECTRAL ALBEDO FILE TO FIND HEADER MATCH:
   10 CONTINUE
          READ(NUSALB,'(A80)',IOSTAT=IOTEST)INPSTR

!         END-OF-FILE:
          IF(IOTEST.NE.0)THEN
              WRITE(IPR,'(/2A,/18X,A)')' Error in RDSALB: ',            &
     &          ' Reached end of Lambertian surface spectral albedo',   &
     &          ' file without matching surface integer label or name.'
              CLOSE(NUSALB)
              RDSALB=.FALSE.
              RETURN
          ENDIF

!         IF LINE IS BLANK, READ NEXT LINE:
          LENINP=LENSTR(INPSTR)
          IF(LENINP.EQ.0)GOTO 10

!         IF FIRST NON-BLANK CHARACTER IS "!", READ NEXT LINE:
          LBANG=INDEX(INPSTR(1:LENINP),'!')
          IF(LBANG.EQ.1)GOTO 10

!         IF LINE CONTAINS A COMMENT, TRIM IT OFF.
          IF(LBANG.GT.1)LENINP=LENSTR(INPSTR(1:LBANG-1))

!         IF LINE CONTAINS DATA (INSTEAD OF HEADER), READ NEXT LINE:
          IF(INDEX(INPSTR(1:LENINP),'.').GT.0)GOTO 10

!         PARSE HEADER:
          LBLANK=INDEX(INPSTR(1:LENINP),' ')
          IF(LBLANK.LE.1)GOTO 40

!         READ LAMBERTIAN SURFACE INTEGER LABEL:
          LENINT=LBLANK-1
          WRITE(IFRMT(3:4),'(I2.2)')LENINT
          READ(INPSTR(1:LENINT),IFRMT,ERR=40)IHEAD
          IF(IHEAD.LE.0)GOTO 40

!         IF INTEGER LABEL DOES NOT MATCH, CHECK NAME:
          IF(IHEAD.NE.LSALB)THEN

!             DETERMINE LAMBERTIAN SURFACE NAME:
              LENNAM=LENSTR(INPSTR(LBLANK:LENINP))
              IF(LENNAM.LE.0)GOTO 40

!             IF NO MATCH, READ NEXT LINE:
              CALL UPCASE(INPSTR)
              IF(INPSTR(LBLANK:LENINT+LENNAM).NE.CSALB)GOTO 10
          ENDIF

!         WRITE OUT SELECTION:
          IF(.NOT.LJMASS)WRITE(IPR,'(/(2A))')' Using surface:  ',       &
     &      INPSTR(1:LENINP),' From file:      ',SALBFL(1:LENFIL)

!     MATCH FOUND:  INITIALIZE WAVELENGTH INDEX AND READ DATA.
      NEXTWV=1
   20 CONTINUE
          READ(NUSALB,'(A80)',END=30)INPSTR

!         IF LINE IS BLANK, READ NEXT LINE:
          LENINP=LENSTR(INPSTR)
          IF(LENINP.EQ.0)GOTO 20

!         IF FIRST NON-BLANK CHARACTER IS "!", READ NEXT LINE:
          LBANG=INDEX(INPSTR(1:LENINP),'!')
          IF(LBANG.EQ.1)GOTO 20

!         IF LINE CONTAINS A COMMENT, TRIM IT OFF.
          IF(LBANG.GT.1)LENINP=LENSTR(INPSTR(1:LBANG-1))

!         CHECK IF LINE CONTAINS DATA (INSTEAD OF HEADER):
          IF(INDEX(INPSTR(1:LENINP),'.').GT.0)THEN

!             PARSE DATA:
              LBLANK=INDEX(INPSTR(1:LENINP),' ')
              IF(LBLANK.LE.1)GOTO 50

!             READ WAVELENGTH:
              LENFLT=LBLANK-1
              WRITE(FFRMT(3:4),'(I2.2)')LENFLT
              READ(INPSTR(1:LENFLT),FFRMT,ERR=50)WVSURF(ILOS0,NEXTWV)

!             CHECK WAVELENGTHS FOR MONOTONICITY:
              IF(NEXTWV.EQ.1)THEN
                  IF(WVSURF(ILOS0,NEXTWV).LT.0.)THEN
                      WRITE(IPR,'(/2A)')' Error in RDSALB: ',           &
     &                  ' Lambertian surface wavelength less than 0.'
                      CLOSE(NUSALB)
                      RDSALB=.FALSE.
                      RETURN
                  ENDIF
              ELSE
                  IF(WVSURF(ILOS0,NEXTWV).LE.                           &
     &              WVSURF(ILOS0,NWVSRF(ILOS0)))THEN
                      WRITE(IPR,'(/2A)')' Error in RDSALB: ',           &
     &                  ' Lambertian surface wavelengths out of order.'
                      CLOSE(NUSALB)
                      RDSALB=.FALSE.
                      RETURN
                  ENDIF
              ENDIF

!             READ SPECTRAL ALBEDO:
              LENFLT=LENINP-LENFLT
              WRITE(FFRMT(3:4),'(I2.2)')LENFLT
              READ(INPSTR(LBLANK:LENINP),FFRMT,ERR=50)SALB(NEXTWV)
              IF(ILOS0.LE.MLOS)THEN

!                 IMAGED-PIXEL VALUES:
                  HDIR(ILOS0,NEXTWV)=SALB(NEXTWV)
                  BRDF(ILOS0,NEXTWV)=SALB(NEXTWV)
              ENDIF
              IF(GSURF)THEN

!                 AREA-AVERAGED GROUND VALUES:
                  IF(DIS)THEN
                      DO I2GAUS=1,N2GAUS
                          GDIREM(I2GAUS,NEXTWV)=1-SALB(NEXTWV)
                      ENDDO
                      DO ILOS=1,NLOS
                          VDIREM(ILOS,NEXTWV)=1-SALB(NEXTWV)
                      ENDDO
                      DO J2GAUS=0,N2GAUS
                          DO I2GAUS=1,N2GAUS
                              GAZMOM(I2GAUS,J2GAUS,0,NEXTWV)            &
     &                          =SALB(NEXTWV)
                          ENDDO
                          DO ILOS=1,NLOS
                              VAZMOM(ILOS,J2GAUS,0,NEXTWV)=SALB(NEXTWV)
                          ENDDO
                      ENDDO
                      IF(LDISCL)GDIRRF(NEXTWV)=SALB(NEXTWV)
                  ELSE
                      GDIRRF(NEXTWV)=SALB(NEXTWV)
                  ENDIF
              ENDIF

!             READ NEXT LINE:
              NWVSRF(ILOS0)=NEXTWV
              NEXTWV=NEXTWV+1
              IF(NEXTWV.LE.MWVSRF)GOTO 20

!             MAXIMUM NUMBER OF DATA LINES HAVE BEEN READ:
              WRITE(IPR,'(/2A,/(22X,A))')' Warning from RDSALB: ',      &
     &          ' The maximum number of spectral points have been',     &
     &          ' used in specifying the surface spectral albedo.',     &
     &          ' To use more, increase parameter MWVSRF.'
          ENDIF

!     DATA HAS BEEN READ:
   30 CONTINUE
      IF(NEXTWV.EQ.1)THEN
          WRITE(IPR,'(/2A)')' Error in RDSALB: ',                       &
     &      ' No Lambertian surface spectral albedo data was read in.'
          CLOSE(NUSALB)
          RDSALB=.FALSE.
          RETURN
      ENDIF

!     SUCCESSFUL READ:
      CLOSE(NUSALB)
      RDSALB=.TRUE.
      RETURN

!     UNABLE TO INTERPRET HEADER:
   40 CONTINUE
      WRITE(IPR,'(/2A,/(19X,A))')' Error in RDSALB:  ',                 &
     &  'Unable to interpret header line',INPSTR(1:LENINP),             &
     &  'in Lambertian surface spectral albedo file.'
      CLOSE(NUSALB)
      RDSALB=.FALSE.
      RETURN

!     UNABLE TO INTERPRET DATA LINE:
   50 CONTINUE
      WRITE(IPR,'(/2A,/(19X,A))')' Error in RDSALB:  ',                 &
     &  'Unable to interpret data line',INPSTR(1:LENINP),               &
     &  'in Lambertian surface spectral albedo file.'
      CLOSE(NUSALB)
      RDSALB=.FALSE.
      RETURN
      END

      SUBROUTINE GTSURF(WAVLEN,LSURF,DH2O,MLTRFL,NLOS)

!     GTSURF RETURNS SURFACE REFLECTANCE/EMITTANCE
!     VALUES AT SPECIFIED WAVELENGTH.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       WAVLEN   WAVELENGTH [MICRONS].
!       LSURF    SPECTRAL FLAG [TRUE IF REFLECTANCES ARE CHANGING].
!       DH2O     WATER LAYER THICKNESS (mm)
!       MLTRFL   'T' MULTIPLE REFLECTION; 'F' SINGLE PASS EXTINCTION.
!       NLOS     NUMBER OF LINE-OF-SIGHT PATHS.
      REAL WAVLEN,DH2O
      LOGICAL LSURF,MLTRFL
      INTEGER NLOS

!     COMMONS:

!     /SRFACE/
!       NWVSRF   NUMBER OF WAVELENGTH GRID POINTS.
!       WVSURF   WAVELENGTH GRID FOR IMAGED-PIXELS (1 TO MLOS) AND
!                AREA-AVERAGED (MLOSP1) SURFACES [MICRONS].
!       GDIRRF   AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!                AT SOLAR ANGLE.
!       SALB     AREA-AVERAGED GROUND SURFACE ALBEDO SPECTRAL ARRAY.
!       GAZMOM   GAUSS ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       VAZMOM   VIEW ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       GDIREM   GAUSS ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       VDIREM   VIEW ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       HDIR     IMAGED-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCES
!                AT VIEWING ANGLES.
!       BRDF     IMAGED-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!                FUNCTION AT VIEWING, SUN AND RELATIVE AZIMUTH ANGLES.
      INTEGER NWVSRF
      REAL WVSURF,GDIRRF,SALB,GAZMOM,VAZMOM,GDIREM,VDIREM,HDIR,BRDF
      COMMON/SRFACE/NWVSRF(MLOSP1),WVSURF(MLOSP1,MWVSRF),               &
     &  GDIRRF(MWVSRF),SALB(MWVSRF),GAZMOM(1:MI,0:MI,0:MAZ,1:MWVSRF),   &
     &  VAZMOM(1:MLOS,0:MI,0:MAZ,1:MWVSRF),GDIREM(MI,MWVSRF),           &
     &  VDIREM(MLOS,MWVSRF),HDIR(MLOS,MWVSRF),BRDF(MLOS,MWVSRF)

!     /SURFWV/
!       LAMBER  LOGICAL FLAG, .TRUE. FOR LAMBERTIAN SURFACE.
!       TPTEMP  TARGET-PIXEL SURFACE TEMPERATURES [K].
!       TPHDIR  TARGET-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCE AT
!               VIEWING ANGLES.
!       TPBRDF  TARGET-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!               FUNCTION AT VIEWING AND SUN ANGLES.
!       AATEMP  AREA-AVERAGED GROUND SURFACE TEMPERATURES [K].
!       AASALB  AREA-AVERAGED GROUND SURFACE ALBEDO.
!       AADREF  AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!               AT THE SOLAR ZENITH ANGLE.
!       EMU     GROUND DIRECTIONAL EMISSIVITY AT VIEWING ANGLES.
!       BEM     GROUND DIRECTIONAL EMISSIVITY AT QUADRATURE ANGLES.
!       RMU     GROUND BRDF AZIMUTH COMPONENTS AT VIEWING ANGLES
!               AND AT SUN (=0) OR QUADRATURE (>0) ANGLE.
!       BDR     GROUND BRDF AZIMUTH COMPONENTS AT QUADRATURE ANGLE
!               AND AT SUN (=0) OR QUADRATURE (>0) ANGLE.
      LOGICAL LAMBER
      REAL TPTEMP,TPHDIR,TPBRDF,AATEMP,AASALB,AADREF,EMU,BEM,RMU,BDR
      COMMON/SURFWV/LAMBER,TPTEMP(MLOS),TPHDIR(MLOS),TPBRDF(MLOS),      &
     &  AATEMP,AASALB,AADREF,EMU(MXUMU),BEM(MI),                        &
     &  RMU(1:MXUMU,0:MI,0:MAZ),BDR(1:MI,0:MI,0:MAZ)                    &

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
      REAL UMU,PHI
      INTEGER NSTR,NAZ,N2GAUS,NUMU,MAPUMU,NPHI,MAPPHI
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      COMMON/DISRT/UMU(MXUMU),PHI(MAXPHI),NSTR,NAZ,N2GAUS,NUMU,         &
     &  MAPUMU(MLOS),NPHI,MAPPHI(MLOS),DIS,DISAZM,DISALB,LDISCL
      SAVE /DISRT/

!     /ANGSRF/
!       CVWSRF  COSINE OF THE VIEW ZENITH ANGLE FROM THE SURFACE.
!       CSNSRF  COSINE OF THE SOLAR (LUNAR) ZENITH AT SURFACE.
!       AZMSRF  RELATIVE AZIMUTH ANGLE (SUN - SENSOR AT SURFACE) [RAD].
!       UMU1    COSINE OF THE PATH NADIR ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       UMU0    COSINE OF THE SOLAR ZENITH ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       PHI1    RELATIVE AZIMUTH ANGLE (SUN - LOS PATH AT SENSOR) [DEG].
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       CMU     COSINE OF THE NADIR ANGLES USED IN DISORT.
      REAL CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU
      COMMON/ANGSRF/CVWSRF(MLOS),CSNSRF(MLOS),AZMSRF(MLOS),UMU1(MLOS),  &
     &  UMU0,PHI1(MLOS),CMU(MI)

!     LOCAL VARIABLES:
!       IWAVLO   LOWER WAVELENGTH INDEX.
!       IWAVHI   HIGHER WAVELENGTH INDEX.
!       FWAV     WAVELENGTH INTERPOLATION FACTOR.
!       I2GAUS   LOOP INDEX FOR DOUBLE-GAUSS QUADRATURE ANGLES.
!       J2GAUS   LOOP INDEX FOR SUN AND DOUBLE-GAUSS QUADRATURE ANGLES.
!       IAZ      DISORT AZIMUTH COMPONENT LOOP INDEX.
!       ILOS     LOOP INDEX FOR LINE-OF-SIGHT PATHS.
!       WATTRN   HEMISPHERE AVERAGED LIQUID WATER LAYER TRANSMITTANCE.
!       WATIND   LIQUID WATER REFRACTIVE INDEX.
!       WATABS   LIQUID WATER ABSORPTION COEFFICIENT [1/M].
!       WATDEP   LIQUID WATER VERTICAL OPTICAL DEPTH.
!       MULTRF   AN EMPIRICAL REFELCTANCE FUNCTION INCLUDING
!                MULTI-REFLECTION BETWEEN TWO SURFACES
!       STORE    TEMPORARY STORAGE OF ARRAY VALUE.
      INTEGER IWAVLO,IWAVHI,I2GAUS,J2GAUS,IAZ,ILOS
      REAL FWAV,WATTRN,WATIND,WATABS,WATDEP,MULTRF,STORE

!     FUNCTIONS:
!       GTWDEP   RETURNS LIQUID WATER LAYER SPECTRAL OPTICAL DEPTH.
!       TWATHM   HEMISPHERE AVERAGED LIQUID WATER LAYER TRANSMITTANCE.
      REAL GTWDEP,TWATHM

!     INITIALIZE LSURF TO FALSE (RETURN UNNECESSARY):
      LSURF=.FALSE.

      IF(DH2O.GT.0.)THEN

!         WATER REFRACTIVE INDEX AND ABSORPTION COEFFICIENT [1/M]:
          CALL WATDAT(WAVLEN,WATIND,WATABS)
          WATDEP=GTWDEP(WAVLEN,WATABS,.001*DH2O)

!         ANALYTICAL INTEGRATION OF WATER LAYER TRANSMITTANCE:
          WATTRN=TWATHM(WATDEP,WATIND,MLTRFL)

!         LSURF IS ALWAYS TRUE FOR A WATER LAYER
          LSURF=.TRUE.
      ELSE
          WATDEP=0.
          WATTRN=1.

      ENDIF

!     LOOP OVER LINES-OF-SIGHT PATH FOR IMAGED SURFACES:
      DO ILOS=1,NLOS
          LSURF=LSURF .OR.                                              &
     &      (NWVSRF(ILOS).GT.1 .AND. WAVLEN.GT.WVSURF(ILOS,1))

!         IMAGED SURFACES:
          IF(WAVLEN.LE.WVSURF(ILOS,1))THEN

!             MINIMUM WAVELENGTH:
              TPHDIR(ILOS)=HDIR(ILOS,1)*WATTRN*EXP(-WATDEP/CVWSRF(ILOS))
              TPBRDF(ILOS)=BRDF(ILOS,1)*WATTRN
          ELSEIF(WAVLEN.GE.WVSURF(1,NWVSRF(1)))THEN

!             MAXIMUM WAVELENGTH:
              TPHDIR(ILOS)=HDIR(ILOS,NWVSRF(ILOS))*WATTRN
              TPBRDF(ILOS)=BRDF(ILOS,NWVSRF(ILOS))*WATTRN
          ELSE

!             SET UP WAVELENGTH INTERPOLATION:
              IWAVLO=1
              DO IWAVHI=2,NWVSRF(ILOS)-1
                  IF(WAVLEN.LE.WVSURF(ILOS,IWAVHI))GOTO 10
                  IWAVLO=IWAVHI
              ENDDO
              IWAVHI=NWVSRF(ILOS)

!             INTERPOLATE IN WAVELENGTH:
   10         CONTINUE
              FWAV=(WAVLEN-WVSURF(ILOS,IWAVLO))                         &
     &          /(WVSURF(ILOS,IWAVHI)-WVSURF(ILOS,IWAVLO))
              TPHDIR(ILOS)=WATTRN*(HDIR(ILOS,IWAVLO)                    &
     &          +FWAV*(HDIR(ILOS,IWAVHI)-HDIR(ILOS,IWAVLO)))
              TPBRDF(ILOS)=WATTRN*(BRDF(ILOS,IWAVLO)                    &
     &          +FWAV*(BRDF(ILOS,IWAVHI)-BRDF(ILOS,IWAVLO)))
          ENDIF
      ENDDO

!     AREA-AVERAGED GROUND SURFACE:
      LSURF=LSURF .OR.                                                  &
     &  (NWVSRF(MLOSP1).GT.1 .AND. WAVLEN.GT.WVSURF(MLOSP1,1))
      IF(WAVLEN.LE.WVSURF(MLOSP1,1))THEN

!         MINIMUM WAVELENGTH:
          AASALB=SALB(1)*WATTRN**2
          IF(DIS)THEN

!             DISORT GROUND DIRECTIONAL EMISSIVITIES:
              DO ILOS=1,NLOS
                  EMU(ILOS)=VDIREM(ILOS,1)
              ENDDO
              DO I2GAUS=1,N2GAUS
                  BEM(I2GAUS)=GDIREM(I2GAUS,1)
              ENDDO

!             DISORT GROUND BRDF AZIMUTH MOMEMTS:
              DO IAZ=0,NAZ

!                 LOOP OVER SUN (=0) AND QUADRATURE (>0) ANGLES:
                  DO J2GAUS=0,N2GAUS

!                     LOOP OVER VIEW ANGLES:
                      DO ILOS=1,NLOS
                          RMU(ILOS,J2GAUS,IAZ)=VAZMOM(ILOS,J2GAUS,IAZ,1)
                      ENDDO

!                     LOOP OVER QUADRATURE ANGLES:
                      DO I2GAUS=1,N2GAUS
                          BDR(I2GAUS,J2GAUS,IAZ)                        &
     &                      =GAZMOM(I2GAUS,J2GAUS,IAZ,1)
                      ENDDO
                  ENDDO
              ENDDO
              IF(LDISCL)AADREF=GDIRRF(1)
          ELSE
              AADREF=GDIRRF(1)
          ENDIF
      ELSEIF(WAVLEN.GE.WVSURF(MLOSP1,NWVSRF(MLOSP1)))THEN

!         MAXIMUM WAVELENGTH:
          AASALB=SALB(NWVSRF(MLOSP1))*WATTRN**2
          IF(DIS)THEN

!             DISORT GROUND DIRECTIONAL EMISSIVITIES:
              DO ILOS=1,NLOS
                  EMU(ILOS)=VDIREM(ILOS,NWVSRF(MLOSP1))
              ENDDO
              DO I2GAUS=1,N2GAUS
                  BEM(I2GAUS)=GDIREM(I2GAUS,NWVSRF(MLOSP1))
              ENDDO

!             DISORT GROUND BRDF AZIMUTH MOMEMTS:
              DO IAZ=0,NAZ

!                 LOOP OVER SUN (=0) AND QUADRATURE (>0) ANGLES:
                  DO J2GAUS=0,N2GAUS
                      DO ILOS=1,NLOS
                          RMU(ILOS,J2GAUS,IAZ)                          &
     &                      =VAZMOM(ILOS,J2GAUS,IAZ,NWVSRF(MLOSP1))
                      ENDDO

!                     LOOP OVER QUADRATURE ANGLES:
                      DO I2GAUS=1,N2GAUS
                          BDR(I2GAUS,J2GAUS,IAZ)                        &
     &                      =GAZMOM(I2GAUS,J2GAUS,IAZ,NWVSRF(MLOSP1))
                      ENDDO
                  ENDDO
              ENDDO
              IF(LDISCL)AADREF=GDIRRF(NWVSRF(MLOSP1))
          ELSE
              AADREF=GDIRRF(NWVSRF(MLOSP1))
          ENDIF
      ELSE

!         INTERPOLATE IN WAVELENGTH:
          IWAVLO=1
          DO IWAVHI=2,NWVSRF(MLOSP1)-1
              IF(WAVLEN.LE.WVSURF(MLOSP1,IWAVHI))GOTO 20
              IWAVLO=IWAVHI
          ENDDO
          IWAVHI=NWVSRF(MLOSP1)
   20     CONTINUE
          FWAV=(WAVLEN-WVSURF(MLOSP1,IWAVLO))                           &
     &      /(WVSURF(MLOSP1,IWAVHI)-WVSURF(MLOSP1,IWAVLO))
          AASALB=SALB(IWAVLO)
          AASALB=(AASALB+FWAV*(SALB(IWAVHI)-AASALB))*WATTRN**2
          IF(DIS)THEN

!             DISORT GROUND DIRECTIONAL EMISSIVITIES:
              DO ILOS=1,NLOS
                  STORE=VDIREM(ILOS,IWAVLO)
                  EMU(ILOS)=STORE+FWAV*(VDIREM(ILOS,IWAVHI)-STORE)
              ENDDO
              DO I2GAUS=1,N2GAUS
                  STORE=GDIREM(I2GAUS,IWAVLO)
                  BEM(I2GAUS)=STORE+FWAV*(GDIREM(I2GAUS,IWAVHI)-STORE)
              ENDDO

!             DISORT GROUND BRDF AZIMUTH MOMEMTS:
              DO IAZ=0,NAZ

!                 LOOP OVER SUN (=0) AND QUADRATURE (>0) ANGLES:
                  DO J2GAUS=0,N2GAUS
                      DO ILOS=1,NLOS
                          STORE=VAZMOM(ILOS,J2GAUS,IAZ,IWAVLO)
                          RMU(ILOS,J2GAUS,IAZ)=STORE+FWAV               &
     &                      *(VAZMOM(ILOS,J2GAUS,IAZ,IWAVHI)-STORE)
                      ENDDO

!                     LOOP OVER QUADRATURE ANGLES:
                      DO I2GAUS=1,N2GAUS
                          STORE=GAZMOM(I2GAUS,J2GAUS,IAZ,IWAVLO)
                          BDR(I2GAUS,J2GAUS,IAZ)=STORE+FWAV             &
     &                      *(GAZMOM(I2GAUS,J2GAUS,IAZ,IWAVHI)-STORE)
                      ENDDO
                  ENDDO
              ENDDO
              IF(LDISCL)AADREF=GDIRRF(IWAVLO)                           &
     &          +FWAV*(GDIRRF(IWAVHI)-GDIRRF(IWAVLO))
          ELSE
              AADREF=GDIRRF(IWAVLO)+FWAV*(GDIRRF(IWAVHI)-GDIRRF(IWAVLO))
          ENDIF
      ENDIF

!     DO CORRECTION FOR MULTIPLE REFLECTION IN WATER LABYER
      IF(DH2O.GT.0. .AND. MLTRFL)THEN
          DO ILOS=1,NLOS
              TPHDIR(ILOS)=MULTRF(TPHDIR(ILOS),AASALB,1.,WATIND,LAMBER)
              TPBRDF(ILOS)=MULTRF(TPBRDF(ILOS),AASALB,1.,WATIND,LAMBER)
          ENDDO
      ENDIF
      RETURN
      END

      REAL FUNCTION GTWDEP(WAVLEN,WATABS,DH2O_M)

!     GTWDEP RETURNS THE LIQUID WATER LAYER SPECTRAL OPTICAL DEPTH.
      IMPLICIT NONE

!     PARAMETERS:
!       WTSFAC   LIQUID WATER SCATTERING COEFFICIENT EQN FACTOR [1/M].
!       WTSPOW   LIQUID WATER SCATTERING COEFFICIENT EQUATION POWER.
      REAL WTSPOW,WTSFAC
      PARAMETER(WTSFAC=.000112962,WTSPOW=-4.32)

!     INPUT ARGUMENTS:
!       WAVLEN   WAVELENGTH IN MICRON.
!       WATABS   LIQUID WATER ABSORPTION COEFFICIENT [1/M].
!       DH2O_M   WATER LAYER THICKNESS [METERS].
      REAL WAVLEN,WATABS,DH2O_M

!     WATER LAYER OPTICAL DEPTH:
      GTWDEP=(WATABS+WTSFAC*WAVLEN**WTSPOW)*DH2O_M
      RETURN
      END

      REAL FUNCTION TWATHM(WATDEP,WATIND,MLTRFL)

!     TWATHM RETURNS THE HEMISPHERE AVERAGED LIQUID WATER
!     LAYER TRANSMITTANCE.
      IMPLICIT NONE

!     PARAMETERS:
!       WDEPMX   NEGLIGIBLE TRANSMITTANCE LIQIUD WATER OPTICAL DEPTH.
      REAL WDEPMX
      PARAMETER(WDEPMX=76.)

!     INPUT ARGUMENTS:
!       WATDEP   LIQUID WATER VERTICAL OPTICAL DEPTH.
!       WATIND   LIQUID WATER REFRACTIVE INDEX.
!       MLTRFL  'T' MULTIPLE REFLECTION; 'F' SINGLE PASS EXTINCTION.
      REAL WATDEP,WATIND
      LOGICAL MLTRFL

!     FUNCTIONS:
      REAL E3FUNC

!     HEMISPHERIC WATER LAYER ATTENUATION:
      IF(WATDEP.GE.WDEPMX)THEN

!         TRANSMITTANCE BECOMES ZERO IF DEPTH IS TOO HIGH:
          TWATHM=0.
      ELSEIF(MLTRFL .AND. WATIND.GT.1.)THEN

!         INCLUDE SURFACE REFRACTIVE INDEX EFFECTS:
          TWATHM=2*E3FUNC(WATIND*WATDEP)/WATIND**2
      ELSE

!         INCLUDE ATTENUATION EFFECTS ONLY:
          TWATHM=2*E3FUNC(WATDEP)
      ENDIF
      RETURN
      END

      REAL FUNCTION E3FUNC(Z)

!     E3FUNC RETURNS THE EXPONENTIAL INTEGRAL OF ORDER 3.
      IMPLICIT NONE

!     INPUT ARGUMENTS:
!       Z        NON-NEGATIVE ARGUMENT OF EXPONENTIAL INTEGRAL.
      REAL Z

!     FUNCTIONS:
!       E1FUNC   EXPONENTIAL INTEGRAL OF ORDER 1.
      DOUBLE PRECISION E1FUNC

!     RECURRENCE RELATIONSHIP:
      E3FUNC=((1-Z)*EXP(-Z)+Z**2*REAL(E1FUNC(Z)))/2
      RETURN
      END

      REAL FUNCTION MULTRF(RFL,ALBD,AIRIND,WATIND,LAMBER)

!     AN EMPIRICAL REFELCTANCE FUNCTION INCLUDING MULTI-REFLECTION
!     BETWEEN TWO  SURFACES
!                            RFL * tt'
!                 MULTRF = ---------------- + (1-t2)
!                          1 - (1-c) * ALBD
!                 WHERE
!                   c = (AIRIND/WATIND)^2
!                 t AND t' ARE TRANSMITTANCE COEFFICIENTS FROM AIR TO
!                 WATER AND  WATER TO AIR AT INCIDENT ANGLE OF 60
!                 DEGREE, RESPECTIVELY.
!                   t = t' = 1.3421-0.5033*WATIND+0.1532*WATIND*WATIND
!                 COEFFICIENTS ARE POLYNOMIAL FITTING FOR WATIND
!                 BETWEEN 1.1 AND  1.7.
      IMPLICIT NONE

!     ARGUMENTS:
!       RFL      DIRECTION REFLECTANCE GOES THROUGH ONE PASS
!                OF THE WATER LAYER
!       ALBD     AVERAGED SURFACE ALBEDO
!       AIRIND   REFRACTIVE INDEX OF AIR [=1, WAVELENGTH INDEPENDET]
!       WATIND   REFRACTIVE INDEX OF WATER [WAVELENGTH DEPENDENT]
!       LAMBER   LOGICAL FLAG, .TRUE. FOR LAMBERTIAN SURFACE.
      REAL RFL,ALBD,AIRIND,WATIND
      LOGICAL LAMBER

!     LOCAL VARIABLES:
      REAL CC,TT,T2
!@60        T2=1.2976-0.3485*WATIND+0.0604*WATIND*WATIND
      T2=1.3421-0.5033*WATIND+0.1532*WATIND*WATIND
      IF(LAMBER)THEN
          TT=T2
      ELSE
          TT=1.
      ENDIF
      CC=(AIRIND/WATIND)**2
      MULTRF=RFL*TT*TT/(1-(1-CC)*ALBD)+(1-T2)
      RETURN
      END

      SUBROUTINE WATDAT(WAVLEN,WATIND,WATABS)

!     WATDAT RETURNS THE REFRACTIVE INDEX AND ABSORPTION COEFFICIENT
!     (1/M) FOR LIQUID WATER AT AN INPUT WAVELENGTH IN MICRON.
      IMPLICIT NONE

!     PARAMETERS:
!       E6_4PI   FOUR PI TIMES 1E6.
      REAL E6_4PI
      PARAMETER(E6_4PI=12566371.)

!     INPUT ARGUMENTS:
!       WAVLEN   WAVELENGTH IN MICRON.
      REAL WAVLEN

!     OUTPUT ARGUMENTS:
!       WATIND   LIQUID WATER REFRACTIVE INDEX.
!       WATABS   LIQUID WATER ABSORPTION COEFFICIENT [1/M].
      REAL WATIND,WATABS

!     LOCAL VARIABLES:
!       FWAV     WAVELENGTH INTERPOLATION FACTOR.
      INTEGER I,IMIN,IMAX
      REAL FWAV

!     DATA:
      REAL WWAVE(1261),WREAL(1261),WIMAG(1261)
      DATA (WWAVE(I),I=   1,  90)/                                      &
     &   1.000E-02,  1.099E-02,  1.199E-02,  1.300E-02,  1.400E-02,     &
     &   1.600E-02,  1.799E-02,  2.000E-02,  2.198E-02,  2.399E-02,     &
     &   2.600E-02,  2.799E-02,  2.999E-02,  3.199E-02,  3.396E-02,     &
     &   3.597E-02,  3.802E-02,  3.999E-02,  4.198E-02,  4.395E-02,     &
     &   4.603E-02,  4.797E-02,  5.000E-02,  5.200E-02,  5.395E-02,     &
     &   5.598E-02,  5.794E-02,  5.998E-02,  6.194E-02,  6.397E-02,     &
     &   6.607E-02,  6.808E-02,  6.998E-02,  7.194E-02,  7.396E-02,     &
     &   7.603E-02,  7.798E-02,  7.998E-02,  8.204E-02,  8.395E-02,     &
     &   8.590E-02,  8.790E-02,  8.995E-02,  9.204E-02,  9.397E-02,     &
     &   9.594E-02,  9.795E-02,  1.000E-01,  1.021E-01,  1.040E-01,     &
     &   1.059E-01,  1.079E-01,  1.099E-01,  1.119E-01,  1.140E-01,     &
     &   1.159E-01,  1.180E-01,  1.199E-01,  1.219E-01,  1.239E-01,     &
     &   1.259E-01,  1.279E-01,  1.300E-01,  1.321E-01,  1.340E-01,     &
     &   1.361E-01,  1.380E-01,  1.400E-01,  1.419E-01,  1.439E-01,     &
     &   1.459E-01,  1.479E-01,  1.500E-01,  1.521E-01,  1.542E-01,     &
     &   1.560E-01,  1.581E-01,  1.600E-01,  1.622E-01,  1.641E-01,     &
     &   1.660E-01,  1.679E-01,  1.698E-01,  1.722E-01,  1.742E-01,     &
     &   1.750E-01,  1.799E-01,  1.849E-01,  1.901E-01,  1.950E-01/
      DATA (WREAL(I),I=   1,  90)/                                      &
     &    0.968416,   0.964778,   0.960953,   0.956954,   0.952792,     &
     &    0.944124,   0.934744,   0.924583,   0.913973,   0.902694,     &
     &    0.890837,   0.878766,   0.866493,   0.854141,   0.842171,     &
     &    0.830720,   0.819753,   0.809997,   0.802291,   0.797737,     &
     &    0.797007,   0.805579,   0.820742,   0.830957,   0.835240,     &
     &    0.835295,   0.831628,   0.830901,   0.840575,   0.866994,     &
     &    0.903527,   0.941801,   0.981692,   1.020921,   1.049744,     &
     &    1.068724,   1.087685,   1.111682,   1.140628,   1.173382,     &
     &    1.214969,   1.259495,   1.302663,   1.346760,   1.387639,     &
     &    1.425425,   1.455868,   1.476628,   1.493473,   1.506677,     &
     &    1.516305,   1.523589,   1.528933,   1.535363,   1.543211,     &
     &    1.548070,   1.553435,   1.560870,   1.570304,   1.584638,     &
     &    1.606068,   1.626822,   1.633849,   1.619420,   1.586268,     &
     &    1.536403,   1.496271,   1.471129,   1.461485,   1.460977,     &
     &    1.469275,   1.489551,   1.521276,   1.559942,   1.596861,     &
     &    1.620422,   1.641473,   1.650184,   1.652917,   1.653100,     &
     &    1.647245,   1.635062,   1.605555,   1.568183,   1.549412,     &
     &    1.543062,   1.513343,   1.491881,   1.475183,   1.462543/
      DATA (WIMAG(I),I=   1,  90)/                                      &
     &   1.745E-03,  2.370E-03,  3.146E-03,  4.072E-03,  5.174E-03,     &
     &   7.958E-03,  1.164E-02,  1.636E-02,  2.227E-02,  2.950E-02,     &
     &   3.818E-02,  4.851E-02,  6.064E-02,  7.461E-02,  9.074E-02,     &
     &   1.093E-01,  1.303E-01,  1.534E-01,  1.798E-01,  2.088E-01,     &
     &   2.414E-01,  2.766E-01,  2.998E-01,  3.153E-01,  3.310E-01,     &
     &   3.498E-01,  3.739E-01,  4.119E-01,  4.558E-01,  5.033E-01,     &
     &   5.355E-01,  5.634E-01,  5.791E-01,  5.859E-01,  5.805E-01,     &
     &   5.859E-01,  5.981E-01,  6.135E-01,  6.292E-01,  6.453E-01,     &
     &   6.573E-01,  6.573E-01,  6.528E-01,  6.439E-01,  6.292E-01,     &
     &   6.050E-01,  5.752E-01,  5.430E-01,  5.185E-01,  4.929E-01,     &
     &   4.707E-01,  4.485E-01,  4.303E-01,  4.148E-01,  3.988E-01,     &
     &   3.826E-01,  3.705E-01,  3.596E-01,  3.490E-01,  3.387E-01,     &
     &   3.220E-01,  2.876E-01,  2.392E-01,  1.870E-01,  1.489E-01,     &
     &   1.333E-01,  1.422E-01,  1.678E-01,  1.927E-01,  2.167E-01,     &
     &   2.409E-01,  2.641E-01,  2.772E-01,  2.772E-01,  2.581E-01,     &
     &   2.338E-01,  2.022E-01,  1.670E-01,  1.351E-01,  1.039E-01,     &
     &   7.241E-02,  3.998E-02,  3.998E-03,  2.004E-03,  1.182E-03,     &
     &   8.391E-04,  5.995E-05,  1.250E-06,  3.622E-07,  1.850E-07/
      DATA (WWAVE(I),I=  91, 180)/                                      &
     &   2.000E-01,  2.051E-01,  2.099E-01,  2.148E-01,  2.198E-01,     &
     &   2.249E-01,  2.301E-01,  2.350E-01,  2.399E-01,  2.449E-01,     &
     &   2.500E-01,  2.553E-01,  2.600E-01,  2.649E-01,  2.698E-01,     &
     &   2.748E-01,  2.799E-01,  2.851E-01,  2.897E-01,  2.951E-01,     &
     &   2.999E-01,  3.048E-01,  3.097E-01,  3.148E-01,  3.199E-01,     &
     &   3.251E-01,  3.304E-01,  3.350E-01,  3.396E-01,  3.451E-01,     &
     &   3.499E-01,  3.548E-01,  3.597E-01,  3.648E-01,  3.698E-01,     &
     &   3.750E-01,  3.802E-01,  3.846E-01,  3.899E-01,  3.954E-01,     &
     &   3.999E-01,  4.046E-01,  4.102E-01,  4.150E-01,  4.198E-01,     &
     &   4.246E-01,  4.295E-01,  4.345E-01,  4.395E-01,  4.446E-01,     &
     &   4.498E-01,  4.550E-01,  4.603E-01,  4.645E-01,  4.699E-01,     &
     &   4.753E-01,  4.797E-01,  4.853E-01,  4.898E-01,  4.955E-01,     &
     &   5.000E-01,  5.047E-01,  5.105E-01,  5.152E-01,  5.200E-01,     &
     &   5.248E-01,  5.297E-01,  5.346E-01,  5.395E-01,  5.445E-01,     &
     &   5.495E-01,  5.546E-01,  5.598E-01,  5.649E-01,  5.702E-01,     &
     &   5.754E-01,  5.794E-01,  5.848E-01,  5.902E-01,  5.957E-01,     &
     &   5.998E-01,  6.053E-01,  6.095E-01,  6.152E-01,  6.194E-01,     &
     &   6.252E-01,  6.295E-01,  6.353E-01,  6.397E-01,  6.457E-01/
      DATA (WREAL(I),I=  91, 180)/                                      &
     &    1.451724,   1.442296,   1.434685,   1.427828,   1.421603,     &
     &    1.415921,   1.410702,   1.406358,   1.402321,   1.398535,     &
     &    1.394993,   1.391674,   1.388881,   1.386239,   1.383726,     &
     &    1.381341,   1.379072,   1.376902,   1.375086,   1.373098,     &
     &    1.371437,   1.369839,   1.368287,   1.366812,   1.365376,     &
     &    1.363990,   1.362616,   1.361513,   1.360441,   1.359231,     &
     &    1.358224,   1.357247,   1.356295,   1.355370,   1.354470,     &
     &    1.353594,   1.352740,   1.352046,   1.351231,   1.350438,     &
     &    1.349793,   1.349159,   1.348417,   1.347811,   1.347219,     &
     &    1.346636,   1.346066,   1.345505,   1.344956,   1.344418,     &
     &    1.343889,   1.343368,   1.342858,   1.342455,   1.341961,     &
     &    1.341475,   1.341093,   1.340620,   1.340248,   1.339791,     &
     &    1.339430,   1.339073,   1.338635,   1.338288,   1.337944,     &
     &    1.337607,   1.337273,   1.336943,   1.336615,   1.336292,     &
     &    1.335972,   1.335656,   1.335344,   1.335035,   1.334729,     &
     &    1.334425,   1.334200,   1.333902,   1.333609,   1.333316,     &
     &    1.333100,   1.332813,   1.332598,   1.332317,   1.332106,     &
     &    1.331826,   1.331619,   1.331345,   1.331144,   1.330877/
      DATA (WIMAG(I),I=  91, 180)/                                      &
     &   1.101E-07,  6.711E-08,  3.844E-08,  1.999E-08,  1.270E-08,     &
     &   1.158E-08,  1.101E-08,  1.071E-08,  1.049E-08,  9.904E-09,     &
     &   9.307E-09,  8.606E-09,  7.994E-09,  7.444E-09,  6.852E-09,     &
     &   6.292E-09,  5.791E-09,  5.405E-09,  4.795E-09,  4.403E-09,     &
     &   4.148E-09,  3.826E-09,  3.546E-09,  3.325E-09,  3.190E-09,     &
     &   3.082E-09,  2.984E-09,  2.883E-09,  2.766E-09,  2.653E-09,     &
     &   2.528E-09,  2.420E-09,  2.316E-09,  2.217E-09,  2.117E-09,     &
     &   2.031E-09,  1.940E-09,  1.840E-09,  1.761E-09,  1.663E-09,     &
     &   1.580E-09,  1.489E-09,  1.422E-09,  1.339E-09,  1.258E-09,     &
     &   1.169E-09,  1.088E-09,  1.018E-09,  9.393E-10,  8.685E-10,     &
     &   8.087E-10,  7.795E-10,  7.600E-10,  7.495E-10,  7.291E-10,     &
     &   7.011E-10,  7.092E-10,  7.158E-10,  7.342E-10,  7.849E-10,     &
     &   9.243E-10,  1.078E-09,  1.267E-09,  1.461E-09,  1.570E-09,     &
     &   1.640E-09,  1.757E-09,  1.887E-09,  2.098E-09,  2.269E-09,     &
     &   2.442E-09,  2.659E-09,  2.869E-09,  3.132E-09,  3.434E-09,     &
     &   3.844E-09,  4.434E-09,  5.221E-09,  6.365E-09,  7.723E-09,     &
     &   9.634E-09,  1.132E-08,  1.238E-08,  1.330E-08,  1.399E-08,     &
     &   1.472E-08,  1.502E-08,  1.552E-08,  1.570E-08,  1.606E-08/
      DATA (WWAVE(I),I= 181, 270)/                                      &
     &   6.501E-01,  6.546E-01,  6.607E-01,  6.653E-01,  6.699E-01,     &
     &   6.745E-01,  6.808E-01,  6.855E-01,  6.902E-01,  6.950E-01,     &
     &   6.998E-01,  7.047E-01,  7.096E-01,  7.145E-01,  7.194E-01,     &
     &   7.244E-01,  7.295E-01,  7.345E-01,  7.396E-01,  7.447E-01,     &
     &   7.499E-01,  7.551E-01,  7.603E-01,  7.656E-01,  7.691E-01,     &
     &   7.745E-01,  7.798E-01,  7.852E-01,  7.907E-01,  7.943E-01,     &
     &   7.998E-01,  8.054E-01,  8.091E-01,  8.147E-01,  8.204E-01,     &
     &   8.241E-01,  8.299E-01,  8.356E-01,  8.395E-01,  8.453E-01,     &
     &   8.492E-01,  8.551E-01,  8.590E-01,  8.650E-01,  8.710E-01,     &
     &   8.750E-01,  8.790E-01,  8.851E-01,  8.892E-01,  8.954E-01,     &
     &   8.995E-01,  9.057E-01,  9.099E-01,  9.141E-01,  9.204E-01,     &
     &   9.247E-01,  9.290E-01,  9.354E-01,  9.397E-01,  9.441E-01,     &
     &   9.506E-01,  9.550E-01,  9.594E-01,  9.661E-01,  9.705E-01,     &
     &   9.750E-01,  9.795E-01,  9.840E-01,  9.908E-01,  9.954E-01,     &
     &   1.000E+00,  1.009E+00,  1.021E+00,  1.030E+00,  1.040E+00,     &
     &   1.050E+00,  1.059E+00,  1.069E+00,  1.079E+00,  1.089E+00,     &
     &   1.099E+00,  1.109E+00,  1.119E+00,  1.130E+00,  1.140E+00,     &
     &   1.151E+00,  1.159E+00,  1.169E+00,  1.180E+00,  1.191E+00/
      DATA (WREAL(I),I= 181, 270)/                                      &
     &    1.330683,   1.330490,   1.330238,   1.330052,   1.329869,     &
     &    1.329690,   1.329452,   1.329278,   1.329106,   1.328938,     &
     &    1.328769,   1.328603,   1.328440,   1.328279,   1.328120,     &
     &    1.327963,   1.327808,   1.327652,   1.327502,   1.327350,     &
     &    1.327201,   1.327055,   1.326909,   1.326764,   1.326667,     &
     &    1.326524,   1.326382,   1.326244,   1.326104,   1.326012,     &
     &    1.325874,   1.325739,   1.325648,   1.325512,   1.325379,     &
     &    1.325290,   1.325157,   1.325025,   1.324937,   1.324805,     &
     &    1.324718,   1.324590,   1.324502,   1.324373,   1.324244,     &
     &    1.324159,   1.324074,   1.323946,   1.323859,   1.323732,     &
     &    1.323648,   1.323520,   1.323434,   1.323351,   1.323222,     &
     &    1.323138,   1.323054,   1.322926,   1.322842,   1.322757,     &
     &    1.322630,   1.322546,   1.322462,   1.322333,   1.322249,     &
     &    1.322165,   1.322080,   1.321994,   1.321866,   1.321780,     &
     &    1.321695,   1.321521,   1.321303,   1.321128,   1.320952,     &
     &    1.320775,   1.320596,   1.320416,   1.320233,   1.320051,     &
     &    1.319865,   1.319678,   1.319488,   1.319296,   1.319103,     &
     &    1.318909,   1.318763,   1.318566,   1.318366,   1.318162/
      DATA (WIMAG(I),I= 181, 270)/                                      &
     &   1.674E-08,  1.777E-08,  1.940E-08,  2.031E-08,  2.098E-08,     &
     &   2.177E-08,  2.300E-08,  2.471E-08,  2.653E-08,  2.963E-08,     &
     &   3.348E-08,  4.100E-08,  4.998E-08,  5.995E-08,  7.291E-08,     &
     &   9.137E-08,  1.150E-07,  1.348E-07,  1.458E-07,  1.530E-07,     &
     &   1.559E-07,  1.580E-07,  1.580E-07,  1.570E-07,  1.527E-07,     &
     &   1.478E-07,  1.409E-07,  1.339E-07,  1.282E-07,  1.258E-07,     &
     &   1.250E-07,  1.270E-07,  1.330E-07,  1.448E-07,  1.621E-07,     &
     &   1.819E-07,  2.041E-07,  2.243E-07,  2.459E-07,  2.690E-07,     &
     &   2.929E-07,  3.153E-07,  3.348E-07,  3.546E-07,  3.748E-07,     &
     &   3.907E-07,  4.053E-07,  4.234E-07,  4.403E-07,  4.622E-07,     &
     &   4.862E-07,  5.150E-07,  5.699E-07,  6.696E-07,  8.304E-07,     &
     &   1.060E-06,  1.368E-06,  1.771E-06,  2.169E-06,  2.557E-06,     &
     &   2.932E-06,  3.190E-06,  3.358E-06,  3.464E-06,  3.502E-06,     &
     &   3.480E-06,  3.418E-06,  3.336E-06,  3.253E-06,  3.131E-06,     &
     &   3.000E-06,  2.688E-06,  2.352E-06,  2.001E-06,  1.690E-06,     &
     &   1.419E-06,  1.299E-06,  1.259E-06,  1.329E-06,  1.499E-06,     &
     &   1.708E-06,  2.038E-06,  2.628E-06,  3.869E-06,  5.951E-06,     &
     &   9.306E-06,  1.069E-05,  1.120E-05,  1.160E-05,  1.181E-05/
      DATA (WWAVE(I),I= 271, 360)/                                      &
     &   1.199E+00,  1.211E+00,  1.219E+00,  1.230E+00,  1.239E+00,     &
     &   1.250E+00,  1.259E+00,  1.271E+00,  1.279E+00,  1.291E+00,     &
     &   1.300E+00,  1.309E+00,  1.321E+00,  1.330E+00,  1.340E+00,     &
     &   1.349E+00,  1.361E+00,  1.371E+00,  1.380E+00,  1.390E+00,     &
     &   1.400E+00,  1.409E+00,  1.419E+00,  1.429E+00,  1.439E+00,     &
     &   1.449E+00,  1.459E+00,  1.469E+00,  1.479E+00,  1.489E+00,     &
     &   1.500E+00,  1.510E+00,  1.521E+00,  1.531E+00,  1.542E+00,     &
     &   1.549E+00,  1.560E+00,  1.570E+00,  1.581E+00,  1.589E+00,     &
     &   1.600E+00,  1.611E+00,  1.622E+00,  1.629E+00,  1.641E+00,     &
     &   1.648E+00,  1.660E+00,  1.671E+00,  1.679E+00,  1.690E+00,     &
     &   1.698E+00,  1.710E+00,  1.722E+00,  1.730E+00,  1.742E+00,     &
     &   1.750E+00,  1.762E+00,  1.770E+00,  1.778E+00,  1.791E+00,     &
     &   1.799E+00,  1.811E+00,  1.820E+00,  1.828E+00,  1.841E+00,     &
     &   1.849E+00,  1.862E+00,  1.871E+00,  1.879E+00,  1.888E+00,     &
     &   1.901E+00,  1.910E+00,  1.919E+00,  1.932E+00,  1.941E+00,     &
     &   1.950E+00,  1.959E+00,  1.968E+00,  1.982E+00,  1.991E+00,     &
     &   2.000E+00,  2.009E+00,  2.018E+00,  2.028E+00,  2.042E+00,     &
     &   2.051E+00,  2.061E+00,  2.070E+00,  2.080E+00,  2.089E+00/
      DATA (WREAL(I),I= 271, 360)/                                      &
     &    1.318008,   1.317799,   1.317641,   1.317427,   1.317263,     &
     &    1.317042,   1.316873,   1.316645,   1.316470,   1.316233,     &
     &    1.316052,   1.315868,   1.315618,   1.315425,   1.315228,     &
     &    1.315031,   1.314760,   1.314547,   1.314329,   1.314104,     &
     &    1.313871,   1.313671,   1.313518,   1.313373,   1.313220,     &
     &    1.313055,   1.312888,   1.312715,   1.312525,   1.312318,     &
     &    1.312093,   1.311852,   1.311604,   1.311352,   1.311097,     &
     &    1.310923,   1.310659,   1.310387,   1.310114,   1.309928,     &
     &    1.309642,   1.309352,   1.309055,   1.308855,   1.308548,     &
     &    1.308341,   1.308021,   1.307672,   1.307435,   1.307073,     &
     &    1.306829,   1.306453,   1.306070,   1.305809,   1.305413,     &
     &    1.305142,   1.304727,   1.304442,   1.304155,   1.303718,     &
     &    1.303418,   1.302947,   1.302616,   1.302269,   1.301709,     &
     &    1.301291,   1.300633,   1.300214,   1.299860,   1.299545,     &
     &    1.298998,   1.298791,   1.298793,   1.298681,   1.298590,     &
     &    1.298472,   1.298308,   1.298051,   1.297607,   1.297292,     &
     &    1.296913,   1.296499,   1.296066,   1.295606,   1.294919,     &
     &    1.294457,   1.293973,   1.293476,   1.292966,   1.292438/
      DATA (WIMAG(I),I= 271, 360)/                                      &
     &   1.199E-05,  1.191E-05,  1.179E-05,  1.160E-05,  1.139E-05,     &
     &   1.100E-05,  1.079E-05,  1.090E-05,  1.139E-05,  1.221E-05,     &
     &   1.400E-05,  1.639E-05,  1.912E-05,  2.251E-05,  2.849E-05,     &
     &   4.047E-05,  4.505E-05,  5.804E-05,  7.802E-05,  1.060E-04,     &
     &   1.530E-04,  2.540E-04,  3.197E-04,  3.538E-04,  3.629E-04,     &
     &   3.637E-04,  3.604E-04,  3.387E-04,  3.018E-04,  2.659E-04,     &
     &   2.248E-04,  1.958E-04,  1.741E-04,  1.602E-04,  1.441E-04,     &
     &   1.348E-04,  1.240E-04,  1.140E-04,  1.071E-04,  9.940E-05,     &
     &   9.347E-05,  8.804E-05,  8.310E-05,  8.096E-05,  7.903E-05,     &
     &   7.591E-05,  7.398E-05,  7.404E-05,  7.495E-05,  7.601E-05,     &
     &   7.743E-05,  8.050E-05,  8.410E-05,  8.900E-05,  9.510E-05,     &
     &   1.000E-04,  1.051E-04,  1.120E-04,  1.219E-04,  1.330E-04,     &
     &   1.359E-04,  1.371E-04,  1.380E-04,  1.418E-04,  1.552E-04,     &
     &   1.861E-04,  3.205E-04,  5.209E-04,  7.224E-04,  9.221E-04,     &
     &   1.161E-03,  1.678E-03,  1.827E-03,  1.922E-03,  1.909E-03,     &
     &   1.848E-03,  1.717E-03,  1.548E-03,  1.402E-03,  1.250E-03,     &
     &   1.101E-03,  9.904E-04,  8.888E-04,  8.050E-04,  7.392E-04,     &
     &   6.742E-04,  6.206E-04,  5.725E-04,  5.294E-04,  4.884E-04/
      DATA (WWAVE(I),I= 361, 450)/                                      &
     &   2.099E+00,  2.109E+00,  2.118E+00,  2.128E+00,  2.138E+00,     &
     &   2.148E+00,  2.158E+00,  2.168E+00,  2.178E+00,  2.188E+00,     &
     &   2.198E+00,  2.208E+00,  2.218E+00,  2.228E+00,  2.239E+00,     &
     &   2.249E+00,  2.259E+00,  2.270E+00,  2.280E+00,  2.291E+00,     &
     &   2.301E+00,  2.312E+00,  2.317E+00,  2.328E+00,  2.339E+00,     &
     &   2.350E+00,  2.360E+00,  2.371E+00,  2.382E+00,  2.388E+00,     &
     &   2.399E+00,  2.410E+00,  2.421E+00,  2.432E+00,  2.438E+00,     &
     &   2.449E+00,  2.460E+00,  2.472E+00,  2.477E+00,  2.489E+00,     &
     &   2.500E+00,  2.512E+00,  2.518E+00,  2.529E+00,  2.541E+00,     &
     &   2.553E+00,  2.564E+00,  2.570E+00,  2.576E+00,  2.582E+00,     &
     &   2.588E+00,  2.594E+00,  2.606E+00,  2.612E+00,  2.618E+00,     &
     &   2.624E+00,  2.630E+00,  2.636E+00,  2.649E+00,  2.655E+00,     &
     &   2.661E+00,  2.667E+00,  2.673E+00,  2.679E+00,  2.685E+00,     &
     &   2.698E+00,  2.704E+00,  2.710E+00,  2.716E+00,  2.723E+00,     &
     &   2.729E+00,  2.742E+00,  2.748E+00,  2.754E+00,  2.761E+00,     &
     &   2.767E+00,  2.780E+00,  2.786E+00,  2.793E+00,  2.799E+00,     &
     &   2.812E+00,  2.818E+00,  2.825E+00,  2.831E+00,  2.838E+00,     &
     &   2.851E+00,  2.858E+00,  2.864E+00,  2.871E+00,  2.884E+00/
      DATA (WREAL(I),I= 361, 450)/                                      &
     &    1.291899,   1.291353,   1.290795,   1.290221,   1.289634,     &
     &    1.289033,   1.288418,   1.287787,   1.287139,   1.286474,     &
     &    1.285790,   1.285087,   1.284365,   1.283619,   1.282852,     &
     &    1.282064,   1.281256,   1.280421,   1.279561,   1.278675,     &
     &    1.277755,   1.276797,   1.276305,   1.275295,   1.274257,     &
     &    1.273184,   1.272062,   1.270902,   1.269682,   1.269059,     &
     &    1.267787,   1.266450,   1.265059,   1.263577,   1.262824,     &
     &    1.261297,   1.259683,   1.257969,   1.257102,   1.255347,     &
     &    1.253465,   1.251445,   1.250383,   1.248127,   1.245672,     &
     &    1.243014,   1.240167,   1.238670,   1.237089,   1.235426,     &
     &    1.233679,   1.231834,   1.227769,   1.225483,   1.223082,     &
     &    1.220535,   1.218078,   1.215699,   1.209954,   1.206519,     &
     &    1.202951,   1.199289,   1.195340,   1.191390,   1.188087,     &
     &    1.179962,   1.174582,   1.168874,   1.160993,   1.152876,     &
     &    1.149520,   1.142068,   1.136183,   1.132860,   1.131711,     &
     &    1.132778,   1.130913,   1.127959,   1.127558,   1.129478,     &
     &    1.128413,   1.125532,   1.125351,   1.127523,   1.133346,     &
     &    1.142386,   1.145545,   1.152284,   1.162372,   1.178446/
      DATA (WIMAG(I),I= 361, 450)/                                      &
     &   4.643E-04,  4.403E-04,  4.176E-04,  3.970E-04,  3.826E-04,     &
     &   3.705E-04,  3.587E-04,  3.506E-04,  3.434E-04,  3.395E-04,     &
     &   3.379E-04,  3.387E-04,  3.410E-04,  3.458E-04,  3.571E-04,     &
     &   3.739E-04,  3.898E-04,  4.081E-04,  4.293E-04,  4.506E-04,     &
     &   4.686E-04,  4.918E-04,  5.114E-04,  5.430E-04,  5.995E-04,     &
     &   6.365E-04,  6.852E-04,  7.427E-04,  7.921E-04,  8.488E-04,     &
     &   9.095E-04,  9.904E-04,  1.071E-03,  1.150E-03,  1.250E-03,     &
     &   1.348E-03,  1.472E-03,  1.580E-03,  1.709E-03,  1.810E-03,     &
     &   1.900E-03,  1.953E-03,  1.990E-03,  2.017E-03,  2.069E-03,     &
     &   2.142E-03,  2.269E-03,  2.311E-03,  2.338E-03,  2.387E-03,     &
     &   2.425E-03,  2.476E-03,  2.575E-03,  2.703E-03,  2.977E-03,     &
     &   3.302E-03,  4.016E-03,  4.363E-03,  4.828E-03,  5.368E-03,     &
     &   6.278E-03,  7.325E-03,  8.547E-03,  1.049E-02,  1.270E-02,     &
     &   1.451E-02,  1.640E-02,  1.861E-02,  2.050E-02,  2.817E-02,     &
     &   3.800E-02,  4.622E-02,  5.480E-02,  6.483E-02,  7.444E-02,     &
     &   8.352E-02,  9.285E-02,  1.020E-01,  1.119E-01,  1.210E-01,     &
     &   1.312E-01,  1.422E-01,  1.541E-01,  1.670E-01,  1.798E-01,     &
     &   1.940E-01,  2.060E-01,  2.182E-01,  2.290E-01,  2.392E-01/
      DATA (WWAVE(I),I= 451, 540)/                                      &
     &   2.891E+00,  2.897E+00,  2.904E+00,  2.917E+00,  2.924E+00,     &
     &   2.931E+00,  2.938E+00,  2.951E+00,  2.958E+00,  2.965E+00,     &
     &   2.979E+00,  2.985E+00,  2.999E+00,  3.048E+00,  3.097E+00,     &
     &   3.148E+00,  3.199E+00,  3.251E+00,  3.304E+00,  3.350E+00,     &
     &   3.396E+00,  3.451E+00,  3.499E+00,  3.548E+00,  3.597E+00,     &
     &   3.648E+00,  3.698E+00,  3.750E+00,  3.802E+00,  3.846E+00,     &
     &   3.899E+00,  3.954E+00,  3.999E+00,  4.046E+00,  4.102E+00,     &
     &   4.150E+00,  4.198E+00,  4.246E+00,  4.295E+00,  4.345E+00,     &
     &   4.395E+00,  4.446E+00,  4.498E+00,  4.550E+00,  4.603E+00,     &
     &   4.645E+00,  4.699E+00,  4.753E+00,  4.797E+00,  4.853E+00,     &
     &   4.898E+00,  4.955E+00,  5.000E+00,  5.047E+00,  5.105E+00,     &
     &   5.152E+00,  5.200E+00,  5.248E+00,  5.297E+00,  5.346E+00,     &
     &   5.395E+00,  5.445E+00,  5.495E+00,  5.546E+00,  5.598E+00,     &
     &   5.649E+00,  5.702E+00,  5.754E+00,  5.794E+00,  5.848E+00,     &
     &   5.902E+00,  5.957E+00,  5.998E+00,  6.053E+00,  6.095E+00,     &
     &   6.152E+00,  6.194E+00,  6.252E+00,  6.295E+00,  6.353E+00,     &
     &   6.397E+00,  6.457E+00,  6.501E+00,  6.546E+00,  6.607E+00,     &
     &   6.653E+00,  6.699E+00,  6.745E+00,  6.808E+00,  6.855E+00/
      DATA (WREAL(I),I= 451, 540)/                                      &
     &    1.185419,   1.195889,   1.208002,   1.229654,   1.240033,     &
     &    1.252073,   1.263935,   1.285942,   1.297762,   1.307891,     &
     &    1.326310,   1.334533,   1.352917,   1.411876,   1.452013,     &
     &    1.466753,   1.461522,   1.449409,   1.432585,   1.417064,     &
     &    1.404875,   1.393260,   1.384213,   1.376092,   1.368863,     &
     &    1.362546,   1.356937,   1.351891,   1.347393,   1.343958,     &
     &    1.340174,   1.336658,   1.333929,   1.331403,   1.328504,     &
     &    1.326183,   1.323997,   1.321906,   1.319948,   1.318113,     &
     &    1.316398,   1.314920,   1.313587,   1.312483,   1.311785,     &
     &    1.311588,   1.311451,   1.311148,   1.310657,   1.309721,     &
     &    1.308720,   1.307228,   1.305885,   1.304258,   1.301965,     &
     &    1.299910,   1.297550,   1.294933,   1.292117,   1.289015,     &
     &    1.285729,   1.282194,   1.278291,   1.273883,   1.268802,     &
     &    1.262994,   1.256584,   1.248370,   1.242239,   1.234896,     &
     &    1.229289,   1.231892,   1.242862,   1.268459,   1.295314,     &
     &    1.330121,   1.341605,   1.339863,   1.335754,   1.329242,     &
     &    1.325038,   1.320468,   1.317726,   1.314837,   1.311404,     &
     &    1.309021,   1.306716,   1.304521,   1.301901,   1.300125/
      DATA (WIMAG(I),I= 451, 540)/                                      &
     &   2.493E-01,  2.581E-01,  2.647E-01,  2.715E-01,  2.759E-01,     &
     &   2.798E-01,  2.804E-01,  2.824E-01,  2.817E-01,  2.785E-01,     &
     &   2.759E-01,  2.721E-01,  2.721E-01,  2.398E-01,  1.918E-01,     &
     &   1.348E-01,  9.243E-02,  6.106E-02,  3.688E-02,  2.611E-02,     &
     &   1.949E-02,  1.321E-02,  9.393E-03,  6.789E-03,  5.150E-03,     &
     &   4.234E-03,  3.596E-03,  3.402E-03,  3.402E-03,  3.530E-03,     &
     &   3.800E-03,  4.157E-03,  4.600E-03,  5.067E-03,  5.621E-03,     &
     &   6.220E-03,  6.883E-03,  7.600E-03,  8.449E-03,  9.307E-03,     &
     &   1.030E-02,  1.140E-02,  1.238E-02,  1.361E-02,  1.472E-02,     &
     &   1.548E-02,  1.570E-02,  1.552E-02,  1.499E-02,  1.441E-02,     &
     &   1.370E-02,  1.312E-02,  1.241E-02,  1.180E-02,  1.111E-02,     &
     &   1.061E-02,  1.011E-02,  9.904E-03,  9.790E-03,  9.881E-03,     &
     &   1.030E-02,  1.078E-02,  1.158E-02,  1.258E-02,  1.418E-02,     &
     &   1.659E-02,  2.031E-02,  2.482E-02,  3.295E-02,  4.323E-02,     &
     &   6.220E-02,  8.646E-02,  1.069E-01,  1.250E-01,  1.309E-01,     &
     &   1.172E-01,  8.786E-02,  6.947E-02,  5.699E-02,  4.952E-02,     &
     &   4.485E-02,  4.176E-02,  3.925E-02,  3.731E-02,  3.563E-02,     &
     &   3.450E-02,  3.371E-02,  3.310E-02,  3.272E-02,  3.242E-02/
      DATA (WWAVE(I),I= 541, 630)/                                      &
     &   6.902E+00,  6.950E+00,  6.998E+00,  7.047E+00,  7.096E+00,     &
     &   7.145E+00,  7.194E+00,  7.244E+00,  7.295E+00,  7.345E+00,     &
     &   7.396E+00,  7.447E+00,  7.499E+00,  7.551E+00,  7.603E+00,     &
     &   7.656E+00,  7.691E+00,  7.745E+00,  7.798E+00,  7.852E+00,     &
     &   7.907E+00,  7.943E+00,  7.998E+00,  8.054E+00,  8.091E+00,     &
     &   8.147E+00,  8.204E+00,  8.241E+00,  8.299E+00,  8.356E+00,     &
     &   8.395E+00,  8.453E+00,  8.492E+00,  8.551E+00,  8.590E+00,     &
     &   8.650E+00,  8.710E+00,  8.750E+00,  8.790E+00,  8.851E+00,     &
     &   8.892E+00,  8.954E+00,  8.995E+00,  9.057E+00,  9.099E+00,     &
     &   9.141E+00,  9.204E+00,  9.247E+00,  9.290E+00,  9.354E+00,     &
     &   9.397E+00,  9.441E+00,  9.506E+00,  9.550E+00,  9.594E+00,     &
     &   9.661E+00,  9.705E+00,  9.750E+00,  9.795E+00,  9.840E+00,     &
     &   9.908E+00,  9.954E+00,  1.000E+01,  1.005E+01,  1.009E+01,     &
     &   1.014E+01,  1.021E+01,  1.026E+01,  1.030E+01,  1.035E+01,     &
     &   1.040E+01,  1.045E+01,  1.050E+01,  1.054E+01,  1.059E+01,     &
     &   1.064E+01,  1.069E+01,  1.074E+01,  1.079E+01,  1.084E+01,     &
     &   1.089E+01,  1.094E+01,  1.099E+01,  1.104E+01,  1.109E+01,     &
     &   1.114E+01,  1.119E+01,  1.125E+01,  1.130E+01,  1.135E+01/
      DATA (WREAL(I),I= 541, 630)/                                      &
     &    1.298382,   1.296751,   1.295193,   1.293609,   1.292093,     &
     &    1.290696,   1.289296,   1.287944,   1.286624,   1.285242,     &
     &    1.283912,   1.282606,   1.281248,   1.279895,   1.278508,     &
     &    1.277123,   1.276220,   1.274794,   1.273363,   1.271952,     &
     &    1.270543,   1.269613,   1.268163,   1.266657,   1.265652,     &
     &    1.264125,   1.262564,   1.261488,   1.259903,   1.258240,     &
     &    1.257072,   1.255384,   1.254220,   1.252405,   1.251193,     &
     &    1.249353,   1.247433,   1.246095,   1.244791,   1.242789,     &
     &    1.241424,   1.239322,   1.237862,   1.235657,   1.234142,     &
     &    1.232659,   1.230259,   1.228589,   1.226967,   1.224439,     &
     &    1.222699,   1.220909,   1.218113,   1.216115,   1.214136,     &
     &    1.211068,   1.208909,   1.206729,   1.204471,   1.202228,     &
     &    1.198600,   1.195932,   1.193164,   1.190334,   1.187365,     &
     &    1.183900,   1.180893,   1.178360,   1.174182,   1.170827,     &
     &    1.167354,   1.163960,   1.160584,   1.157248,   1.153843,     &
     &    1.150368,   1.146959,   1.143601,   1.140345,   1.137372,     &
     &    1.134419,   1.131445,   1.128640,   1.125466,   1.122010,     &
     &    1.118841,   1.116059,   1.113289,   1.110334,   1.107674/
      DATA (WIMAG(I),I= 541, 630)/                                      &
     &   3.220E-02,  3.212E-02,  3.197E-02,  3.190E-02,  3.197E-02,     &
     &   3.205E-02,  3.205E-02,  3.220E-02,  3.220E-02,  3.227E-02,     &
     &   3.242E-02,  3.249E-02,  3.257E-02,  3.272E-02,  3.279E-02,     &
     &   3.302E-02,  3.310E-02,  3.325E-02,  3.348E-02,  3.371E-02,     &
     &   3.395E-02,  3.410E-02,  3.426E-02,  3.450E-02,  3.466E-02,     &
     &   3.490E-02,  3.514E-02,  3.530E-02,  3.563E-02,  3.579E-02,     &
     &   3.604E-02,  3.637E-02,  3.654E-02,  3.688E-02,  3.714E-02,     &
     &   3.748E-02,  3.783E-02,  3.809E-02,  3.844E-02,  3.880E-02,     &
     &   3.916E-02,  3.952E-02,  3.988E-02,  4.035E-02,  4.072E-02,     &
     &   4.110E-02,  4.148E-02,  4.196E-02,  4.234E-02,  4.293E-02,     &
     &   4.333E-02,  4.373E-02,  4.434E-02,  4.475E-02,  4.537E-02,     &
     &   4.600E-02,  4.664E-02,  4.718E-02,  4.784E-02,  4.851E-02,     &
     &   4.929E-02,  4.998E-02,  5.079E-02,  5.174E-02,  5.270E-02,     &
     &   5.380E-02,  5.805E-02,  5.634E-02,  5.845E-02,  5.995E-02,     &
     &   6.191E-02,  6.394E-02,  6.619E-02,  6.852E-02,  7.092E-02,     &
     &   7.359E-02,  7.652E-02,  7.958E-02,  8.294E-02,  8.646E-02,     &
     &   8.970E-02,  9.328E-02,  9.678E-02,  9.995E-02,  1.039E-01,     &
     &   1.083E-01,  1.129E-01,  1.172E-01,  1.218E-01,  1.270E-01/
      DATA (WWAVE(I),I= 631, 720)/                                      &
     &   1.140E+01,  1.146E+01,  1.151E+01,  1.156E+01,  1.159E+01,     &
     &   1.164E+01,  1.169E+01,  1.175E+01,  1.180E+01,  1.186E+01,     &
     &   1.191E+01,  1.194E+01,  1.199E+01,  1.205E+01,  1.211E+01,     &
     &   1.216E+01,  1.219E+01,  1.225E+01,  1.230E+01,  1.236E+01,     &
     &   1.239E+01,  1.245E+01,  1.250E+01,  1.256E+01,  1.259E+01,     &
     &   1.265E+01,  1.271E+01,  1.276E+01,  1.279E+01,  1.285E+01,     &
     &   1.291E+01,  1.294E+01,  1.300E+01,  1.306E+01,  1.309E+01,     &
     &   1.315E+01,  1.321E+01,  1.324E+01,  1.330E+01,  1.334E+01,     &
     &   1.340E+01,  1.346E+01,  1.349E+01,  1.355E+01,  1.361E+01,     &
     &   1.365E+01,  1.371E+01,  1.374E+01,  1.380E+01,  1.384E+01,     &
     &   1.390E+01,  1.396E+01,  1.400E+01,  1.406E+01,  1.409E+01,     &
     &   1.416E+01,  1.419E+01,  1.426E+01,  1.429E+01,  1.435E+01,     &
     &   1.439E+01,  1.445E+01,  1.449E+01,  1.455E+01,  1.459E+01,     &
     &   1.466E+01,  1.469E+01,  1.476E+01,  1.479E+01,  1.486E+01,     &
     &   1.489E+01,  1.496E+01,  1.500E+01,  1.507E+01,  1.510E+01,     &
     &   1.514E+01,  1.521E+01,  1.524E+01,  1.531E+01,  1.535E+01,     &
     &   1.542E+01,  1.545E+01,  1.549E+01,  1.556E+01,  1.560E+01,     &
     &   1.567E+01,  1.570E+01,  1.574E+01,  1.581E+01,  1.585E+01/
      DATA (WREAL(I),I= 631, 720)/                                      &
     &    1.105361,   1.103057,   1.100705,   1.097503,   1.096584,     &
     &    1.096068,   1.094339,   1.092339,   1.090622,   1.089062,     &
     &    1.086474,   1.086163,   1.087480,   1.087926,   1.087993,     &
     &    1.086723,   1.087212,   1.089721,   1.090913,   1.091270,     &
     &    1.092375,   1.095643,   1.098011,   1.099603,   1.100816,     &
     &    1.104624,   1.107403,   1.108999,   1.110319,   1.114243,     &
     &    1.116753,   1.118262,   1.122067,   1.124841,   1.126485,     &
     &    1.130583,   1.133825,   1.135773,   1.139515,   1.141428,     &
     &    1.145850,   1.149628,   1.151643,   1.156338,   1.160150,     &
     &    1.161869,   1.165763,   1.167947,   1.172049,   1.174089,     &
     &    1.178513,   1.182458,   1.184740,   1.189086,   1.191399,     &
     &    1.195603,   1.197623,   1.201594,   1.203552,   1.207465,     &
     &    1.209428,   1.213645,   1.215328,   1.218762,   1.220973,     &
     &    1.225566,   1.227627,   1.231631,   1.233597,   1.237500,     &
     &    1.239445,   1.243348,   1.245318,   1.249380,   1.251704,     &
     &    1.253631,   1.256977,   1.258880,   1.263173,   1.265082,     &
     &    1.268440,   1.270391,   1.272559,   1.276473,   1.278233,     &
     &    1.282639,   1.284709,   1.286576,   1.290576,   1.292723/
      DATA (WIMAG(I),I= 631, 720)/                                      &
     &   1.321E-01,  1.370E-01,  1.422E-01,  1.472E-01,  1.520E-01,     &
     &   1.570E-01,  1.621E-01,  1.678E-01,  1.741E-01,  1.802E-01,     &
     &   1.865E-01,  1.927E-01,  1.990E-01,  2.055E-01,  2.112E-01,     &
     &   2.177E-01,  2.238E-01,  2.295E-01,  2.359E-01,  2.420E-01,     &
     &   2.476E-01,  2.528E-01,  2.593E-01,  2.641E-01,  2.690E-01,     &
     &   2.740E-01,  2.791E-01,  2.837E-01,  2.883E-01,  2.929E-01,     &
     &   2.977E-01,  3.012E-01,  3.060E-01,  3.103E-01,  3.139E-01,     &
     &   3.183E-01,  3.227E-01,  3.257E-01,  3.295E-01,  3.325E-01,     &
     &   3.363E-01,  3.402E-01,  3.426E-01,  3.466E-01,  3.490E-01,     &
     &   3.514E-01,  3.546E-01,  3.571E-01,  3.596E-01,  3.621E-01,     &
     &   3.646E-01,  3.680E-01,  3.696E-01,  3.722E-01,  3.739E-01,     &
     &   3.757E-01,  3.774E-01,  3.791E-01,  3.809E-01,  3.826E-01,     &
     &   3.844E-01,  3.862E-01,  3.871E-01,  3.898E-01,  3.916E-01,     &
     &   3.934E-01,  3.943E-01,  3.961E-01,  3.970E-01,  3.988E-01,     &
     &   3.998E-01,  4.016E-01,  4.025E-01,  4.044E-01,  4.053E-01,     &
     &   4.053E-01,  4.072E-01,  4.081E-01,  4.100E-01,  4.100E-01,     &
     &   4.119E-01,  4.128E-01,  4.138E-01,  4.148E-01,  4.157E-01,     &
     &   4.176E-01,  4.176E-01,  4.186E-01,  4.196E-01,  4.205E-01/
      DATA (WWAVE(I),I= 721, 810)/                                      &
     &   1.589E+01,  1.596E+01,  1.600E+01,  1.603E+01,  1.611E+01,     &
     &   1.614E+01,  1.622E+01,  1.626E+01,  1.629E+01,  1.637E+01,     &
     &   1.641E+01,  1.644E+01,  1.648E+01,  1.656E+01,  1.660E+01,     &
     &   1.663E+01,  1.671E+01,  1.675E+01,  1.679E+01,  1.687E+01,     &
     &   1.690E+01,  1.694E+01,  1.698E+01,  1.706E+01,  1.710E+01,     &
     &   1.714E+01,  1.722E+01,  1.726E+01,  1.730E+01,  1.734E+01,     &
     &   1.742E+01,  1.746E+01,  1.750E+01,  1.754E+01,  1.762E+01,     &
     &   1.766E+01,  1.770E+01,  1.774E+01,  1.778E+01,  1.786E+01,     &
     &   1.791E+01,  1.795E+01,  1.799E+01,  1.803E+01,  1.811E+01,     &
     &   1.816E+01,  1.820E+01,  1.824E+01,  1.828E+01,  1.837E+01,     &
     &   1.841E+01,  1.845E+01,  1.849E+01,  1.854E+01,  1.862E+01,     &
     &   1.866E+01,  1.871E+01,  1.875E+01,  1.879E+01,  1.884E+01,     &
     &   1.888E+01,  1.897E+01,  1.901E+01,  1.905E+01,  1.910E+01,     &
     &   1.914E+01,  1.919E+01,  1.923E+01,  1.932E+01,  1.936E+01,     &
     &   1.941E+01,  1.945E+01,  1.950E+01,  1.954E+01,  1.959E+01,     &
     &   1.963E+01,  1.968E+01,  1.977E+01,  1.982E+01,  1.986E+01,     &
     &   1.991E+01,  1.995E+01,  2.000E+01,  2.099E+01,  2.198E+01,     &
     &   2.301E+01,  2.399E+01,  2.500E+01,  2.600E+01,  2.698E+01/
      DATA (WREAL(I),I= 721, 810)/                                      &
     &    1.294706,   1.298872,   1.301310,   1.303145,   1.306556,     &
     &    1.308540,   1.313112,   1.315327,   1.317122,   1.320901,     &
     &    1.322675,   1.324631,   1.326773,   1.330870,   1.333056,     &
     &    1.334869,   1.338869,   1.341074,   1.342949,   1.347481,     &
     &    1.349696,   1.351233,   1.352834,   1.356772,   1.359301,     &
     &    1.361083,   1.364655,   1.367219,   1.369211,   1.370751,     &
     &    1.374519,   1.376758,   1.378598,   1.380029,   1.383660,     &
     &    1.385875,   1.387734,   1.389417,   1.390838,   1.394313,     &
     &    1.396377,   1.398169,   1.399826,   1.401123,   1.404604,     &
     &    1.406786,   1.408657,   1.410419,   1.412092,   1.415276,     &
     &    1.417548,   1.419809,   1.421557,   1.422820,   1.426178,     &
     &    1.428308,   1.429982,   1.431240,   1.432797,   1.434643,     &
     &    1.435881,   1.439563,   1.441618,   1.442846,   1.444197,     &
     &    1.445486,   1.446666,   1.447502,   1.450255,   1.452188,     &
     &    1.453825,   1.455604,   1.456898,   1.457713,   1.458719,     &
     &    1.459690,   1.460391,   1.463349,   1.465400,   1.466543,     &
     &    1.467000,   1.467249,   1.467642,   1.483693,   1.499422,     &
     &    1.516402,   1.529309,   1.537967,   1.544080,   1.546670/
      DATA (WIMAG(I),I= 721, 810)/                                      &
     &   4.205E-01,  4.225E-01,  4.225E-01,  4.225E-01,  4.234E-01,     &
     &   4.244E-01,  4.254E-01,  4.254E-01,  4.254E-01,  4.264E-01,     &
     &   4.264E-01,  4.274E-01,  4.274E-01,  4.283E-01,  4.283E-01,     &
     &   4.283E-01,  4.293E-01,  4.293E-01,  4.293E-01,  4.303E-01,     &
     &   4.293E-01,  4.293E-01,  4.293E-01,  4.303E-01,  4.303E-01,     &
     &   4.293E-01,  4.303E-01,  4.303E-01,  4.293E-01,  4.293E-01,     &
     &   4.293E-01,  4.293E-01,  4.283E-01,  4.283E-01,  4.283E-01,     &
     &   4.283E-01,  4.274E-01,  4.274E-01,  4.264E-01,  4.274E-01,     &
     &   4.264E-01,  4.264E-01,  4.254E-01,  4.254E-01,  4.254E-01,     &
     &   4.254E-01,  4.244E-01,  4.244E-01,  4.234E-01,  4.234E-01,     &
     &   4.234E-01,  4.225E-01,  4.215E-01,  4.205E-01,  4.205E-01,     &
     &   4.196E-01,  4.186E-01,  4.176E-01,  4.176E-01,  4.167E-01,     &
     &   4.157E-01,  4.157E-01,  4.138E-01,  4.128E-01,  4.119E-01,     &
     &   4.110E-01,  4.100E-01,  4.091E-01,  4.091E-01,  4.081E-01,     &
     &   4.072E-01,  4.062E-01,  4.044E-01,  4.035E-01,  4.025E-01,     &
     &   4.016E-01,  4.007E-01,  4.007E-01,  3.988E-01,  3.970E-01,     &
     &   3.952E-01,  3.943E-01,  3.934E-01,  3.818E-01,  3.722E-01,     &
     &   3.629E-01,  3.482E-01,  3.356E-01,  3.227E-01,  3.103E-01/
      DATA (WWAVE(I),I= 811, 900)/                                      &
     &   2.799E+01,  2.897E+01,  2.999E+01,  3.097E+01,  3.199E+01,     &
     &   3.304E+01,  3.396E+01,  3.499E+01,  3.597E+01,  3.698E+01,     &
     &   3.802E+01,  3.899E+01,  3.999E+01,  4.102E+01,  4.198E+01,     &
     &   4.295E+01,  4.395E+01,  4.498E+01,  4.603E+01,  4.699E+01,     &
     &   4.797E+01,  4.898E+01,  5.000E+01,  5.200E+01,  5.395E+01,     &
     &   5.598E+01,  5.794E+01,  5.998E+01,  6.194E+01,  6.397E+01,     &
     &   6.607E+01,  6.808E+01,  6.998E+01,  7.194E+01,  7.396E+01,     &
     &   7.603E+01,  7.798E+01,  7.998E+01,  8.204E+01,  8.395E+01,     &
     &   8.590E+01,  8.790E+01,  8.995E+01,  9.204E+01,  9.397E+01,     &
     &   9.594E+01,  9.795E+01,  1.000E+02,  1.099E+02,  1.199E+02,     &
     &   1.300E+02,  1.400E+02,  1.500E+02,  1.600E+02,  1.698E+02,     &
     &   1.799E+02,  1.901E+02,  2.000E+02,  2.099E+02,  2.198E+02,     &
     &   2.301E+02,  2.399E+02,  2.500E+02,  2.600E+02,  2.698E+02,     &
     &   2.799E+02,  2.897E+02,  2.999E+02,  3.199E+02,  3.396E+02,     &
     &   3.597E+02,  3.802E+02,  3.999E+02,  4.198E+02,  4.395E+02,     &
     &   4.603E+02,  4.797E+02,  5.000E+02,  5.200E+02,  5.395E+02,     &
     &   5.598E+02,  5.794E+02,  5.998E+02,  6.501E+02,  6.998E+02,     &
     &   7.499E+02,  7.998E+02,  8.492E+02,  8.995E+02,  9.506E+02/
      DATA (WREAL(I),I= 811, 900)/                                      &
     &    1.546272,   1.542658,   1.535500,   1.527225,   1.519076,     &
     &    1.511879,   1.505906,   1.498932,   1.492960,   1.486740,     &
     &    1.481006,   1.478232,   1.476571,   1.475642,   1.477194,     &
     &    1.480747,   1.485266,   1.491543,   1.499424,   1.508821,     &
     &    1.520272,   1.531473,   1.542270,   1.567492,   1.594131,     &
     &    1.619157,   1.643739,   1.669053,   1.690223,   1.709762,     &
     &    1.729441,   1.747333,   1.762824,   1.777162,   1.790800,     &
     &    1.805539,   1.819110,   1.830882,   1.842330,   1.851943,     &
     &    1.859854,   1.867327,   1.874242,   1.880545,   1.886330,     &
     &    1.891384,   1.895435,   1.899131,   1.907505,   1.911671,     &
     &    1.919973,   1.927412,   1.934154,   1.941655,   1.948419,     &
     &    1.955736,   1.965156,   1.974559,   1.983438,   1.992287,     &
     &    2.001418,   2.010446,   2.020318,   2.029224,   2.037243,     &
     &    2.045135,   2.052476,   2.059773,   2.073976,   2.086956,     &
     &    2.099543,   2.112811,   2.125742,   2.139507,   2.153213,     &
     &    2.166254,   2.177335,   2.188736,   2.200349,   2.210869,     &
     &    2.220374,   2.228339,   2.236685,   2.254575,   2.270109,     &
     &    2.290196,   2.312599,   2.337241,   2.363856,   2.385313/
      DATA (WIMAG(I),I= 811, 900)/                                      &
     &   2.991E-01,  2.889E-01,  2.817E-01,  2.791E-01,  2.798E-01,     &
     &   2.830E-01,  2.863E-01,  2.916E-01,  2.991E-01,  3.068E-01,     &
     &   3.190E-01,  3.317E-01,  3.442E-01,  3.587E-01,  3.739E-01,     &
     &   3.880E-01,  4.025E-01,  4.176E-01,  4.323E-01,  4.465E-01,     &
     &   4.579E-01,  4.675E-01,  4.773E-01,  4.975E-01,  5.079E-01,     &
     &   5.162E-01,  5.233E-01,  5.258E-01,  5.246E-01,  5.246E-01,     &
     &   5.233E-01,  5.209E-01,  5.174E-01,  5.138E-01,  5.103E-01,     &
     &   5.079E-01,  5.021E-01,  4.964E-01,  4.907E-01,  4.839E-01,     &
     &   4.773E-01,  4.718E-01,  4.654E-01,  4.600E-01,  4.548E-01,     &
     &   4.485E-01,  4.434E-01,  4.383E-01,  4.176E-01,  4.167E-01,     &
     &   4.186E-01,  4.205E-01,  4.264E-01,  4.333E-01,  4.403E-01,     &
     &   4.506E-01,  4.611E-01,  4.697E-01,  4.784E-01,  4.873E-01,     &
     &   4.964E-01,  5.056E-01,  5.138E-01,  5.209E-01,  5.282E-01,     &
     &   5.355E-01,  5.430E-01,  5.505E-01,  5.660E-01,  5.805E-01,     &
     &   5.967E-01,  6.135E-01,  6.292E-01,  6.453E-01,  6.589E-01,     &
     &   6.727E-01,  6.852E-01,  6.995E-01,  7.125E-01,  7.241E-01,     &
     &   7.359E-01,  7.478E-01,  7.617E-01,  7.921E-01,  8.314E-01,     &
     &   8.725E-01,  9.116E-01,  9.501E-01,  9.835E-01,  1.011E+00/
      DATA (WWAVE(I),I= 901, 990)/                                      &
     &   1.000E+03,  1.100E+03,  1.200E+03,  1.300E+03,  1.400E+03,     &
     &   1.500E+03,  1.600E+03,  1.700E+03,  1.800E+03,  1.900E+03,     &
     &   2.000E+03,  2.100E+03,  2.200E+03,  2.300E+03,  2.400E+03,     &
     &   2.500E+03,  2.600E+03,  2.700E+03,  2.800E+03,  2.900E+03,     &
     &   3.000E+03,  3.100E+03,  3.200E+03,  3.300E+03,  3.400E+03,     &
     &   3.500E+03,  3.600E+03,  3.700E+03,  3.800E+03,  3.900E+03,     &
     &   4.000E+03,  4.100E+03,  4.200E+03,  4.300E+03,  4.400E+03,     &
     &   4.500E+03,  4.600E+03,  4.700E+03,  4.800E+03,  4.900E+03,     &
     &   5.000E+03,  5.100E+03,  5.200E+03,  5.300E+03,  5.400E+03,     &
     &   5.500E+03,  5.600E+03,  5.700E+03,  5.800E+03,  5.901E+03,     &
     &   6.001E+03,  6.100E+03,  6.200E+03,  6.299E+03,  6.400E+03,     &
     &   6.500E+03,  6.599E+03,  6.700E+03,  6.800E+03,  6.899E+03,     &
     &   7.000E+03,  7.101E+03,  7.199E+03,  7.300E+03,  7.399E+03,     &
     &   7.501E+03,  7.600E+03,  7.700E+03,  7.800E+03,  7.900E+03,     &
     &   8.000E+03,  8.100E+03,  8.200E+03,  8.300E+03,  8.400E+03,     &
     &   8.500E+03,  8.600E+03,  8.700E+03,  8.800E+03,  8.900E+03,     &
     &   9.000E+03,  9.100E+03,  9.200E+03,  9.300E+03,  9.400E+03,     &
     &   9.500E+03,  9.600E+03,  9.700E+03,  9.800E+03,  9.900E+03/
      DATA (WREAL(I),I= 901, 990)/                                      &
     &    2.399111,   2.436760,   2.481153,   2.527536,   2.577344,     &
     &    2.629097,   2.679108,   2.729264,   2.781861,   2.831974,     &
     &    2.881863,   2.933900,   2.983258,   3.032401,   3.084049,     &
     &    3.133464,   3.179887,   3.228984,   3.279470,   3.326631,     &
     &    3.374610,   3.422465,   3.468221,   3.516889,   3.563346,     &
     &    3.607096,   3.650102,   3.695213,   3.741930,   3.785136,     &
     &    3.829496,   3.873564,   3.917021,   3.960586,   4.003601,     &
     &    4.045111,   4.084851,   4.125763,   4.166540,   4.207585,     &
     &    4.248425,   4.288766,   4.328263,   4.367201,   4.403706,     &
     &    4.442443,   4.482558,   4.518750,   4.555811,   4.593558,     &
     &    4.631138,   4.667698,   4.704528,   4.740422,   4.776470,     &
     &    4.811400,   4.844068,   4.881015,   4.915201,   4.946351,     &
     &    4.979800,   5.013994,   5.047771,   5.083439,   5.116001,     &
     &    5.146161,   5.177179,   5.209531,   5.241539,   5.273172,     &
     &    5.304929,   5.336323,   5.367389,   5.398286,   5.428878,     &
     &    5.459208,   5.489262,   5.519027,   5.548489,   5.577699,     &
     &    5.606586,   5.635201,   5.663535,   5.691521,   5.719272,     &
     &    5.746661,   5.773802,   5.800631,   5.827179,   5.853423/
      DATA (WIMAG(I),I= 901, 990)/                                      &
     &   1.042E+00,  1.120E+00,  1.191E+00,  1.261E+00,  1.330E+00,     &
     &   1.393E+00,  1.452E+00,  1.511E+00,  1.567E+00,  1.617E+00,     &
     &   1.670E+00,  1.718E+00,  1.763E+00,  1.809E+00,  1.853E+00,     &
     &   1.891E+00,  1.931E+00,  1.973E+00,  2.009E+00,  2.043E+00,     &
     &   2.079E+00,  2.110E+00,  2.142E+00,  2.174E+00,  2.199E+00,     &
     &   2.228E+00,  2.255E+00,  2.286E+00,  2.310E+00,  2.333E+00,     &
     &   2.360E+00,  2.380E+00,  2.404E+00,  2.423E+00,  2.445E+00,     &
     &   2.460E+00,  2.481E+00,  2.500E+00,  2.518E+00,  2.535E+00,     &
     &   2.551E+00,  2.567E+00,  2.581E+00,  2.595E+00,  2.607E+00,     &
     &   2.625E+00,  2.636E+00,  2.647E+00,  2.662E+00,  2.671E+00,     &
     &   2.685E+00,  2.692E+00,  2.705E+00,  2.711E+00,  2.723E+00,     &
     &   2.727E+00,  2.737E+00,  2.747E+00,  2.750E+00,  2.758E+00,     &
     &   2.766E+00,  2.774E+00,  2.780E+00,  2.787E+00,  2.786E+00,     &
     &   2.792E+00,  2.796E+00,  2.801E+00,  2.805E+00,  2.808E+00,     &
     &   2.811E+00,  2.814E+00,  2.816E+00,  2.824E+00,  2.825E+00,     &
     &   2.826E+00,  2.827E+00,  2.827E+00,  2.833E+00,  2.833E+00,     &
     &   2.832E+00,  2.830E+00,  2.835E+00,  2.833E+00,  2.831E+00,     &
     &   2.835E+00,  2.832E+00,  2.835E+00,  2.831E+00,  2.828E+00/
      DATA (WWAVE(I),I= 991,1080)/                                      &
     &   1.000E+04,  1.100E+04,  1.200E+04,  1.300E+04,  1.400E+04,     &
     &   1.500E+04,  1.600E+04,  1.700E+04,  1.800E+04,  1.900E+04,     &
     &   2.000E+04,  2.100E+04,  2.200E+04,  2.300E+04,  2.400E+04,     &
     &   2.500E+04,  2.600E+04,  2.700E+04,  2.800E+04,  2.900E+04,     &
     &   3.000E+04,  3.100E+04,  3.200E+04,  3.300E+04,  3.400E+04,     &
     &   3.500E+04,  3.600E+04,  3.700E+04,  3.800E+04,  3.900E+04,     &
     &   4.000E+04,  4.100E+04,  4.200E+04,  4.300E+04,  4.400E+04,     &
     &   4.500E+04,  4.600E+04,  4.700E+04,  4.800E+04,  4.900E+04,     &
     &   5.000E+04,  5.100E+04,  5.200E+04,  5.300E+04,  5.400E+04,     &
     &   5.500E+04,  5.600E+04,  5.700E+04,  5.800E+04,  5.901E+04,     &
     &   6.001E+04,  6.100E+04,  6.200E+04,  6.299E+04,  6.400E+04,     &
     &   6.500E+04,  6.599E+04,  6.700E+04,  6.800E+04,  6.899E+04,     &
     &   7.000E+04,  7.101E+04,  7.199E+04,  7.300E+04,  7.399E+04,     &
     &   7.501E+04,  7.600E+04,  7.700E+04,  7.800E+04,  7.900E+04,     &
     &   8.000E+04,  8.100E+04,  8.200E+04,  8.300E+04,  8.400E+04,     &
     &   8.500E+04,  8.600E+04,  8.700E+04,  8.800E+04,  8.900E+04,     &
     &   8.999E+04,  9.099E+04,  9.200E+04,  9.300E+04,  9.399E+04,     &
     &   9.499E+04,  9.601E+04,  9.701E+04,  9.799E+04,  9.899E+04/
      DATA (WREAL(I),I= 991,1080)/                                      &
     &    5.879378,   6.131865,   6.346035,   6.538143,   6.711149,     &
     &    6.867192,   7.007965,   7.135674,   7.252419,   7.358822,     &
     &    7.455943,   7.544423,   7.625553,   7.701126,   7.768902,     &
     &    7.831158,   7.889643,   7.941322,   7.989355,   8.033791,     &
     &    8.074469,   8.112180,   8.147128,   8.179843,   8.209818,     &
     &    8.238281,   8.264599,   8.288448,   8.311297,   8.332788,     &
     &    8.352700,   8.371979,   8.389151,   8.405156,   8.420858,     &
     &    8.435660,   8.449912,   8.462521,   8.474673,   8.486470,     &
     &    8.497290,   8.507814,   8.517490,   8.526995,   8.535947,     &
     &    8.545560,   8.554652,   8.563363,   8.571605,   8.579613,     &
     &    8.587191,   8.594362,   8.601342,   8.607948,   8.614382,     &
     &    8.620473,   8.626323,   8.632030,   8.637431,   8.642623,     &
     &    8.647693,   8.652568,   8.657181,   8.661691,   8.666029,     &
     &    8.670273,   8.674287,   8.678217,   8.681999,   8.685638,     &
     &    8.689204,   8.692637,   8.695941,   8.699181,   8.702404,     &
     &    8.705507,   8.708553,   8.711486,   8.714366,   8.717139,     &
     &    8.719808,   8.722432,   8.725011,   8.727494,   8.729884,     &
     &    8.732236,   8.734549,   8.736776,   8.738919,   8.741029/
      DATA (WIMAG(I),I= 991,1080)/                                      &
     &   2.830E+00,  2.807E+00,  2.773E+00,  2.733E+00,  2.685E+00,     &
     &   2.630E+00,  2.576E+00,  2.519E+00,  2.461E+00,  2.397E+00,     &
     &   2.338E+00,  2.280E+00,  2.224E+00,  2.170E+00,  2.113E+00,     &
     &   2.064E+00,  2.011E+00,  1.961E+00,  1.914E+00,  1.868E+00,     &
     &   1.824E+00,  1.781E+00,  1.741E+00,  1.701E+00,  1.663E+00,     &
     &   1.627E+00,  1.591E+00,  1.557E+00,  1.525E+00,  1.493E+00,     &
     &   1.463E+00,  1.434E+00,  1.405E+00,  1.378E+00,  1.352E+00,     &
     &   1.327E+00,  1.302E+00,  1.278E+00,  1.256E+00,  1.233E+00,     &
     &   1.212E+00,  1.191E+00,  1.171E+00,  1.152E+00,  1.133E+00,     &
     &   1.115E+00,  1.097E+00,  1.080E+00,  1.063E+00,  1.047E+00,     &
     &   1.031E+00,  1.016E+00,  1.001E+00,  9.867E-01,  9.727E-01,     &
     &   9.589E-01,  9.456E-01,  9.328E-01,  9.202E-01,  9.078E-01,     &
     &   8.960E-01,  8.845E-01,  8.728E-01,  8.618E-01,  8.509E-01,     &
     &   8.406E-01,  8.302E-01,  8.201E-01,  8.104E-01,  8.007E-01,     &
     &   7.914E-01,  7.822E-01,  7.733E-01,  7.645E-01,  7.560E-01,     &
     &   7.476E-01,  7.394E-01,  7.314E-01,  7.236E-01,  7.159E-01,     &
     &   7.083E-01,  7.009E-01,  6.938E-01,  6.867E-01,  6.798E-01,     &
     &   6.730E-01,  6.663E-01,  6.598E-01,  6.534E-01,  6.471E-01/
      DATA (WWAVE(I),I=1081,1170)/                                      &
     &   1.000E+05,  1.099E+05,  1.199E+05,  1.300E+05,  1.400E+05,     &
     &   1.500E+05,  1.600E+05,  1.698E+05,  1.799E+05,  1.901E+05,     &
     &   2.000E+05,  2.099E+05,  2.198E+05,  2.301E+05,  2.399E+05,     &
     &   2.500E+05,  2.600E+05,  2.698E+05,  2.799E+05,  2.897E+05,     &
     &   2.999E+05,  3.097E+05,  3.199E+05,  3.304E+05,  3.396E+05,     &
     &   3.499E+05,  3.597E+05,  3.698E+05,  3.802E+05,  3.899E+05,     &
     &   3.999E+05,  4.102E+05,  4.198E+05,  4.295E+05,  4.395E+05,     &
     &   4.498E+05,  4.603E+05,  4.699E+05,  4.797E+05,  4.898E+05,     &
     &   5.000E+05,  5.105E+05,  5.200E+05,  5.297E+05,  5.395E+05,     &
     &   5.495E+05,  5.598E+05,  5.702E+05,  5.794E+05,  5.902E+05,     &
     &   5.998E+05,  6.095E+05,  6.194E+05,  6.295E+05,  6.397E+05,     &
     &   6.501E+05,  6.607E+05,  6.699E+05,  6.808E+05,  6.902E+05,     &
     &   6.998E+05,  7.096E+05,  7.194E+05,  7.295E+05,  7.396E+05,     &
     &   7.499E+05,  7.603E+05,  7.691E+05,  7.798E+05,  7.907E+05,     &
     &   7.998E+05,  8.091E+05,  8.204E+05,  8.299E+05,  8.395E+05,     &
     &   8.492E+05,  8.590E+05,  8.710E+05,  8.790E+05,  8.892E+05,     &
     &   8.995E+05,  9.099E+05,  9.204E+05,  9.290E+05,  9.397E+05,     &
     &   9.506E+05,  9.594E+05,  9.705E+05,  9.795E+05,  9.908E+05/
      DATA (WREAL(I),I=1081,1170)/                                      &
     &    8.743107,   8.761392,   8.776133,   8.788091,   8.797836,     &
     &    8.804337,   8.809677,   8.814082,   8.817867,   8.821129,     &
     &    8.823834,   8.826184,   8.828230,   8.830103,   8.831656,     &
     &    8.833091,   8.834348,   8.835449,   8.836475,   8.837375,     &
     &    8.838141,   8.838809,   8.839434,   8.840020,   8.840491,     &
     &    8.840974,   8.841394,   8.841790,   8.842166,   8.842491,     &
     &    8.842801,   8.843095,   8.843349,   8.843591,   8.843823,     &
     &    8.844044,   8.844254,   8.844436,   8.844609,   8.844776,     &
     &    8.844936,   8.845089,   8.845220,   8.845345,   8.845467,     &
     &    8.845583,   8.845696,   8.845804,   8.845896,   8.845997,     &
     &    8.846082,   8.846164,   8.846244,   8.846321,   8.846396,     &
     &    8.846468,   8.846538,   8.846596,   8.846662,   8.846716,     &
     &    8.846769,   8.846821,   8.846871,   8.846920,   8.846967,     &
     &    8.847013,   8.847058,   8.847094,   8.847137,   8.847178,     &
     &    8.847212,   8.847244,   8.847283,   8.847314,   8.847344,     &
     &    8.847374,   8.847403,   8.847437,   8.847459,   8.847485,     &
     &    8.847512,   8.847537,   8.847563,   8.847582,   8.847606,     &
     &    8.847630,   8.847648,   8.847671,   8.847688,   8.847710/
      DATA (WIMAG(I),I=1081,1170)/                                      &
     &   6.409E-01,  5.845E-01,  5.380E-01,  4.983E-01,  4.636E-01,     &
     &   4.337E-01,  4.073E-01,  3.837E-01,  3.630E-01,  3.448E-01,     &
     &   3.277E-01,  3.123E-01,  2.983E-01,  2.860E-01,  2.741E-01,     &
     &   2.634E-01,  2.535E-01,  2.441E-01,  2.356E-01,  2.274E-01,     &
     &   2.202E-01,  2.132E-01,  2.064E-01,  2.008E-01,  1.944E-01,     &
     &   1.891E-01,  1.840E-01,  1.790E-01,  1.745E-01,  1.701E-01,     &
     &   1.659E-01,  1.621E-01,  1.580E-01,  1.545E-01,  1.509E-01,     &
     &   1.478E-01,  1.448E-01,  1.415E-01,  1.386E-01,  1.358E-01,     &
     &   1.333E-01,  1.309E-01,  1.282E-01,  1.258E-01,  1.233E-01,     &
     &   1.213E-01,  1.191E-01,  1.172E-01,  1.150E-01,  1.132E-01,     &
     &   1.114E-01,  1.093E-01,  1.076E-01,  1.061E-01,  1.044E-01,     &
     &   1.030E-01,  1.013E-01,  9.995E-02,  9.858E-02,  9.700E-02,     &
     &   9.567E-02,  9.436E-02,  9.285E-02,  9.179E-02,  9.053E-02,     &
     &   8.929E-02,  8.827E-02,  8.705E-02,  8.586E-02,  8.488E-02,     &
     &   8.391E-02,  8.275E-02,  8.181E-02,  8.087E-02,  7.976E-02,     &
     &   7.885E-02,  7.795E-02,  7.723E-02,  7.617E-02,  7.547E-02,     &
     &   7.461E-02,  7.375E-02,  7.308E-02,  7.224E-02,  7.142E-02,     &
     &   7.076E-02,  6.995E-02,  6.931E-02,  6.852E-02,  6.804E-02/
      DATA (WWAVE(I),I=1171,1260)/                                      &
     &   1.000E+06,  1.099E+06,  1.199E+06,  1.300E+06,  1.400E+06,     &
     &   1.500E+06,  1.600E+06,  1.698E+06,  1.799E+06,  1.901E+06,     &
     &   2.000E+06,  2.099E+06,  2.198E+06,  2.301E+06,  2.399E+06,     &
     &   2.500E+06,  2.600E+06,  2.698E+06,  2.799E+06,  2.897E+06,     &
     &   2.999E+06,  3.097E+06,  3.199E+06,  3.304E+06,  3.396E+06,     &
     &   3.499E+06,  3.597E+06,  3.698E+06,  3.802E+06,  3.899E+06,     &
     &   3.999E+06,  4.102E+06,  4.198E+06,  4.295E+06,  4.395E+06,     &
     &   4.498E+06,  4.603E+06,  4.699E+06,  4.797E+06,  4.898E+06,     &
     &   5.000E+06,  5.105E+06,  5.200E+06,  5.297E+06,  5.395E+06,     &
     &   5.495E+06,  5.598E+06,  5.702E+06,  5.794E+06,  5.902E+06,     &
     &   5.998E+06,  6.095E+06,  6.194E+06,  6.295E+06,  6.397E+06,     &
     &   6.501E+06,  6.607E+06,  6.699E+06,  6.808E+06,  6.902E+06,     &
     &   6.998E+06,  7.096E+06,  7.194E+06,  7.295E+06,  7.396E+06,     &
     &   7.499E+06,  7.603E+06,  7.691E+06,  7.798E+06,  7.907E+06,     &
     &   7.998E+06,  8.091E+06,  8.204E+06,  8.299E+06,  8.395E+06,     &
     &   8.492E+06,  8.590E+06,  8.710E+06,  8.790E+06,  8.892E+06,     &
     &   8.995E+06,  9.099E+06,  9.204E+06,  9.290E+06,  9.397E+06,     &
     &   9.506E+06,  9.594E+06,  9.705E+06,  9.795E+06,  9.908E+06/
      DATA (WREAL(I),I=1171,1260)/                                      &
     &    8.847727,   8.847889,   8.848013,   8.848109,   8.848183,     &
     &    8.848243,   8.848291,   8.848330,   8.848364,   8.848392,     &
     &    8.848415,   8.848435,   8.848452,   8.848467,   8.848480,     &
     &    8.848491,   8.848501,   8.848510,   8.848518,   8.848524,     &
     &    8.848531,   8.848536,   8.848541,   8.848546,   8.848550,     &
     &    8.848554,   8.848557,   8.848560,   8.848563,   8.848566,     &
     &    8.848568,   8.848570,   8.848572,   8.848574,   8.848576,     &
     &    8.848577,   8.848579,   8.848580,   8.848581,   8.848582,     &
     &    8.848584,   8.848585,   8.848585,   8.848586,   8.848587,     &
     &    8.848588,   8.848589,   8.848589,   8.848590,   8.848591,     &
     &    8.848591,   8.848592,   8.848592,   8.848593,   8.848593,     &
     &    8.848594,   8.848594,   8.848594,   8.848595,   8.848595,     &
     &    8.848595,   8.848596,   8.848596,   8.848596,   8.848596,     &
     &    8.848597,   8.848597,   8.848597,   8.848597,   8.848598,     &
     &    8.848598,   8.848598,   8.848598,   8.848598,   8.848598,     &
     &    8.848598,   8.848599,   8.848599,   8.848599,   8.848599,     &
     &    8.848599,   8.848599,   8.848599,   8.848599,   8.848600,     &
     &    8.848600,   8.848600,   8.848600,   8.848600,   8.848600/
      DATA (WIMAG(I),I=1171,1260)/                                      &
     &   6.727E-02,  6.121E-02,  5.621E-02,  5.197E-02,  4.828E-02,     &
     &   4.506E-02,  4.234E-02,  3.979E-02,  3.765E-02,  3.571E-02,     &
     &   3.395E-02,  3.234E-02,  3.089E-02,  2.957E-02,  2.837E-02,     &
     &   2.721E-02,  2.623E-02,  2.522E-02,  2.437E-02,  2.348E-02,     &
     &   2.274E-02,  2.202E-02,  2.132E-02,  2.074E-02,  2.008E-02,     &
     &   1.953E-02,  1.900E-02,  1.848E-02,  1.802E-02,  1.757E-02,     &
     &   1.713E-02,  1.670E-02,  1.632E-02,  1.591E-02,  1.559E-02,     &
     &   1.523E-02,  1.492E-02,  1.458E-02,  1.428E-02,  1.399E-02,     &
     &   1.373E-02,  1.348E-02,  1.321E-02,  1.297E-02,  1.273E-02,     &
     &   1.250E-02,  1.227E-02,  1.207E-02,  1.185E-02,  1.166E-02,     &
     &   1.148E-02,  1.129E-02,  1.111E-02,  1.091E-02,  1.076E-02,     &
     &   1.061E-02,  1.044E-02,  1.030E-02,  1.016E-02,  9.995E-03,     &
     &   9.858E-03,  9.700E-03,  9.567E-03,  9.458E-03,  9.328E-03,     &
     &   9.200E-03,  9.095E-03,  8.949E-03,  8.847E-03,  8.746E-03,     &
     &   8.626E-03,  8.527E-03,  8.429E-03,  8.333E-03,  8.218E-03,     &
     &   8.124E-03,  8.031E-03,  7.958E-03,  7.849E-03,  7.759E-03,     &
     &   7.688E-03,  7.600E-03,  7.530E-03,  7.444E-03,  7.359E-03,     &
     &   7.291E-03,  7.208E-03,  7.142E-03,  7.060E-03,  7.011E-03/
      DATA (WWAVE(I),I=1261,1261)/                                      &
     &   1.000E+07/
      DATA (WREAL(I),I=1261,1261)/                                      &
     &    8.848600/
      DATA (WIMAG(I),I=1261,1261)/                                      &
     &   6.931E-03/

!     LOCATE THE WAVELENGTH
      IMIN=0
      IMAX=2
      DO WHILE(IMAX.LT.1261 .AND. IMIN.EQ.0)
          IF(WAVLEN.LT.WWAVE(IMAX))THEN
              IMIN=IMAX-1
          ELSE
              IMAX=IMAX+1
          ENDIF
      ENDDO

!     LIQUID WATER REFRACTIVE INDEX & ABSORPTION COEFFICIENT
      FWAV=(WAVLEN-WWAVE(IMIN))/(WWAVE(IMAX)-WWAVE(IMIN))
      WATIND=WREAL(IMIN)+FWAV*(WREAL(IMAX)-WREAL(IMIN))
      WATABS=E6_4PI*(WIMAG(IMIN)+FWAV*(WIMAG(IMAX)-WIMAG(IMIN)))/WAVLEN
      RETURN
      END

      LOGICAL FUNCTION RDBRDF(ILOSLO,NLOS,GSURF,DH2O,MLTRFL)

!     RDBRDF READS IN THE SURFACE BRDF (BIDIRECTIONAL REFLECTANCE
!     DISTRIBUTION FUNCTION) TYPE.  IF A PROBLEM OCCURS, A VALUE OF
!     FALSE IS RETURNED.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       ILOSLO   LOWER LIMIT ON LINE-OF-SIGHT PATH INDEX.
!       NLOS     NUMBER OF LINE-OF-SIGHT PATHS.
!       GSURF    LOGICAL FLAG, .TRUE. IF CURRENT SURFACE IS GROUND.
!       DH2O     WATER LAYER THICKNESS (mm)
!       MLTRFL   'T' MULTIPLE REFLECTION; 'F' SINGLE PASS EXTINCTION.
      INTEGER ILOSLO,NLOS
      LOGICAL GSURF,MLTRFL
      REAL    DH2O

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /JM4B1/
!       CBRDF   BRDF IDENTIFIER, INTEGER LABEL OR NAME.
      CHARACTER CBRDF*80
      COMMON/JM4B1/CBRDF

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     FUNCTIONS:
!       LENSTR   RETURNS STRING LENGTH AFTER TRIMMING LEADING BLANKS.
!       GTWAL    RETURNS TRUE IF WALTHALL BRDF IS SUCCESSFULLY ANALYZED.
!       GTBRDF   RETURNS TRUE IF BRDF IS SUCCESSFULLY INPUT & ANALYZED.
!       REFAMB   RETURNS BRDF FROM AMBRALS RUN.
!       REFWAL   RETURNS WALTHALL EMPIRICAL BRDF.
!       REFSW    RETURNS SHIBAYAMA-WIEGAND EMPIRICAL BRDF.
!       REFHAP   RETURNS HAPKE EMPIRICAL BRDF.
!       REFRAH   RETURNS RAHMAN SEMI-EMPIRICAL BRDF.
!       REFROU   RETURNS ROUJEAN SEMI-EMPIRICAL BRDF.
!       REFROS   RETURNS ROSS SEMI-EMPIRICAL BRDF.
!       REFLS    RETURNS LI-STRAHLER SEMI-EMPIRICAL BRDF.
!       REFDQ    RETURNS DYMOND-QI PHYSICAL BRDF.
!       REFPV    RETURNS PINTY-VERSTRAETE PHYSICAL BRDF.
!       REFRL    RETURNS ROSS-LI (RECIPROCAL ROSS THICK LI SPARSE)
!                        SEMI-EMPIRICAL BRDF.
!       REFWLS   RETURNS SINUSOIDAL WALTHALL EMPIRICAL BRDF.
      INTEGER LENSTR
      LOGICAL GTWAL,GTBRDF
!CXMK LOGICAL GTWAL,GTBRDF,GTCXMK
      REAL REFWAL,REFHAP,REFRAH,REFROU,REFPV,REFWLS,REFRL
!****************** VINCENT ROSS ADDED FOR SEA BRDF SUPPORT *************
#ifdef SEA_BRDF
      REAL SBRDF
#endif
********************** END VINCENT ROSS *********************************
!TODO REAL REFAMB,REFSW,REFROS,REFLS,REFDQ
      EXTERNAL REFWAL,REFHAP,REFRAH,REFROU,REFPV,REFWLS,REFRL
!****************** VINCENT ROSS ADDED FOR SEA BRDF SUPPORT *************
#ifdef SEA_BRDF
      EXTERNAL SBRDF
#endif
********************** END VINCENT ROSS *********************************
!TODO EXTERNAL REFAMB,REFSW,REFROS,REFLS,REFDQ

!     LOCAL VARIABLES:
!       ILOSHI   HIGHER LIMIT ON LINE-OF-SIGHT PATH INDEX.
!       ILOS0    INDEX OF CURRENT LINE-OF-SIGHT PATH.
!       LNBRDF   LENGTH OF BRDF IDENTIFIER STRING.
!       IOTEST   RESULT OF IOSTAT TEST IN INTERNAL READ.
      INTEGER ILOSHI,ILOS0,LNBRDF,IOTEST

!     DATA:
!       LBRDF    BRDF INTEGER LABEL.
!       IFRMT    FORMAT USED TO READ CSALB AS AN INTEGER.
      CHARACTER IFRMT*5
      INTEGER LBRDF
      SAVE LBRDF,IFRMT
      DATA LBRDF/0/,IFRMT/'(I  )'/

!     LOOP OVER LINE-OF-SIGHT PATHS:
      IF(GSURF)THEN

!         AREA-AVG'D SURFACE: ILOS0=1 ->IMAGED-PIXEL, ELSE ILOS0=MLOSP1.
          ILOSHI=ILOSLO
      ELSE

!         IMAGED-PIXEL(S):
          ILOSHI=NLOS
      ENDIF
      DO ILOS0=ILOSLO,ILOSHI

!         READ IN BRDF IDENTIFIER:
          IF(LJMASS)THEN
              CALL INITCD('CARD4B1')
          ELSE
              READ(IRD,'(A80)')CBRDF
          ENDIF

!         TRIM TRAILING COMMENTS AND LEADING/TRAILING BLANKS:
          LNBRDF=INDEX(CBRDF,'!')-1
          IF(LNBRDF.LT.0)THEN
              LNBRDF=LENSTR(CBRDF)
          ELSEIF(LNBRDF.GT.0)THEN
              LNBRDF=LENSTR(CBRDF(1:LNBRDF))
          ENDIF
          IF(LNBRDF.LE.0)THEN
              WRITE(IPR,'(/2A,/18X,3A)')' Error in RDBRDF: ',           &
     &          ' BRDF identifier is blank.',' CBRDF="',CBRDF,'"'
              RDBRDF=.FALSE.
              RETURN
          ENDIF

!         CHECK IF IDENTIFIER IS AN INTEGER:
          WRITE(IFRMT(3:4),'(I2.2)')LNBRDF
          READ(CBRDF(1:LNBRDF),IFRMT,IOSTAT=IOTEST)LBRDF
          IF(IOTEST.NE.0)LBRDF=0

!         BRANCH TO APPROPRIATE BRDF ROUTINE:
          CALL UPCASE(CBRDF)
          IF(LBRDF.EQ.1 .OR. CBRDF(1:LNBRDF).EQ.'AMBRALS')THEN

!             AMBRALS:
              IF(.NOT.LJMASS)WRITE(IPR,'(/A)')' Error in RDBRDF: '      &
     &          //' AMBRALS option currently unavailable.'
              RDBRDF=.FALSE.
          ELSEIF(LBRDF.EQ.2 .OR. CBRDF(1:LNBRDF).EQ.'WALTHALL')THEN

!             WALTHALL:
              IF(.NOT.LJMASS)THEN
                  IF(.NOT.GSURF)THEN
                      WRITE(IPR,'(/A,I3)')' WALTHALL model'             &
     &                  //' BRDF for Surface No.',ILOS0
                  ELSEIF(ILOS0.EQ.1)THEN
                      WRITE(IPR,'(/A)')' WALTHALL model'                &
     &                  //' BRDF for Uniform (Homogeneous) Surface.'
                  ELSE
                      WRITE(IPR,'(/A)')' WALTHALL model'                &
     &                  //' BRDF for Area-Averaged Surface.'
                  ENDIF
              ENDIF
              RDBRDF=GTBRDF(4,REFWAL,ILOS0,NLOS,GSURF,DH2O,MLTRFL)
          ELSEIF(LBRDF.EQ.3 .OR.                                        &
     &      CBRDF(1:LNBRDF).EQ.'SHIBAYAMA-WIEGAND')THEN

!             SHIBAYAMA-WIEGAND:
              IF(.NOT.LJMASS)WRITE(IPR,'(/A)')' Error in RDBRDF: '      &
     &          //' SHIBAYAMA WIEGAND option currently unavailable.'
              RDBRDF=.FALSE.
          ELSEIF(LBRDF.EQ.4 .OR. CBRDF(1:LNBRDF).EQ.'HAPKE')THEN

!             HAPKE:
              IF(.NOT.LJMASS)THEN
                  IF(.NOT.GSURF)THEN
                      WRITE(IPR,'(/A,I3)')' HAPKE model'                &
     &                  //' BRDF for Surface No.',ILOS0
                  ELSEIF(ILOS0.EQ.1)THEN
                      WRITE(IPR,'(/A)')' HAPKE model'                   &
     &                  //' BRDF for Uniform (Homogeneous) Surface.'
                  ELSE
                      WRITE(IPR,'(/A)')' HAPKE model'                   &
     &                  //' BRDF for Area-Averaged Surface.'
                  ENDIF
              ENDIF
              RDBRDF=GTBRDF(4,REFHAP,ILOS0,NLOS,GSURF,DH2O,MLTRFL)
          ELSEIF(LBRDF.EQ.5 .OR. CBRDF(1:LNBRDF).EQ.'RAHMAN')THEN

!             RAHMAN:
              IF(.NOT.LJMASS)THEN
                  IF(.NOT.GSURF)THEN
                      WRITE(IPR,'(/A,I3)')' RAHMAN model'               &
     &                  //' BRDF for Surface No.',ILOS0
                  ELSEIF(ILOS0.EQ.1)THEN
                      WRITE(IPR,'(/A)')' RAHMAN model'                  &
     &                  //' BRDF for Uniform (Homogeneous) Surface.'
                  ELSE
                      WRITE(IPR,'(/A)')' RAHMAN model'                  &
     &                  //' BRDF for Area-Averaged Surface.'
                  ENDIF
              ENDIF
              RDBRDF=GTBRDF(3,REFRAH,ILOS0,NLOS,GSURF,DH2O,MLTRFL)
          ELSEIF(LBRDF.EQ.6 .OR. CBRDF(1:LNBRDF).EQ.'ROUJEAN')THEN

!             ROUJEAN:
              IF(.NOT.LJMASS)WRITE(IPR,'(/A)')' ROUJEAN MODEL BRDF'
              IF(.NOT.LJMASS)THEN
                  IF(.NOT.GSURF)THEN
                      WRITE(IPR,'(/A,I3)')' ROUJEAN model'              &
     &                  //' BRDF for Surface No.',ILOS0
                  ELSEIF(ILOS0.EQ.1)THEN
                      WRITE(IPR,'(/A)')' ROUJEAN model'                 &
     &                  //' BRDF for Uniform (Homogeneous) Surface.'
                  ELSE
                      WRITE(IPR,'(/A)')' ROUJEAN model'                 &
     &                  //' BRDF for Area-Averaged Surface.'
                  ENDIF
              ENDIF
              RDBRDF=GTBRDF(3,REFROU,ILOS0,NLOS,GSURF,DH2O,MLTRFL)
          ELSEIF(LBRDF.EQ.7 .OR. CBRDF(1:LNBRDF).EQ.'ROSS')THEN

!             ROSS:
              IF(.NOT.LJMASS)WRITE(IPR,'(/A)')' Error in RDBRDF: '      &
     &          //' ROSS option currently unavailable.'
              RDBRDF=.FALSE.
          ELSEIF(LBRDF.EQ.8 .OR. CBRDF(1:LNBRDF).EQ.'LI-STRAHLER')THEN

!             LI STRAHLER:
              IF(.NOT.LJMASS)WRITE(IPR,'(/A)')' Error in RDBRDF: '      &
     &          //' LI STRAHLER option currently unavailable.'
              RDBRDF=.FALSE.
          ELSEIF(LBRDF.EQ.9 .OR. CBRDF(1:LNBRDF).EQ.'DYMOND-QI')THEN

!             DYMOND QI:
              IF(.NOT.LJMASS)WRITE(IPR,'(/A)')' Error in RDBRDF: '      &
     &          //' DYMOND QI option currently unavailable.'
              RDBRDF=.FALSE.
          ELSEIF(LBRDF.EQ.10 .OR.                                       &
     &      CBRDF(1:LNBRDF).EQ.'PINTY-VERSTRAETE')THEN

!             PINTY VERSTRAETE:
              IF(.NOT.LJMASS)THEN
                  IF(.NOT.GSURF)THEN
                      WRITE(IPR,'(/A,I3)')' PINTY-VERSTRAETE model'     &
     &                  //' BRDF for Surface No.',ILOS0
                  ELSEIF(ILOS0.EQ.1)THEN
                      WRITE(IPR,'(/A)')' PINTY-VERSTRAETE model'        &
     &                  //' BRDF for Uniform (Homogeneous) Surface.'
                  ELSE
                      WRITE(IPR,'(/A)')' PINTY-VERSTRAETE model'        &
     &                  //' BRDF for Area-Averaged Surface.'
                  ENDIF
              ENDIF
              RDBRDF=GTBRDF(4,REFPV,ILOS0,NLOS,GSURF,DH2O,MLTRFL)
          ELSEIF(LBRDF.EQ.11 .OR.                                       &
     &      CBRDF(1:LNBRDF).EQ.'SINE-WALTHALL')THEN

!             SINUSOIDAL WALTHALL:
              IF(.NOT.LJMASS)THEN
                  IF(.NOT.GSURF)THEN
                      WRITE(IPR,'(/A,I3)')' SINUSOIDAL WALTHALL model'  &
     &                  //' BRDF for Surface No.',ILOS0
                  ELSEIF(ILOS0.EQ.1)THEN
                      WRITE(IPR,'(/A)')' SINUSOIDAL WALTHALL model'     &
     &                  //' BRDF for Uniform (Homogeneous) Surface.'
                  ELSE
                      WRITE(IPR,'(/A)')' SINUSOIDAL WALTHALL model'     &
     &                  //' BRDF for Area-Averaged Surface.'
                  ENDIF
              ENDIF
              RDBRDF=GTBRDF(4,REFWLS,ILOS0,NLOS,GSURF,DH2O,MLTRFL)
          ELSEIF(LBRDF.EQ.12 .OR. CBRDF(1:LNBRDF).EQ.'ROSS-LI')THEN

!             ROSS-LI (RECIPROCAL ROSS THICK - LI SPARSE):
              IF(.NOT.LJMASS)THEN
                  IF(.NOT.GSURF)THEN
                      WRITE(IPR,'(/A,I3)')' ROSS-LI model'              &
     &                  //' BRDF for Surface No.',ILOS0
                  ELSEIF(ILOS0.EQ.1)THEN
                      WRITE(IPR,'(/A)')' ROSS-LI model'                 &
     &                  //' BRDF for Uniform (Homogeneous) Surface.'
                  ELSE
                      WRITE(IPR,'(/A)')' ROSS-LI model'                 &
     &                  //' BRDF for Area-Averaged Surface.'
                  ENDIF
              ENDIF
              RDBRDF=GTBRDF(5,REFRL,ILOS0,NLOS,GSURF,DH2O,MLTRFL)
          ELSEIF(LBRDF.EQ.51 .OR. CBRDF(1:LNBRDF).EQ.'WALTHALL(A)')THEN

!             WALTHALL (ANALYTICALLY INTEGRATED - NO BRDF < 0 CHECK):
              IF(.NOT.LJMASS)THEN
                  IF(.NOT.GSURF)THEN
                      WRITE(IPR,'(/A,I3)')' (Analytically Integrated)'  &
     &                  //' WALTHALL model BRDF for Surface No.',ILOS0
                  ELSEIF(ILOS0.EQ.1)THEN
                      WRITE(IPR,'(/A)')                                 &
     &                  ' (Analytically Integrated) WALTHALL model'     &
     &                  //' BRDF for Uniform (Homogeneous) Surface.'
                  ELSE
                      WRITE(IPR,'(/A)')                                 &
     &                  ' (Analytically Integrated) WALTHALL model'     &
     &                  //' BRDF for Area-Averaged Surface.'
                  ENDIF
              ENDIF
              RDBRDF=GTWAL(4,ILOS0,NLOS,GSURF,.FALSE.)
          ELSEIF(LBRDF.EQ.52 .OR.                                       &
     &      CBRDF(1:LNBRDF).EQ.'SINE-WALTHALL(A)')THEN

!             SINUSOIDAL WALTHALL
!             (ANALYTICALLY INTEGRATED - NO NEGATIVE BRDF CHECK):
              IF(.NOT.LJMASS)WRITE(IPR,'(/A)')' SINUSOIDAL-WALTHALL'//  &
     &          ' MODEL BRDF (Analytically integrated)'
              IF(.NOT.LJMASS)THEN
                  IF(.NOT.GSURF)THEN
                      WRITE(IPR,'(/A,I3)')                              &
     &                  ' (Analytically Integrated) SINUSOIODAL'        &
     &                  //'-WALTHALL model BRDF for Surface No.',ILOS0
                  ELSEIF(ILOS0.EQ.1)THEN
                      WRITE(IPR,'(/2A)')' (Analytically Integrated)',   &
     &                  ' SINUSOIODAL-WALTHALL model BRDF for'          &
     &                  //' Uniform (Homogeneous) Surface.'
                  ELSE
                      WRITE(IPR,'(/2A)')' (Analytically Integrated)',   &
     &                  ' SINUSOIODAL-WALTHALL model BRDF for'          &
     &                  //' Area-Averaged Surface.'
                  ENDIF
              ENDIF
              RDBRDF=GTWAL(4,ILOS0,NLOS,GSURF,.TRUE.)
!****************** VINCENT ROSS ADDED FOR SEA BRDF SUPPORT *************
#ifdef SEA_BRDF
          ELSEIF(LBRDF.EQ.13 .OR. CBRDF(1:LNBRDF).EQ.'ROSS-SEA')THEN

!             ROSS-SEA (V. ROSS SEA BRDF):
              IF(.NOT.LJMASS)THEN
                  IF(.NOT.GSURF)THEN
                      WRITE(IPR,'(/A,I3)')                              &
     &                  ' ROSS-SEA Model BRDF for Surface No.',ILOS0    &
                  ELSEIF(ILOS0.EQ.1)THEN
                      WRITE(IPR,'(/2A)')' ROSS-SEA model BRDF for'      &
     &                  //' Uniform (Homogeneous) Surface.'
                  ELSE
                      WRITE(IPR,'(/2A)')' ROSS-SEA Model BRDF for'      &
     &                  //' Area-Averaged Surface.'
                  ENDIF
              ENDIF
              RDBRDF=GTBRDF(7,SBRDF,ILOS0,NLOS,GSURF,DH2O,MLTRFL)
#endif
********************** END VINCENT ROSS *********************************
          ELSE
              WRITE(IPR,'(/A,/18X,3A)')' Error in RDBRDF:  Unable'//    &
     &          ' to interpret BRDF identifier.',' CBRDF="',CBRDF,'"'
              RDBRDF=.FALSE.
          ENDIF
      ENDDO
      RETURN
      END

      LOGICAL FUNCTION GTWAL(NPARAM,ILOS0,NLOS,GSURF,SINE)

!     GTWAL READS IN WALTHALL BRDF PARAMETERS AND CALLS FUNCTION
!     WALTHL TO PERFORM ANALYTIC INTEGRATIONS OF THE WALTHALL BRDF.
!     IF SUCCESSFUL, GTWAL RETURNS A VALUE OF TRUE.
      IMPLICIT NONE

!     INPUT ARGUMENTS:
!       NPARAM   NUMBER OF PARAMETERS IN BRDF REPRESENTATION.
!       ILOS0    INDEX FOR CURRENT LINE-OF-SIGHT PATH.
!       NLOS     NUMBER OF LINE-OF-SIGHT PATHS.
!       GSURF    LOGICAL FLAG, .TRUE. IF CURRENT SURFACE IS GROUND.
!       SINE     LOGICAL FLAG, .TRUE. IF ZENITH ANGLES IN
!                WALTHALL BRDF ARE REPLACED WITH THE SINE.
      INTEGER NPARAM,ILOS0,NLOS
      LOGICAL GSURF,SINE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /SRFACE/
!       NWVSRF   NUMBER OF WAVELENGTH GRID POINTS.
!       WVSURF   WAVELENGTH GRID FOR IMAGED-PIXELS (1 TO MLOS) AND
!                AREA-AVERAGED (MLOSP1) SURFACES [MICRONS].
!       GDIRRF   AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!                AT SOLAR ANGLE.
!       SALB     AREA-AVERAGED GROUND SURFACE ALBEDO SPECTRAL ARRAY.
!       GAZMOM   GAUSS ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       VAZMOM   VIEW ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       GDIREM   GAUSS ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       VDIREM   VIEW ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       HDIR     IMAGED-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCES
!                AT VIEWING ANGLES.
!       BRDF     IMAGED-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!                FUNCTION AT VIEWING, SUN AND RELATIVE AZIMUTH ANGLES.
      INTEGER NWVSRF
      REAL WVSURF,GDIRRF,SALB,GAZMOM,VAZMOM,GDIREM,VDIREM,HDIR,BRDF
      COMMON/SRFACE/NWVSRF(MLOSP1),WVSURF(MLOSP1,MWVSRF),               &
     &  GDIRRF(MWVSRF),SALB(MWVSRF),GAZMOM(1:MI,0:MI,0:MAZ,1:MWVSRF),   &
     &  VAZMOM(1:MLOS,0:MI,0:MAZ,1:MWVSRF),GDIREM(MI,MWVSRF),           &
     &  VDIREM(MLOS,MWVSRF),HDIR(MLOS,MWVSRF),BRDF(MLOS,MWVSRF)

!     /JM4B2/
!       SURFZN   ZENITH ANGLE OF SURFACE NORMAL [DEG].
!       SURFAZ   SURFACE NORMAL TO VIEW DIRECTION RELATIVE
!                AZIMUTH ANGLE DEFINED AT THE SURFACE [DEG].
      REAL SURFZN,SURFAZ
      COMMON/JM4B2/SURFZN,SURFAZ

!     /JM4B3/
!       PARAMS   PARAMETERS IN BRDF REPRESENTATION.
      REAL PARAMS
      COMMON/JM4B3/PARAMS(MBRDF)

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     FUNCTIONS:
!       WALTHL   RETURNS TRUE IF WALTHALL BRDF INTEGRATION IS A SUCCESS.
!       WLTHLS   RETURNS TRUE IF BRDF INTEGRATION OF THE SINE VERSION
!                OF THE WALTHALL REPRESENTATION IS A SUCCESS.
      LOGICAL WALTHL,WLTHLS

!     LOCAL VARIABLES:
!       IOTEST   RESULT OF IOSTAT TEST IN READ.
!       IWVSRF   CURRENT SPECTRAL WAVELENGTH INDEX.
!       IPARAM   LOOP INDEX FOR PARAMETERS IN BRDF REPRESENTATION.
      INTEGER IOTEST,IWVSRF,IPARAM

!     CHECK NUMBER OF BRDF PARAMETERS:
      IF(NPARAM.GT.MBRDF)THEN
          WRITE(IPR,'(/2A,/17X,A,I3)')' Error in GTWAL:  Number',       &
     &      ' of parameters in BRDF representation is too large.',      &
     &      ' Please increase parameter MBRDF to',NPARAM
          GTWAL=.FALSE.
          RETURN
      ENDIF

!     READ IN NUMBER OF WAVELENGTH GRID POINTS AND SURFACE NORMAL:
      IF(LJMASS)THEN
          CALL INITCD('CARD4B2')
      ELSE
          READ(IRD,*,IOSTAT=IOTEST)NWVSRF(ILOS0),SURFZN,SURFAZ
      ENDIF
      IF(IOTEST.NE.0)THEN
          IF(ILOS0.LE.MLOS)THEN
              WRITE(IPR,'(/A,I2)')' Error in GTWAL:  Unable to read'    &
     &          //' number of wavelengths for IMAGED PIXEL No.',ILOS0
          ELSE
              WRITE(IPR,'(/A,I2)')' Error in GTWAL:  Unable to read'    &
     &          //' number of wavelengths for AREA-AVERAGED surface.'
          ENDIF
          GTWAL=.FALSE.
          RETURN
      ELSEIF(NWVSRF(ILOS0).LE.0)THEN
          WRITE(IPR,'(/2A,I8)')' Error in GTWAL:  Input number of',     &
     &      ' wavelength points for surface BRDF is',NWVSRF(ILOS0)
          GTWAL=.FALSE.
          RETURN
      ELSEIF(NWVSRF(ILOS0).GT.MWVSRF)THEN
          WRITE(IPR,'(/2A,/17X,A,I3)')' Error in GTWAL:  Input',        &
     &      ' number of wavelength points for surface BRDF is too',     &
     &      ' large.  Increase parameter MWVSRF to',NWVSRF(ILOS0)
          GTWAL=.FALSE.
          RETURN
      ELSEIF(SURFZN.NE.0.)THEN
          WRITE(IPR,'(/2A,/17X,A)')' Error in GTWAL: ',                 &
     &      ' Currently, only surface normal zenith',                   &
     &      ' angles of 0. degrees are allowed.'
      ENDIF

!     BRDF TABLE HEADER:
      IF(.NOT.LJMASS)WRITE(IPR,'(/A,//A12,8(A12,I2))')                  &
     &  ' BRDF DATA TABLE:',                                            &
     &  ' WAVLEN (um)',('   PARAMETER',IPARAM,IPARAM=1,NPARAM)
      IF(.NOT.LJMASS)WRITE(IPR,'(A12,8A14)')                            &
     &  ' -----------',('   -----------',IPARAM=1,NPARAM)

!     LOOP OVER WAVELENGTHS:
      DO IWVSRF=1,NWVSRF(ILOS0)

!         READ IN SPECTRAL PARAMETERS:
          IF(LJMASS)THEN
              CALL INITCD('CARD4B3')
          ELSE
              READ(IRD,*,IOSTAT=IOTEST)                                 &
     &          WVSURF(ILOS0,IWVSRF),(PARAMS(IPARAM),IPARAM=1,NPARAM)
          ENDIF
          IF(IOTEST.NE.0)THEN
              IF(ILOS0.LE.MLOS)THEN
                  WRITE(IPR,'(/A,I2,A,/17X,A,I3)')' Error in GTWAL: '   &
     &              //' Unable to read IMAGED PIXEL No.',ILOS0,' BRDF', &
     &              ' parameters for spectral point',IWVSRF
              ELSE
                  WRITE(IPR,'(/A,/17X,A,I3)')' Error in GTWAL: '        &
     &              //' Unable to read AREA-AVERAGED surface BRDF',     &
     &              ' parameters for spectral point',IWVSRF
              ENDIF
              GTWAL=.FALSE.
              RETURN
          ENDIF
          IF(.NOT.LJMASS)WRITE(IPR,'(F12.5,8F14.6)')                    &
     &      WVSURF(ILOS0,IWVSRF),(PARAMS(IPARAM),IPARAM=1,NPARAM)
          IF(IWVSRF.GT.1)THEN
              IF(WVSURF(ILOS0,IWVSRF).LE.WVSURF(ILOS0,IWVSRF-1))THEN
                  WRITE(IPR,'(/2A)')' Error in GTWAL: ',                &
     &              ' BRDF surface wavelengths out of order.'
                  GTWAL=.FALSE.
                  RETURN
              ENDIF
          ELSEIF(WVSURF(ILOS0,1).LT.0.)THEN
              WRITE(IPR,'(/2A)')' Error in GTWAL: ',                    &
     &          ' BRDF surface wavelength less than 0.'
              GTWAL=.FALSE.
              RETURN
          ENDIF
          IF(SINE)THEN
              IF(.NOT.WLTHLS(PARAMS,IWVSRF,ILOS0,NLOS,GSURF))THEN
                  GTWAL=.FALSE.
                  RETURN
              ENDIF
          ELSEIF(.NOT.WALTHL(PARAMS,IWVSRF,ILOS0,NLOS,GSURF))THEN
              GTWAL=.FALSE.
              RETURN
          ENDIF
      ENDDO
      GTWAL=.TRUE.
      RETURN
      END

      LOGICAL FUNCTION WALTHL(PARAMS,IWVSRF,ILOS0,NLOS,GSURF)

!     WALTHL CALCULATES SURFACE REFLECTANCE VALUES USING A WALTHALL
!     BRDF MODEL.  IF SUCCESSFUL, A VALUE OF .TRUE. IS RETURNED.
!     THE WALTHALL BRDF MODEL HAS THE FOLLOWING FORM:

!     BRDF(VIEW,SOURC,AZIM) = PARAMS(1)

!                           + PARAMS(2) * VIEW * SOURC * COS(AZIM)

!                                             2        2
!                           + PARAMS(3) * VIEW  * SOURC

!                                               2        2
!                           + PARAMS(4) * ( VIEW  + SOURC  )

!     WHERE VIEW IS THE SURFACE-TO-OBSERVER ZENITH ANGLE,
!           SOURC IS THE SURFACE-TO-SOURCE ZENITH ANGLE, AND
!           AZIM IS THE RELATIVE AZIMUTH ANGLE.

!     THE AZIM IS ZERO IF THE SOURCE AND SENSOR ARE ON THE SAME SIDE
!     OF THE SURFACE PIXEL (I.E. AZIM = 0 FOR THE HOT SPOT).
      IMPLICIT NONE

!     PARAMETERS:
!       WALCON  CONSTANT ARISING FROM HEMISPHERIC INTEGRATION OF
!               WALTHALL BRDF [= 0.125*PI**2 - 0.5 ].
      REAL WALCON
      PARAMETER(WALCON=.73370055)
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       PARAMS   PARAMETERS IN BRDF REPRESENTATION.
!       IWVSRF   CURRENT SPECTRAL WAVELENGTH INDEX.
!       ILOS0    INDEX FOR CURRENT LINE-OF-SIGHT PATH.
!       NLOS     NUMBER OF LINE-OF-SIGHT PATHS.
!       GSURF    LOGICAL FLAG, .TRUE. IF CURRENT SURFACE IS GROUND.
      REAL PARAMS(*)
      INTEGER IWVSRF,ILOS0,NLOS
      LOGICAL GSURF

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /ANGSRF/
!       CVWSRF  COSINE OF THE VIEW ZENITH ANGLE FROM THE SURFACE.
!       CSNSRF  COSINE OF THE SOLAR (LUNAR) ZENITH AT SURFACE.
!       AZMSRF  RELATIVE AZIMUTH ANGLE (SUN - SENSOR AT SURFACE) [RAD].
!       UMU1    COSINE OF THE PATH NADIR ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       UMU0    COSINE OF THE SOLAR ZENITH ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       PHI1    RELATIVE AZIMUTH ANGLE (SUN - LOS PATH AT SENSOR) [DEG].
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       CMU     COSINE OF THE NADIR ANGLES USED IN DISORT.
      REAL CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU
      COMMON/ANGSRF/CVWSRF(MLOS),CSNSRF(MLOS),AZMSRF(MLOS),UMU1(MLOS),  &
     &  UMU0,PHI1(MLOS),CMU(MI)

!     /SRFACE/
!       NWVSRF   NUMBER OF WAVELENGTH GRID POINTS.
!       WVSURF   WAVELENGTH GRID FOR IMAGED-PIXELS (1 TO MLOS) AND
!                AREA-AVERAGED (MLOSP1) SURFACES [MICRONS].
!       GDIRRF   AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!                AT SOLAR ANGLE.
!       SALB     AREA-AVERAGED GROUND SURFACE ALBEDO SPECTRAL ARRAY.
!       GAZMOM   GAUSS ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       VAZMOM   VIEW ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       GDIREM   GAUSS ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       VDIREM   VIEW ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       HDIR     IMAGED-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCES
!                AT VIEWING ANGLES.
!       BRDF     IMAGED-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!                FUNCTION AT VIEWING, SUN AND RELATIVE AZIMUTH ANGLES.
      INTEGER NWVSRF
      REAL WVSURF,GDIRRF,SALB,GAZMOM,VAZMOM,GDIREM,VDIREM,HDIR,BRDF
      COMMON/SRFACE/NWVSRF(MLOSP1),WVSURF(MLOSP1,MWVSRF),               &
     &  GDIRRF(MWVSRF),SALB(MWVSRF),GAZMOM(1:MI,0:MI,0:MAZ,1:MWVSRF),   &
     &  VAZMOM(1:MLOS,0:MI,0:MAZ,1:MWVSRF),GDIREM(MI,MWVSRF),           &
     &  VDIREM(MLOS,MWVSRF),HDIR(MLOS,MWVSRF),BRDF(MLOS,MWVSRF)

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
      REAL UMU,PHI
      INTEGER NSTR,NAZ,N2GAUS,NUMU,MAPUMU,NPHI,MAPPHI
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      COMMON/DISRT/UMU(MXUMU),PHI(MAXPHI),NSTR,NAZ,N2GAUS,NUMU,         &
     &  MAPUMU(MLOS),NPHI,MAPPHI(MLOS),DIS,DISAZM,DISALB,LDISCL
      SAVE /DISRT/

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     LOCAL VARIABLES:
!       I2GAUS   LOOP INDEX FOR VIEW AND DOUBLE-GAUSS QUADRATURE ANGLES.
!       J2GAUS   LOOP INDEX FOR SUN AND DOUBLE-GAUSS QUADRATURE ANGLES.
!       IAZ      DISORT AZIMUTH COMPONENT LOOP INDEX.
!       ILOS     VIEW ANGLE LOOP INDEX.
!       VIEW     VIEW NADIR ANGLE AT SURFACE [RADIANS].
!       SUN      SOLAR ZENITH AT SURFACE [RADIANS].
!       VIEWSQ   VIEW NADIR ANGLE AT SURFACE SQUARED [RADIANS**2].
!       SUNSQ    SOLAR ZENITH AT SURFACE SQUARED [RADIANS**2].
!       NADI     DISORT NADIR ANGLE [RADIANS].
!       NADJ     DISORT NADIR ANGLE [RADIANS].
!       NADSQI   DISORT NADIR ANGLE SQUARED [RADIANS**2].
!       NADSQJ   DISORT NADIR ANGLE SQUARED [RADIANS**2].
      INTEGER I2GAUS,J2GAUS,IAZ,ILOS
      REAL VIEW,SUN,VIEWSQ,SUNSQ,NADI,NADJ,NADSQI,NADSQJ

!     SURFACE ALBEDO:
      SALB(IWVSRF)=PARAMS(1)+WALCON*(2*PARAMS(4)+WALCON*PARAMS(3))

!     IMAGED-PIXEL SURFACE:
      IF(ILOS0.LE.MLOS)THEN

!         CHECK SURFACE ALBEDO:
          IF(SALB(IWVSRF).LT.0.)THEN
              WRITE(IPR,'(/2A,/(22X,A,F12.5,A))')' Warning from',       &
     &          ' WALTHL:  The IMAGED-pixel surface albedo',            &
     &          ' at',WVSURF(1,IWVSRF),' Microns is negative.'
          ELSEIF(SALB(IWVSRF).GT.1.)THEN
              WRITE(IPR,'(/2A,/(22X,A,F12.5,A))')' Warning from',       &
     &          ' WALTHL:  The IMAGED-pixel surface albedo',            &
     &          ' at',WVSURF(1,IWVSRF),' Microns exceeds 1.'
          ENDIF

!         BRDF:
          VIEW=ACOS(CVWSRF(ILOS0))
          VIEWSQ=VIEW**2
          SUN=ACOS(CSNSRF(ILOS0))
          SUNSQ=SUN**2
          BRDF(ILOS0,IWVSRF)=PARAMS(1)                                  &
     &      +PARAMS(2)*VIEW*SUN*COS(AZMSRF(ILOS0))                      &
     &      +PARAMS(3)*VIEWSQ*SUNSQ+PARAMS(4)*(VIEWSQ+SUNSQ)
          IF(BRDF(ILOS0,IWVSRF).LT.0.)THEN
              WRITE(IPR,'(/A,F12.5,A,2(/23X,A),F12.5,A)')               &
     &          ' Warning from WALTHL:  The IMAGED-pixel BRDF value at',&
     &          WVSURF(1,IWVSRF),' Microns','(for the current'          &
     &          //' sun and view angles) is negative','(=',             &
     &          BRDF(ILOS0,IWVSRF),').  The value has been reset to 0.'
              BRDF(ILOS0,IWVSRF)=0.
          ENDIF

!         HEMISPHERE DIRECTIONAL REFLECTIVITY:
          HDIR(ILOS0,IWVSRF)=PARAMS(1)+PARAMS(4)*VIEWSQ                 &
     &      +WALCON*(PARAMS(4)+PARAMS(3)*VIEWSQ)
          IF(HDIR(ILOS0,IWVSRF).LT.0.)THEN
              WRITE(IPR,'(/2A,/(22X,2(A,F12.5),A))')                    &
     &          ' Warning from WALTHL:  The IMAGED-pixel',              &
     &          ' hemisphere directional reflectance',                  &
     &          ' at',WVSURF(1,IWVSRF),' Microns and',                  &
     &          VIEW,' Radians is negative',' (=',                      &
     &          HDIR(ILOS0,IWVSRF),').  The value has been reset to 0.'
              HDIR(ILOS0,IWVSRF)=0.
          ELSEIF(HDIR(ILOS0,IWVSRF).GT.1.)THEN
              WRITE(IPR,'(/2A,/(22X,2(A,F12.5),A))')                    &
     &          ' Warning from WALTHL:  The IMAGED-pixel',              &
     &          ' hemisphere directional reflectance',                  &
     &          ' at',WVSURF(1,IWVSRF),' Microns and',                  &
     &          VIEW,' Radians exceeds 1.',' (=',                       &
     &          HDIR(ILOS0,IWVSRF),').  The value has been reset to 1.'
              HDIR(ILOS0,IWVSRF)=1.
          ENDIF
      ENDIF

!     AREA-AVERAGED GROUND SURFACE:
      IF(GSURF)THEN

!         CHECK SURFACE ALBEDO:
          IF(SALB(IWVSRF).LT.0.)THEN
              WRITE(IPR,'(/2A,/(22X,A,F12.5,A))')' Warning from',       &
     &          ' WALTHL:  The IMAGED-pixel surface albedo',            &
     &          ' at',WVSURF(ILOS0,IWVSRF),' Microns is negative.'
          ELSEIF(SALB(IWVSRF).GT.1.)THEN
              WRITE(IPR,'(/2A,/(22X,A,F12.5,A))')' Warning from',       &
     &          ' WALTHL:  The IMAGED-pixel surface albedo',            &
     &          ' at',WVSURF(ILOS0,IWVSRF),' Microns exceeds 1.'
          ENDIF
          IF(DIS)THEN
              SUN=ACOS(UMU0)
              SUNSQ=SUN**2

!             VIEW ANGLE DIRECTIONAL EMISSIVITY:
              DO ILOS=1,NLOS
                  VIEW=ACOS(UMU1(ILOS))
                  VIEWSQ=VIEW**2
                  VDIREM(ILOS,IWVSRF)=1-(PARAMS(1)+PARAMS(4)*VIEWSQ     &
     &              +WALCON*(PARAMS(4)+PARAMS(3)*VIEWSQ))
                  IF(VDIREM(ILOS,IWVSRF).LT.0.)THEN
                      WRITE(IPR,'(/1X,2A,F12.5,A,/(22X,2(A,F12.5),A))') &
     &                  'Warning from WALTHL:  The ground directional ',&
     &                  'emissivity at',WVSURF(ILOS0,IWVSRF),' Microns',&
     &                  ' and',VIEW,' Radians is negative (=',          &
     &                  VDIREM(ILOS,IWVSRF),').',                       &
     &                  ' The value has been reset to 0.'
                      VDIREM(ILOS,IWVSRF)=0.
                  ELSEIF(VDIREM(ILOS,IWVSRF).GT.1.)THEN
                      WRITE(IPR,'(/1X,2A,F12.5,A,/(22X,2(A,F12.5),A))') &
     &                  'Warning from WALTHL:  The ground directional ',&
     &                  'emissivity at',WVSURF(ILOS0,IWVSRF),' Microns',&
     &                  ' and',VIEW,' Radians exceeds 1 (=',            &
     &                  VDIREM(ILOS,IWVSRF),').',                       &
     &                  ' The value has been reset to 1.'
                      VDIREM(ILOS,IWVSRF)=1.
                  ENDIF
              ENDDO

!             GAUSSIAN ANGLE DIRECTIONAL EMISSIVITY:
              DO I2GAUS=1,N2GAUS
                  VIEW=ACOS(CMU(I2GAUS))
                  VIEWSQ=VIEW**2
                  GDIREM(I2GAUS,IWVSRF)=1-(PARAMS(1)+PARAMS(4)*VIEWSQ   &
     &              +WALCON*(PARAMS(4)+PARAMS(3)*VIEWSQ))
                  IF(GDIREM(I2GAUS,IWVSRF).LT.0.)THEN
                      WRITE(IPR,'(/1X,2A,F12.5,A,/(22X,2(A,F12.5),A))') &
     &                  'Warning from WALTHL:  The ground directional ',&
     &                  'emissivity at',WVSURF(ILOS0,IWVSRF),' Microns',&
     &                  ' and',VIEW,' Radians is negative (=',          &
     &                  GDIREM(I2GAUS,IWVSRF),').',                     &
     &                  ' The value has been reset to 0.'
                      GDIREM(I2GAUS,IWVSRF)=0.
                  ELSEIF(GDIREM(I2GAUS,IWVSRF).GT.1.)THEN
                      WRITE(IPR,'(/1X,2A,F12.5,A,/(22X,2(A,F12.5),A))') &
     &                  'Warning from WALTHL:  The ground directional ',&
     &                  'emissivity at',WVSURF(ILOS0,IWVSRF),' Microns',&
     &                  ' and',VIEW,' Radians exceeds 1 (=',            &
     &                  GDIREM(I2GAUS,IWVSRF),').',                     &
     &                  ' The value has been reset to 1.'
                      GDIREM(I2GAUS,IWVSRF)=1.
                  ENDIF
              ENDDO

!             VIEW - QUADRATURES BRDF AZIMUTH FOURIER MOMENTS:
              DO ILOS=1,NLOS
                  IF(UMU1(ILOS).GT.0.)THEN
                      VIEW=ACOS(UMU1(ILOS))
                      VIEWSQ=VIEW**2
                      DO J2GAUS=1,N2GAUS
                          NADJ=ACOS(CMU(J2GAUS))
                          NADSQJ=NADJ**2
                          VAZMOM(ILOS,J2GAUS,0,IWVSRF)=PARAMS(1)        &
     &                      +PARAMS(3)*VIEWSQ*NADSQJ                    &
     &                      +PARAMS(4)*(VIEWSQ+NADSQJ)
                          VAZMOM(ILOS,J2GAUS,1,IWVSRF)                  &
     &                      =-PARAMS(2)*VIEW*NADJ
                      ENDDO
                  ELSE
                      DO J2GAUS=1,N2GAUS
                          VAZMOM(ILOS,J2GAUS,0,IWVSRF)=0.
                          VAZMOM(ILOS,J2GAUS,1,IWVSRF)=0.
                      ENDDO
                  ENDIF
              ENDDO

!             IS SUN ABOVE HORIZON?
              IF(UMU0.GT.0.)THEN

!                 VIEW - SUN BRDF AZIMUTH FOURIER MOMENTS:
                  DO ILOS=1,NLOS
                      IF(UMU1(ILOS).GT.0.)THEN
                          VIEW=ACOS(UMU1(ILOS))
                          VIEWSQ=VIEW**2
                          VAZMOM(ILOS,0,0,IWVSRF)=PARAMS(1)             &
     &                      +PARAMS(3)*VIEWSQ*SUNSQ                     &
     &                      +PARAMS(4)*(VIEWSQ+SUNSQ)
                          VAZMOM(ILOS,0,1,IWVSRF)=-PARAMS(2)*VIEW*SUN
                      ELSE
                          VAZMOM(ILOS,0,0,IWVSRF)=0.
                          VAZMOM(ILOS,0,1,IWVSRF)=0.
                      ENDIF
                  ENDDO

!                 QUADRATURES - SUN BRDF AZIMUTH FOURIER MOMENTS:
                  DO I2GAUS=1,N2GAUS
                      NADI=ACOS(CMU(I2GAUS))
                      NADSQI=NADI**2
                      GAZMOM(I2GAUS,0,0,IWVSRF)=PARAMS(1)               &
     &                  +PARAMS(3)*SUNSQ*NADSQI+PARAMS(4)*(SUNSQ+NADSQI)
                      GAZMOM(I2GAUS,0,1,IWVSRF)=-PARAMS(2)*SUN*NADI
                  ENDDO
              ELSE

!                 SET SOLAR BRDF AZIMUTH FOURIER MOMENTS TO ZERO:
                  DO ILOS=1,NLOS
                      VAZMOM(ILOS,0,0,IWVSRF)=0.
                      VAZMOM(ILOS,0,1,IWVSRF)=0.
                  ENDDO
                  DO I2GAUS=1,N2GAUS
                      GAZMOM(I2GAUS,0,0,IWVSRF)=0.
                      GAZMOM(I2GAUS,0,1,IWVSRF)=0.
                  ENDDO
              ENDIF

!             QUADRATURES - QUADRATURES BRDF AZIMUTH FOURIER MOMENTS:
              DO J2GAUS=1,N2GAUS
                  NADJ=ACOS(CMU(J2GAUS))
                  NADSQJ=NADJ**2
                  DO I2GAUS=1,N2GAUS
                      NADI=ACOS(CMU(I2GAUS))
                      NADSQI=NADI**2
                      GAZMOM(I2GAUS,J2GAUS,0,IWVSRF)=PARAMS(1)          &
     &                  +PARAMS(3)*NADSQI*NADSQJ                        &
     &                  +PARAMS(4)*(NADSQI+NADSQJ)
                      GAZMOM(I2GAUS,J2GAUS,1,IWVSRF)                    &
     &                  =-PARAMS(2)*NADI*NADJ
                  ENDDO
              ENDDO

!             ONLY THE ZERO AND FIRST MOMENTS ARE NON-ZERO.
              DO IAZ=2,NAZ
                  DO J2GAUS=0,N2GAUS
                      DO I2GAUS=0,N2GAUS
                          GAZMOM(I2GAUS,J2GAUS,IAZ,IWVSRF)=0.
                      ENDDO
                  ENDDO
              ENDDO
          ENDIF
          IF(.NOT.DIS .OR. LDISCL)THEN

!             SOLAR ANGLE DIRECTIONAL REFLECTIVITY:
              IF(UMU0.GT.0.)THEN
                  SUNSQ=ACOS(UMU0)**2
                  GDIRRF(IWVSRF)=PARAMS(1)+PARAMS(4)*SUNSQ              &
     &              +WALCON*(PARAMS(4)+PARAMS(3)*SUNSQ)
                  IF(GDIRRF(IWVSRF).LT.0.)THEN
                      WRITE(IPR,'(/2A,F12.5,A,/(22X,2(A,F12.5),A))')    &
     &                  ' Warning from WALTHL:  The ground directional',&
     &                  ' reflectivity at',WVSURF(ILOS0,IWVSRF),        &
     &                  ' Microns',' and',ACOS(UMU0),                   &
     &                  ' Radian solar angle is negative (=',           &
     &                  GDIRRF(IWVSRF),').',                            &
     &                  ' The value has been reset to 0.'
                      GDIRRF(IWVSRF)=0.
                  ELSEIF(GDIRRF(IWVSRF).GT.1.)THEN
                      WRITE(IPR,'(/2A,F12.5,A,/(22X,2(A,F12.5),A))')    &
     &                  ' Warning from WALTHL:  The ground directional',&
     &                  ' reflectivity at',WVSURF(ILOS0,IWVSRF),        &
     &                  ' Microns',' and',ACOS(UMU0),                   &
     &                  ' Radian solar angle exceeds 1 (=',             &
     &                  GDIRRF(IWVSRF),').',                            &
     &                  ' The value has been reset to 1.'
                      GDIRRF(IWVSRF)=1.
                  ENDIF
              ELSE
                  GDIRRF(IWVSRF)=0.
              ENDIF
          ENDIF
      ENDIF
      WALTHL=.TRUE.
      RETURN
      END

      LOGICAL FUNCTION WLTHLS(PARAMS,IWVSRF,ILOS0,NLOS,GSURF)

!     WLTHLS CALCULATES SURFACE REFLECTANCE VALUES USING A MODIFIED
!     WALTHALL BRDF MODEL - THE ZENITH ANGLES ARE REPLACE BY THEIR
!     SINE FUNCTION.  IF SUCCESSFUL, A VALUE OF .TRUE. IS RETURNED.
!     THE MODIFIED WALTHALL BRDF MODEL HAS THE FOLLOWING FORM:

!     BRDF(VIEW,SOURC,AZIM) = PARAMS(1)

!         + PARAMS(2) * SIN(VIEW) * SIN(SOURC) * COS(AZIM)

!                                2             2
!         + PARAMS(3) * SIN(VIEW)  * SIN(SOURC)

!                                  2             2
!         + PARAMS(4) * ( SIN(VIEW)  + SIN(SOURC)  )

!     WHERE VIEW IS THE SURFACE-TO-OBSERVER ZENITH ANGLE,
!           SOURC IS THE SURFACE-TO-SOURCE ZENITH ANGLE, AND
!           AZIM IS THE RELATIVE AZIMUTH ANGLE.

!     THE AZIM IS ZERO IF THE SOURCE AND SENSOR ARE ON THE SAME SIDE
!     OF THE SURFACE PIXEL (I.E. AZIM = 0 FOR THE HOT SPOT).
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       PARAMS   PARAMETERS IN BRDF REPRESENTATION.
!       IWVSRF   CURRENT SPECTRAL WAVELENGTH INDEX.
!       ILOS0    INDEX FOR CURRENT LINE-OF-SIGHT PATH.
!       NLOS     NUMBER OF LINE-OF-SIGHT PATHS.
!       GSURF    LOGICAL FLAG, .TRUE. IF CURRENT SURFACE IS GROUND.
      REAL PARAMS(*)
      INTEGER IWVSRF,ILOS0,NLOS
      LOGICAL GSURF

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /ANGSRF/
!       CVWSRF  COSINE OF THE VIEW ZENITH ANGLE FROM THE SURFACE.
!       CSNSRF  COSINE OF THE SOLAR (LUNAR) ZENITH AT SURFACE.
!       AZMSRF  RELATIVE AZIMUTH ANGLE (SUN - SENSOR AT SURFACE) [RAD].
!       UMU1    COSINE OF THE PATH NADIR ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       UMU0    COSINE OF THE SOLAR ZENITH ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       PHI1    RELATIVE AZIMUTH ANGLE (SUN - LOS PATH AT SENSOR) [DEG].
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       CMU     COSINE OF THE NADIR ANGLES USED IN DISORT.
      REAL CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU
      COMMON/ANGSRF/CVWSRF(MLOS),CSNSRF(MLOS),AZMSRF(MLOS),UMU1(MLOS),  &
     &  UMU0,PHI1(MLOS),CMU(MI)

!     /SRFACE/
!       NWVSRF   NUMBER OF WAVELENGTH GRID POINTS.
!       WVSURF   WAVELENGTH GRID FOR IMAGED-PIXELS (1 TO MLOS) AND
!                AREA-AVERAGED (MLOSP1) SURFACES [MICRONS].
!       GDIRRF   AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!                AT SOLAR ANGLE.
!       SALB     AREA-AVERAGED GROUND SURFACE ALBEDO SPECTRAL ARRAY.
!       GAZMOM   GAUSS ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       VAZMOM   VIEW ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       GDIREM   GAUSS ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       VDIREM   VIEW ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       HDIR     IMAGED-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCES
!                AT VIEWING ANGLES.
!       BRDF     IMAGED-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!                FUNCTION AT VIEWING, SUN AND RELATIVE AZIMUTH ANGLES.
      INTEGER NWVSRF
      REAL WVSURF,GDIRRF,SALB,GAZMOM,VAZMOM,GDIREM,VDIREM,HDIR,BRDF
      COMMON/SRFACE/NWVSRF(MLOSP1),WVSURF(MLOSP1,MWVSRF),               &
     &  GDIRRF(MWVSRF),SALB(MWVSRF),GAZMOM(1:MI,0:MI,0:MAZ,1:MWVSRF),   &
     &  VAZMOM(1:MLOS,0:MI,0:MAZ,1:MWVSRF),GDIREM(MI,MWVSRF),           &
     &  VDIREM(MLOS,MWVSRF),HDIR(MLOS,MWVSRF),BRDF(MLOS,MWVSRF)

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
      REAL UMU,PHI
      INTEGER NSTR,NAZ,N2GAUS,NUMU,MAPUMU,NPHI,MAPPHI
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      COMMON/DISRT/UMU(MXUMU),PHI(MAXPHI),NSTR,NAZ,N2GAUS,NUMU,         &
     &  MAPUMU(MLOS),NPHI,MAPPHI(MLOS),DIS,DISAZM,DISALB,LDISCL
      SAVE /DISRT/

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      EXTERNAL DEVCBD

!     LOCAL VARIABLES:
!       I2GAUS   LOOP INDEX FOR VIEW AND DOUBLE-GAUSS QUADRATURE ANGLES.
!       J2GAUS   LOOP INDEX FOR SUN AND DOUBLE-GAUSS QUADRATURE ANGLES.
!       IAZ      DISORT AZIMUTH COMPONENT LOOP INDEX.
!       ILOS     VIEW ANGLE LOOP INDEX.
!       VIEWSQ   SQUARE OF THE SINE OF THE VIEW NADIR ANGLE.
!       SUNSQ    SQUARE OF THE SINE OF THE SOLAR ZENITH ANGLE.
!       NADSQI   DISORT NADIR ANGLE SQUARED [RADIANS**2].
!       NADSQJ   DISORT NADIR ANGLE SQUARED [RADIANS**2].
      INTEGER I2GAUS,J2GAUS,IAZ,ILOS
      REAL VIEWSQ,SUNSQ,NADSQI,NADSQJ

!     SURFACE ALBEDO:
      SALB(IWVSRF)=PARAMS(1)+PARAMS(4)+PARAMS(3)/4

!     IMAGED-PIXEL SURFACE:
      IF(ILOS0.LE.MLOS)THEN

!         CHECK SURFACE ALBEDO:
          IF(SALB(IWVSRF).LT.0.)THEN
              WRITE(IPR,'(/2A,/(22X,A,F12.5,A))')' Warning from',       &
     &          ' WLTHLS:  The IMAGED-pixel surface albedo',            &
     &          ' at',WVSURF(1,IWVSRF),' Microns is negative.'
          ELSEIF(SALB(IWVSRF).GT.1.)THEN
              WRITE(IPR,'(/2A,/(22X,A,F12.5,A))')' Warning from',       &
     &          ' WLTHLS:  The IMAGED-pixel surface albedo',            &
     &          ' at',WVSURF(1,IWVSRF),' Microns exceeds 1.'
          ENDIF

!         BRDF:
          VIEWSQ=1-CVWSRF(ILOS0)**2
          SUNSQ=1-CSNSRF(ILOS0)**2
          BRDF(ILOS0,IWVSRF)=PARAMS(1)                                  &
     &      +PARAMS(2)*SQRT(VIEWSQ*SUNSQ)*COS(AZMSRF(ILOS0))            &
     &      +PARAMS(3)*VIEWSQ*SUNSQ+PARAMS(4)*(VIEWSQ+SUNSQ)
          IF(BRDF(ILOS0,IWVSRF).LT.0.)THEN
              WRITE(IPR,'(/A,F12.5,A,2(/23X,A),F12.5,A)')               &
     &          ' Warning from WLTHLS:  The IMAGED-pixel BRDF value at',&
     &          WVSURF(1,IWVSRF),' Microns','(for the current'          &
     &          //' sun and view angles) is negative','(=',             &
     &          BRDF(ILOS0,IWVSRF),').  The value has been reset to 0.'
              BRDF(ILOS0,IWVSRF)=0.
          ENDIF

!         HEMISPHERE DIRECTIONAL REFLECTIVITY:
          HDIR(ILOS0,IWVSRF)=PARAMS(1)+PARAMS(4)*VIEWSQ                 &
     &      +(PARAMS(4)+PARAMS(3)*VIEWSQ)/2
          IF(HDIR(ILOS0,IWVSRF).LT.0.)THEN
              WRITE(IPR,'(/2A,/(22X,2(A,F12.5),A))')                    &
     &          ' Warning from WLTHLS:  The IMAGED-pixel',              &
     &          ' hemisphere directional reflectance',                  &
     &          ' at',WVSURF(1,IWVSRF),' Microns and',                  &
     &          ACOS(CVWSRF(ILOS0)),' Radians is negative',' (=',       &
     &          HDIR(ILOS0,IWVSRF),').  The value has been reset to 0.'
              HDIR(ILOS0,IWVSRF)=0.
          ELSEIF(HDIR(ILOS0,IWVSRF).GT.1.)THEN
              WRITE(IPR,'(/2A,/(22X,2(A,F12.5),A))')                    &
     &          ' Warning from WLTHLS:  The IMAGED-pixel',              &
     &          ' hemisphere directional reflectance',                  &
     &          ' at',WVSURF(1,IWVSRF),' Microns and',                  &
     &          ACOS(CVWSRF(ILOS0)),' Radians exceeds 1.',' (=',        &
     &          HDIR(ILOS0,IWVSRF),').  The value has been reset to 1.'
              HDIR(ILOS0,IWVSRF)=1.
          ENDIF
      ENDIF

!     AREA-AVERAGED GROUND SURFACE:
      IF(GSURF)THEN

!         CHECK SURFACE ALBEDO:
          IF(SALB(IWVSRF).LT.0.)THEN
              WRITE(IPR,'(/2A,/(22X,A,F12.5,A))')' Warning from',       &
     &          ' WLTHLS:  The IMAGED-pixel surface albedo',            &
     &          ' at',WVSURF(ILOS0,IWVSRF),' Microns is negative.'
          ELSEIF(SALB(IWVSRF).GT.1.)THEN
              WRITE(IPR,'(/2A,/(22X,A,F12.5,A))')' Warning from',       &
     &          ' WLTHLS:  The IMAGED-pixel surface albedo',            &
     &          ' at',WVSURF(ILOS0,IWVSRF),' Microns exceeds 1.'
          ENDIF
          IF(DIS)THEN
              SUNSQ=1-UMU0**2

!             VIEW ANGLE DIRECTIONAL EMISSIVITIES:
              DO ILOS=1,NLOS
                  VIEWSQ=1-UMU1(ILOS)**2
                  VDIREM(ILOS,IWVSRF)=1-(PARAMS(1)+PARAMS(4)*VIEWSQ     &
     &              +(PARAMS(4)+PARAMS(3)*VIEWSQ)/2)
                  IF(VDIREM(ILOS,IWVSRF).LT.0.)THEN
                      WRITE(IPR,'(/1X,A,F12.5,A,/(22X,2(A,F12.5),A))')  &
     &                  'Warning from WLTHLS:  The ground directional'  &
     &                  //' emissivity at',WVSURF(ILOS0,IWVSRF),        &
     &                  ' Microns',' and',ACOS(UMU1(ILOS)),' Radians'   &
     &                  //' is negative (=',VDIREM(ILOS,IWVSRF),').',   &
     &                  ' The value has been reset to 0.'
                      VDIREM(ILOS,IWVSRF)=0.
                  ELSEIF(VDIREM(ILOS,IWVSRF).GT.1.)THEN
                      WRITE(IPR,'(/1X,A,F12.5,A,/(22X,2(A,F12.5),A))')  &
     &                  'Warning from WLTHLS:  The ground directional'  &
     &                  //' emissivity at',WVSURF(ILOS0,IWVSRF),        &
     &                  ' Microns',' and',ACOS(UMU1(ILOS)),' Radians'   &
     &                  //' exceeds 1 (=',VDIREM(ILOS,IWVSRF),').',     &
     &                  ' The value has been reset to 1.'
                      VDIREM(ILOS,IWVSRF)=1.
                  ENDIF
              ENDDO

!             GAUSSIAN ANGLE DIRECTIONAL EMISSIVITIES:
              DO I2GAUS=1,N2GAUS
                  NADSQI=1-CMU(I2GAUS)**2
                  GDIREM(I2GAUS,IWVSRF)=1-(PARAMS(1)+PARAMS(4)*NADSQI   &
     &              +(PARAMS(4)+PARAMS(3)*NADSQI)/2)
                  IF(GDIREM(I2GAUS,IWVSRF).LT.0.)THEN
                      WRITE(IPR,'(/2A,F12.5,A,/(22X,2(A,F12.5),A))')    &
     &                  ' Warning from WLTHLS:  The ground directional',&
     &                  ' emissivity at',WVSURF(ILOS0,IWVSRF),          &
     &                  ' Microns',' and',ACOS(CMU(I2GAUS)),            &
     &                  ' Radians is negative (=',GDIREM(I2GAUS,IWVSRF),&
     &                  ').',' The value has been reset to 0.'
                      GDIREM(I2GAUS,IWVSRF)=0.
                  ELSEIF(GDIREM(I2GAUS,IWVSRF).GT.1.)THEN
                      WRITE(IPR,'(/2A,F12.5,A,/(22X,2(A,F12.5),A))')    &
     &                  ' Warning from WLTHLS:  The ground directional',&
     &                  ' emissivity at',WVSURF(ILOS0,IWVSRF),          &
     &                  ' Microns',' and',ACOS(CMU(I2GAUS)),            &
     &                  ' Radians exceeds 1 (=',GDIREM(I2GAUS,IWVSRF),  &
     &                  ').',' The value has been reset to 1.'
                      GDIREM(I2GAUS,IWVSRF)=1.
                  ENDIF
              ENDDO

!             VIEW - QUADRATURES BRDF AZIMUTH FOURIER MOMENTS:
              DO ILOS=1,NLOS
                  IF(UMU1(ILOS).GT.0.)THEN
                      VIEWSQ=1-UMU1(ILOS)**2
                      DO J2GAUS=1,N2GAUS
                          NADSQJ=1-CMU(J2GAUS)**2
                          VAZMOM(ILOS,J2GAUS,0,IWVSRF)=PARAMS(1)        &
     &                      +PARAMS(3)*VIEWSQ*NADSQJ                    &
     &                      +PARAMS(4)*(VIEWSQ+NADSQJ)
                          VAZMOM(ILOS,J2GAUS,1,IWVSRF)                  &
     &                      =-PARAMS(2)*SQRT(VIEWSQ*NADSQJ)
                      ENDDO
                  ELSE
                      DO J2GAUS=1,N2GAUS
                          VAZMOM(ILOS,J2GAUS,0,IWVSRF)=0.
                          VAZMOM(ILOS,J2GAUS,1,IWVSRF)=0.
                      ENDDO
                  ENDIF
              ENDDO

!             IS SUN ABOVE THE HORIZON?
              IF(UMU0.GT.0.)THEN

!                 VIEW - SUN BRDF AZIMUTH FOURIER MOMENTS:
                  DO ILOS=1,NLOS
                      IF(UMU1(ILOS).GT.0.)THEN
                          VIEWSQ=1-UMU1(ILOS)**2
                          VAZMOM(ILOS,0,0,IWVSRF)=PARAMS(1)             &
     &                      +PARAMS(3)*VIEWSQ*SUNSQ                     &
     &                      +PARAMS(4)*(VIEWSQ+SUNSQ)
                          VAZMOM(ILOS,0,1,IWVSRF)                       &
     &                      =-PARAMS(2)*SQRT(VIEWSQ*SUNSQ)
                      ELSE
                          VAZMOM(ILOS,0,0,IWVSRF)=0.
                          VAZMOM(ILOS,0,1,IWVSRF)=0.
                      ENDIF
                  ENDDO

!                 QUADRATURES - SUN BRDF AZIMUTH FOURIER MOMENTS:
                  DO I2GAUS=1,N2GAUS
                      NADSQI=1-CMU(I2GAUS)**2
                      GAZMOM(I2GAUS,0,0,IWVSRF)=PARAMS(1)               &
     &                  +PARAMS(3)*SUNSQ*NADSQI+PARAMS(4)*(SUNSQ+NADSQI)
                      GAZMOM(I2GAUS,0,1,IWVSRF)                         &
     &                  =-PARAMS(2)*SQRT(SUNSQ*NADSQI)
                  ENDDO
              ELSE

!                 SET SOLAR BRDF AZIMUTH FOURIER MOMENTS TO ZERO:
                  DO I2GAUS=1,N2GAUS
                      GAZMOM(I2GAUS,0,0,IWVSRF)=0.
                      GAZMOM(I2GAUS,0,1,IWVSRF)=0.
                  ENDDO
                  DO ILOS=1,NLOS
                      VAZMOM(ILOS,0,0,IWVSRF)=0.
                      VAZMOM(ILOS,0,1,IWVSRF)=0.
                  ENDDO
              ENDIF

!             QUADRATURES - QUADRATURES BRDF AZIMUTH FOURIER MOMENTS:
              DO J2GAUS=1,N2GAUS
                  NADSQJ=1-CMU(J2GAUS)**2
                  DO I2GAUS=1,N2GAUS
                      NADSQI=1-CMU(I2GAUS)**2
                      GAZMOM(I2GAUS,J2GAUS,0,IWVSRF)=PARAMS(1)          &
     &                  +PARAMS(3)*NADSQI*NADSQJ                        &
     &                  +PARAMS(4)*(NADSQI+NADSQJ)
                      GAZMOM(I2GAUS,J2GAUS,1,IWVSRF)                    &
     &                  =-PARAMS(2)*SQRT(NADSQI*NADSQJ)
                  ENDDO
              ENDDO

!             ONLY THE ZERO AND FIRST MOMENTS ARE NON-ZERO.
              DO IAZ=2,NAZ
                  DO J2GAUS=0,N2GAUS
                      DO I2GAUS=0,N2GAUS
                          GAZMOM(I2GAUS,J2GAUS,IAZ,IWVSRF)=0.
                      ENDDO
                  ENDDO
              ENDDO
          ENDIF
          IF(.NOT.DIS .OR. LDISCL)THEN

!             SOLAR ANGLE DIRECTIONAL REFLECTIVITY:
              IF(UMU0.GT.0.)THEN
                  SUNSQ=1-UMU0**2
                  GDIRRF(IWVSRF)=PARAMS(1)+PARAMS(4)*SUNSQ              &
     &              +(PARAMS(4)+PARAMS(3)*SUNSQ)/2
                  IF(GDIRRF(IWVSRF).LT.0.)THEN
                      WRITE(IPR,'(/2A,F12.5,A,/(22X,2(A,F12.5),A))')    &
     &                  ' Warning from WLTHLS:  The ground directional',&
     &                  ' reflectivity at',WVSURF(ILOS0,IWVSRF),        &
     &                  ' Microns',' and',ACOS(UMU0),                   &
     &                  ' Radian solar angle is negative (=',           &
     &                  GDIRRF(IWVSRF),').',                            &
     &                  ' The value has been reset to 0.'
                      GDIRRF(IWVSRF)=0.
                  ELSEIF(GDIRRF(IWVSRF).GT.1.)THEN
                      WRITE(IPR,'(/2A,F12.5,A,/(22X,2(A,F12.5),A))')    &
     &                  ' Warning from WLTHLS:  The ground directional',&
     &                  ' reflectivity at',WVSURF(ILOS0,IWVSRF),        &
     &                  ' Microns',' and',ACOS(UMU0),                   &
     &                  ' Radian solar angle exceeds 1 (=',             &
     &                  GDIRRF(IWVSRF),').',                            &
     &                  ' The value has been reset to 1.'
                      GDIRRF(IWVSRF)=1.
                  ENDIF
              ELSE
                  GDIRRF(IWVSRF)=0.
              ENDIF
          ENDIF
      ENDIF
      WLTHLS=.TRUE.
      RETURN
      END

      LOGICAL FUNCTION GTBRDF(NPARAM,BRDFUN,ILOS0,NLOS,                 &
     &  GSURF,DH2O,MLTRFL)

!     GTBRDF READS IN BRDF PARAMETERS AND CALCULATES REQUIRED
!     REFLECTANCE INTEGRALS USING THE BRDF FUNCTION, BRDFUN.
!     IF REFLECTED FROM A WATER LAYER WITH THICKNESS OF DH2O,
!     THE ANGULAR INTEGRATION WAS LIMITED FROM -48.75 TO +48.75,
!     WHICH CORRESPONDS TO ACCEPTABLE INCIDENT ANGLE WITHIN
!     WATER LAYER. IF SUCCESSFUL, GTBRDF RETURNS A VALUE OF TRUE.
      IMPLICIT NONE

!     PARAMETERS:
!       NGAUS    NUMBER OF QUADRATURE POINTS FOR INTEGRATING THE BRDF.
!       WDEPMX   NEGLIGIBLE TRANSMITTANCE LIQIUD WATER OPTICAL DEPTH.
      INTEGER NGAUS
      REAL WDEPMX
      PARAMETER(NGAUS=50,WDEPMX=76.)
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       NPARAM   NUMBER OF PARAMETERS IN BRDF REPRESENTATION.
!       BRDFUN   BIDIRECTIONAL REFLECTIVITY DISTRIBUTION FUNCTION.
!       ILOS0    INDEX FOR CURRENT LINE-OF-SIGHT PATH.
!       NLOS     NUMBER OF LINE-OF-SIGHT PATHS.
!       GSURF    LOGICAL FLAG, .TRUE. IF CURRENT SURFACE IS GROUND.
!       DH2O     WATER LAYER THICKNESS (mm)
!       MLTRFL   'T' MULTIPLE REFLECTION; 'F' SINGLE PASS EXTINCTION.
      INTEGER NPARAM,ILOS0,NLOS
      REAL BRDFUN,DH2O
      LOGICAL GSURF,MLTRFL
      EXTERNAL BRDFUN

!     COMMONS:
      INCLUDE 'IFIL.h'

!     /SRFACE/
!       NWVSRF   NUMBER OF WAVELENGTH GRID POINTS.
!       WVSURF   WAVELENGTH GRID FOR IMAGED-PIXELS (1 TO MLOS) AND
!                AREA-AVERAGED (MLOSP1) SURFACES [MICRONS].
!       GDIRRF   AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!                AT SOLAR ANGLE.
!       SALB     AREA-AVERAGED GROUND SURFACE ALBEDO SPECTRAL ARRAY.
!       GAZMOM   GAUSS ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       VAZMOM   VIEW ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       GDIREM   GAUSS ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       VDIREM   VIEW ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       HDIR     IMAGED-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCES
!                AT VIEWING ANGLES.
!       BRDF     IMAGED-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!                FUNCTION AT VIEWING, SUN AND RELATIVE AZIMUTH ANGLES.
      INTEGER NWVSRF
      REAL WVSURF,GDIRRF,SALB,GAZMOM,VAZMOM,GDIREM,VDIREM,HDIR,BRDF
      COMMON/SRFACE/NWVSRF(MLOSP1),WVSURF(MLOSP1,MWVSRF),               &
     &  GDIRRF(MWVSRF),SALB(MWVSRF),GAZMOM(1:MI,0:MI,0:MAZ,1:MWVSRF),   &
     &  VAZMOM(1:MLOS,0:MI,0:MAZ,1:MWVSRF),GDIREM(MI,MWVSRF),           &
     &  VDIREM(MLOS,MWVSRF),HDIR(MLOS,MWVSRF),BRDF(MLOS,MWVSRF)

!     /RCNSTN/
!       PI       THE CONSTANT PI.
!       DEG      NUMBER OF DEGREES IN ONE RADIAN.
!       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.
!       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.
!       RRIGHT   SMALLEST SINGLE PRECISION REAL ADDED TO 1 EXCEEDS 1.
      REAL PI,DEG,BIGNUM,BIGEXP,RRIGHT
      COMMON/RCNSTN/PI,DEG,BIGNUM,BIGEXP,RRIGHT

!     /ANGSRF/
!       CVWSRF  COSINE OF THE VIEW ZENITH ANGLE FROM THE SURFACE.
!       CSNSRF  COSINE OF THE SOLAR (LUNAR) ZENITH AT SURFACE.
!       AZMSRF  RELATIVE AZIMUTH ANGLE (SUN - SENSOR AT SURFACE) [RAD].
!       UMU1    COSINE OF THE PATH NADIR ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       UMU0    COSINE OF THE SOLAR ZENITH ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       PHI1    RELATIVE AZIMUTH ANGLE (SUN - LOS PATH AT SENSOR) [DEG].
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       CMU     COSINE OF THE NADIR ANGLES USED IN DISORT.
      REAL CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU
      COMMON/ANGSRF/CVWSRF(MLOS),CSNSRF(MLOS),AZMSRF(MLOS),UMU1(MLOS),  &
     &  UMU0,PHI1(MLOS),CMU(MI)

!     /DISRT/
!       UMU      MONOTONICALLY INCREASING LIST OF DISTINCT USER-PATH
!                COSINE POLAR ANGLES.
!       PHI      MONOTONICALLY INCREASING LIST OF DISTINCT RELATIVE
!                SOLAR AZIMUTH ANGLES [0 TO 180 DEG].
!       NSTR     NUMBER OF DISCRETE ORDINATE STREAMS.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       N2GAUS   ORDER OF DOUBLE-GAUSS QUADRATURES.
!       NUMU     NUMBER OF DISTINCT USER LINE-OF-SIGHT POLAR ANGLES.
!       MAPUMU   MAPPING FROM LINE-OF-SIGHT INDEX TO UMU ARRAY ENTRY.
!       NPHI     NUMBER OF DISTINCT RELATIVE SOLAR AZIMUTH ANGLES.
!       MAPPHI   MAPPING FROM LINE-OF-SIGHT INDEX TO PHI ARRAY ENTRY.
!       DIS      LOGICAL FLAG, TRUE FOR DISORT MULTIPLE SCATTERING.
!       DISAZM   LOGICAL FLAG, TRUE FOR DISORT WITH AZIMUTH DEPENDENCE.
!       DISALB   LOGICAL FLAG, TRUE FOR DISORT SPHERICAL ALBEDO OPTION.
!       LDISCL   LOGICAL FLAG, TRUE FOR ISAACS SCALED TO DISORT.
      REAL UMU,PHI
      INTEGER NSTR,NAZ,N2GAUS,NUMU,MAPUMU,NPHI,MAPPHI
      LOGICAL DIS,DISAZM,DISALB,LDISCL
      COMMON/DISRT/UMU(MXUMU),PHI(MAXPHI),NSTR,NAZ,N2GAUS,NUMU,         &
     &  MAPUMU(MLOS),NPHI,MAPPHI(MLOS),DIS,DISAZM,DISALB,LDISCL
      SAVE /DISRT/

!     /JM4B2/
!       SURFZN   ZENITH ANGLE OF SURFACE NORMAL [DEG].
!       SURFAZ   SURFACE NORMAL TO VIEW DIRECTION RELATIVE
!                AZIMUTH ANGLE DEFINED AT THE SURFACE [DEG].
      REAL SURFZN,SURFAZ
      COMMON/JM4B2/SURFZN,SURFAZ

!     /JM4B3/
!       PARAMS  PARAMETERS IN BRDF REPRESENTATION.
      REAL PARAMS
      COMMON/JM4B3/PARAMS(MBRDF)

!     /WSURF/
!       AIRIND   SPECTRAL INDEX OF REFRACTION OF AIR ABOVE WATER.
!       WATIND   SPECTRAL INDEX OF REFRACTION OF PURE WATER.
!       AIRWT    AIR TO WATER INDEX OF REFRACTION RATIO.
!       AIRWT2   AIR TO WATER INDEX OF REFRACTION RATIO SQUARED.
      REAL AIRIND,WATIND,AIRWT,AIRWT2
      COMMON/WSURF/AIRIND,WATIND,AIRWT,AIRWT2

!     DECLARE BLOCK DATA ROUTINES EXTERNAL:
      SAVE /WSURF/
      EXTERNAL DEVCBD

!     OUTPUT ARGUMENTS:
!       CFRAC    COSINE OF THE ANGLE OF REFRACTION.
!       RATSIN   RATIO OF SINE OF INCIDENT TO SINE OF REFRACTED ANGLE.
!       RATSN2   RATSIN SQUARED.
!       SURFRF   SURFACE REFLECTANCE.
      REAL CFRAC,RATSIN,RATSN2,SURFRF

!     LOCAL VARIABLES:
!       IOTEST   RESULT OF IOSTAT TEST IN READ.
!       IWVSRF   CURRENT SPECTRAL WAVELENGTH INDEX.
!       IPARAM   LOOP INDEX FOR PARAMETERS IN BRDF REPRESENTATION.
!       IGAUS    LOOP INDEX FOR ANGLE COSINE QUADRATURE POINTS ON (0,1).
!       JGAUS    LOOP INDEX FOR ANGLE COSINE QUADRATURE POINTS ON (0,1).
!       KGAUS    LOOP INDEX FOR ANGLE COSINE QUADRATURE POINTS ON (0,PI).
!       I2GAUS   LOOP INDEX FOR DISORT QUADRATURE POINTS.
!       J2GAUS   LOOP INDEX FOR DISORT QUADRATURE POINTS.
!       IAZ      DISORT AZIMUTH COMPONENT LOOP INDEX.
!       J2GMAX   I2GAUS MINUS 1 (USED TO EXPLOIT BRDF RECIPROCITY).
!       ILOS     VIEW ANGLE LOOP INDEX.
!       DREF     DIRECTIONAL REFLECTIVITY.
!       PHISUM   BRDF INTEGRATED OVER RELATIVE AZIMUTH ANGLE.
!       GMUI     IGAUS VALUE OF GMU ARRAY.
!       GMUJ     JGAUS VALUE OF GMU ARRAY.
!       CMUI     I2GAUS VALUE OF CMU ARRAY.
!       GWT2     QUADRATURE WEIGHTS ON (0,1) DOUBLED.
!       DENOM1   INTEGRAL OF WATER LAYER TRASMITTANCE (1).
!       DENOM2   INTEGRAL OF WATER LAYER TRASMITTANCE (2).
!       DENOM3   INTEGRAL OF WATER LAYER TRASMITTANCE (3).
!       WATDEP   LIQUID WATER VERTICAL OPTICAL DEPTH.
!       DH2O_M   WATER LAYER IN METER
!       WATABS   LIQUID WATER ABSORPTION COEFFICIENT [1/M].
!       TWATWT   LIQUID WATER TRANSMITTANCE TIMES GAUSSIAN WEIGHT.
      INTEGER IOTEST,IWVSRF,IPARAM,IGAUS,JGAUS,KGAUS,                   &
     &  I2GAUS,J2GAUS,IAZ,J2GMAX,ILOS
      REAL DREF,PHISUM,GMUI,GMUJ,CMUI,GWT2,                             &
     &  DENOM1,DENOM2,DENOM3,WATDEP,DH2O_M,WATABS,TWATWT

!     FUNCTIONS:
!       GTWDEP   RETURNS LIQUID WATER LAYER SPECTRAL OPTICAL DEPTH.
      REAL GTWDEP

!     LOCAL ARRAYS:
!       GMU      QUADRATURE POINTS ON (0,1).
!       GWT      QUADRATURE WEIGHTS ON (0,1).
!       GMUWT    PRODUCT OF QUADRATURE POINTS AND WEIGHTS ON (0,1).
!       GPHI     QUADRATURE POINTS ON (0,PI).
!       GPHIWT   QUADRATURE-WEIGHTED FOURIER COMPONENT COSINE TERMS.
      REAL GMU(NGAUS),GWT(NGAUS),GMUWT(NGAUS),                          &
     &  GPHI(NGAUS),GPHIWT(0:MAZ,1:NGAUS)
      SAVE GMU,GWT,GMUWT,GPHI,GPHIWT

!     DATA:
!       CWTANG   COSINE OF TOTAL REFLECTION ANGLE FROM AIR TO WATER.
!                [= nAIR/nH2O = 0.7519 ].
!       PASS1    LOGICAL FLAG, .TRUE. FOR FIRST PASS THROUGH.
!       RECIP    LOGICAL FLAG, .TRUE. IF BRDF OBEYS RECIPROCITY LAW.
      REAL CWTANG
      LOGICAL PASS1,RECIP
      SAVE PASS1,RECIP
      DATA CWTANG/1./,PASS1,RECIP/2*.TRUE./

!     CONVERT LIQUID WATER THICKNESS FROM MM TO M:
      DH2O_M=DH2O*1.E-3

!     CHECK NUMBER OF BRDF PARAMETERS:
      IF(NPARAM.GT.MBRDF)THEN
          WRITE(IPR,'(/2A,/17X,A,I3)')' Error in GTBRDF:  Number',      &
     &      ' of parameters in BRDF representation is too large.',      &
     &      ' Please increase parameter MBRDF to',NPARAM
          GTBRDF=.FALSE.
          RETURN
      ENDIF

!     READ IN NUMBER OF WAVELENGTH GRID POINTS AND SURFACE NORMAL:
      IF(LJMASS)THEN
          CALL INITCD('CARD4B2')
      ELSE
          READ(IRD,*,IOSTAT=IOTEST)NWVSRF(ILOS0),SURFZN,SURFAZ
      ENDIF
      IF(IOTEST.NE.0)THEN
          IF(ILOS0.LE.MLOS)THEN
              WRITE(IPR,'(/A,I2)')' Error in GTBRDF:  Unable to read'   &
     &          //' number of wavelengths for IMAGED PIXEL No.',ILOS0
          ELSE
              WRITE(IPR,'(/A,I2)')' Error in GTBRDF:  Unable to read'   &
     &          //' number of wavelengths for AREA-AVERAGED surface.'
          ENDIF
          GTBRDF=.FALSE.
          RETURN
      ELSEIF(NWVSRF(ILOS0).LE.0)THEN
          WRITE(IPR,'(/2A,I8)')' Error in GTBRDF:  Input number of',    &
     &      ' wavelength points for surface BRDF is',NWVSRF(ILOS0)
          GTBRDF=.FALSE.
          RETURN
      ELSEIF(NWVSRF(ILOS0).GT.MWVSRF)THEN
          WRITE(IPR,'(/2A,/17X,A,I3)')' Error in GTBRDF:  Input',       &
     &      ' number of wavelength points for surface BRDF is too',     &
     &      ' large.  Increase parameter MWVSRF to',NWVSRF(ILOS0)
          GTBRDF=.FALSE.
          RETURN
      ELSEIF(SURFZN.NE.0.)THEN
          WRITE(IPR,'(/2A,/17X,A)')' Error in GTBRDF: ',                &
     &      ' Currently, only surface normal zenith',                   &
     &      ' angles of 0. degrees are allowed.'
      ENDIF

!     DEFINE QUADRATURE POINTS
      IF(PASS1)THEN
          PASS1=.FALSE.
          CALL QGAUSN(NGAUS,GMU,GWT)
          DO IGAUS=1,NGAUS

!             COMBINE GMU AND GWT FOR THE COSINE ZENITH
!             INTEGRALS.  FOR THE AZIMUTH INTEGRALS,
!             SCALE GMU BY PI (ASSUME AZIMUTH SYMMETRY).
              GWT2=2*GWT(IGAUS)
              GMUWT(IGAUS)=GWT2*GMU(IGAUS)
!****************** VINCENT ROSS CHANGED FOR SEA BRDF SUPPORT ***********
#ifdef SEA_BRDF
! Sea BRDF is the only one with 7 parameters, but the if statement would
! be better if it ised the LBRDF flag (which would neen to be placed in
! a common block; not done here for minimal impact on the code)
              IF(NPARAM.EQ.7) THEN
                  GPHI(IGAUS)=2.0D0*PI*GMU(IGAUS) - PI
              ELSE
                  GPHI(IGAUS)=PI*GMU(IGAUS)
              ENDIF
#else
              GPHI(IGAUS)=PI*GMU(IGAUS)
#endif
!***************************** END VINCENT ROSS *************************
              IF(DIS)THEN

!                 FOR DISORT, PHI=0 CORRESPONDS TO THE IMAGED PIXEL AND
!                 THE SUN BOTH BEING IN THE FORWARD HALF-PLANE.  THE
!                 BRDF IS DEFINED WITH PHI=0 CORRESPONDING TO BOTH THE
!                 SENSOR AND SUN BEING IN THE SAME HALF-PLANE.  TO
!                 ACCOUNT FOR THIS DIFFERENCE, A FACTOR OF (-1)**IAZ IS
!                 INCORPORATED INTO THE BRDF AZIMUTH FOURIER COMPONENTS:
                  GPHIWT(0,IGAUS)=GWT(IGAUS)
                  GPHIWT(1,IGAUS)=-GWT2*COS(GPHI(IGAUS))
                  DO IAZ=2,NAZ
                      GPHIWT(IAZ,IGAUS)=GWT2*COS(IAZ*GPHI(IGAUS))
                      GWT2=-GWT2
                  ENDDO
              ENDIF
          ENDDO
      ENDIF

!     BRDF TABLE HEADER:
      IF(.NOT.LJMASS)THEN
          WRITE(IPR,'(/A,//A12,8(A12,I2))')' BRDF DATA TABLE:',         &
     &      ' WAVLEN (um)',('   PARAMETER',IPARAM,IPARAM=1,NPARAM)
          WRITE(IPR,'(A12,8A14)')                                       &
     &      ' -----------',('   -----------',IPARAM=1,NPARAM)
      ENDIF

!     LOOP OVER WAVELENGTHS:
      DO IWVSRF=1,NWVSRF(ILOS0)

!         READ IN SPECTRAL PARAMETERS:
          IF(LJMASS)THEN
              CALL INITCD('CARD4B3')
          ELSE
              READ(IRD,*,IOSTAT=IOTEST)                                 &
     &          WVSURF(ILOS0,IWVSRF),(PARAMS(IPARAM),IPARAM=1,NPARAM)
          ENDIF
          IF(IOTEST.NE.0)THEN
              IF(ILOS0.LE.MLOS)THEN
                  WRITE(IPR,'(/A,I2,A,/17X,A,I3)')' Error in GTBRDF: '  &
     &              //' Unable to read IMAGED PIXEL No.',ILOS0,' BRDF', &
     &              ' parameters for spectral point',IWVSRF
              ELSE
                  WRITE(IPR,'(/A,/17X,A,I3)')' Error in GTBRDF: '       &
     &              //' Unable to read AREA-AVERAGED surface BRDF',     &
     &              ' parameters for spectral point',IWVSRF
              ENDIF
              GTBRDF=.FALSE.
              RETURN
          ENDIF
          IF(.NOT.LJMASS)WRITE(IPR,'(F12.5,8F14.6)')                    &
     &      WVSURF(ILOS0,IWVSRF),(PARAMS(IPARAM),IPARAM=1,NPARAM)
          IF(IWVSRF.GT.1)THEN
              IF(WVSURF(ILOS0,IWVSRF).LE.WVSURF(ILOS0,IWVSRF-1))THEN
                  WRITE(IPR,'(/2A)')' Error in GTBRDF: ',               &
     &              ' BRDF surface wavelengths out of order.'
                  GTBRDF=.FALSE.
                  RETURN
              ENDIF
          ELSEIF(WVSURF(ILOS0,1).LT.0.)THEN
              WRITE(IPR,'(/2A)')' Error in GTBRDF: ',                   &
     &          ' BRDF surface wavelength less than 0.'
              GTBRDF=.FALSE.
              RETURN
          ENDIF

!         DETERMINE WATER ABSORPTION AND SCATTERING COEFFICIENTS (1/M):
          CALL WATDAT(WVSURF(ILOS0,IWVSRF),WATIND,WATABS)
          AIRIND=1.
          AIRWT=AIRIND/WATIND
          AIRWT2=AIRWT*AIRWT
          IF(DH2O.GT.0. AND. MLTRFL .AND. WATIND.GT.1.)THEN
              CWTANG=AIRWT
          ELSE
              CWTANG=1.
          ENDIF

!         POSITIVE LIQUID WATER THICKNESS?
          IF(DH2O.GT.0.)THEN

!             WATER LAYER MODEL AND WATER REFRACTIVE INDEX MUST > AIR
              WATDEP=GTWDEP(WVSURF(ILOS0,IWVSRF),WATABS,DH2O_M)
          ELSE
              WATDEP=0.
          ENDIF

!         SURFACE ALBEDO: (CWTANG=1 FOR ALL CASES; *CWTANG REMOVED)
          IF(WATDEP.LT.WDEPMX)THEN
              SALB(IWVSRF)=0.
              DENOM1=0.
              IF(MLTRFL)THEN

!                 MULTIPLE REFLECTIONS WATER LAYER MODEL:
                  DO IGAUS=1,NGAUS
                      GMUI=GMU(IGAUS)
                      DREF=0.
                      DENOM2=0.
                      DO JGAUS=1,NGAUS
                          GMUJ=GMU(JGAUS)
                          PHISUM=0.
                          DENOM3=0.
                          DO KGAUS=1,NGAUS
                              PHISUM=PHISUM+GWT(KGAUS)*MAX(0.,          &
     &                          BRDFUN(GMUI,GMUJ,GPHI(KGAUS),PARAMS))
                              DENOM3=DENOM3+GWT(KGAUS)
                          ENDDO
                          CALL AIRWAT(GMUJ,1-GMUJ*GMUJ,                 &
     &                      CFRAC,RATSIN,RATSN2,SURFRF)
                          TWATWT=GMUWT(JGAUS)*EXP(-WATDEP/GMUJ)
                          DREF=DREF+PHISUM*(1-SURFRF)*TWATWT
                          DENOM2=DENOM2+DENOM3*TWATWT
                      ENDDO
                      CALL AIRWAT(GMUI,1-GMUI*GMUI,                     &
     &                  CFRAC,RATSIN,RATSN2,SURFRF)
                      TWATWT=GMUWT(IGAUS)*EXP(-WATDEP/GMUI)
                      SALB(IWVSRF)=SALB(IWVSRF)+DREF*(1-SURFRF)*TWATWT
                      DENOM1=DENOM1+DENOM2*TWATWT
                  ENDDO
              ELSE

!                 SIMPLE ATTENUATION MOISTURE MODEL:
                  DO IGAUS=1,NGAUS
                      GMUI=GMU(IGAUS)
                      DREF=0.
                      DENOM2=0.
                      DO JGAUS=1,NGAUS
                          GMUJ=GMU(JGAUS)
                          PHISUM=0.
                          DENOM3=0.
                          DO KGAUS=1,NGAUS
                              PHISUM=PHISUM+GWT(KGAUS)*MAX(0.,          &
     &                          BRDFUN(GMUI,GMUJ,GPHI(KGAUS),PARAMS))
                              DENOM3=DENOM3+GWT(KGAUS)
                          ENDDO
                          TWATWT=GMUWT(JGAUS)*EXP(-WATDEP/GMUJ)
                          DREF=DREF+PHISUM*TWATWT
                          DENOM2=DENOM2+DENOM3*TWATWT
                      ENDDO
                      TWATWT=GMUWT(IGAUS)*EXP(-WATDEP/GMUI)
                      SALB(IWVSRF)=SALB(IWVSRF)+DREF*TWATWT
                      DENOM1=DENOM1+DENOM2*TWATWT
                  ENDDO
              ENDIF
              SALB(IWVSRF)=SALB(IWVSRF)/DENOM1
          ELSE
              SALB(IWVSRF)=0.
          ENDIF

!         IMAGED-PIXEL SURFACE:
          IF(ILOS0.LE.MLOS)THEN

!             CHECK SURFACE ALBEDO:
              IF(SALB(IWVSRF).GT.1.)THEN
                  WRITE(IPR,'(/2A,/(22X,A,F12.5,A))')' Error in',       &
     &              ' GTBRDF:  The IMAGED-pixel surface albedo',        &
     &              ' at',WVSURF(1,IWVSRF),' Microns exceeds 1.'
                  GTBRDF=.FALSE.
                  RETURN
              ENDIF

!             BRDF:
              BRDF(ILOS0,IWVSRF)=                                       &
     &          BRDFUN(CVWSRF(ILOS0),CSNSRF(ILOS0),AZMSRF(ILOS0),PARAMS)
              IF(BRDF(ILOS0,IWVSRF).LT.0.)THEN
                  WRITE(IPR,'(/2A,F12.5,A,2(/23X,A),F12.5,A)')          &
     &              ' Warning from GTBRDF:  The IMAGED-pixel',          &
     &              ' BRDF value at',WVSURF(1,IWVSRF),' Microns',       &
     &              '(for the current sun and view angles) is negative',&
     &              '(=',BRDF(ILOS0,IWVSRF),                            &
     &              ').  The value has been reset to 0.'
                  BRDF(ILOS0,IWVSRF)=0.
              ENDIF

!             HEMISPHERE DIRECTIONAL REFLECTIVITY:
              IF(WATDEP.LT.WDEPMX)THEN
                  HDIR(ILOS0,IWVSRF)=0.
                  DENOM1=0.
                  IF(MLTRFL)THEN

!                     MULTIPLE REFLECTIONS WATER LAYER MODEL:
                      DO JGAUS=1,NGAUS
                          GMUJ=GMU(JGAUS)*CWTANG
                          PHISUM=0.
                          DENOM2=0.
                          DO KGAUS=1,NGAUS
                              PHISUM=PHISUM+GWT(KGAUS)*MAX(0.,BRDFUN    &
     &                          (CVWSRF(ILOS0),GMUJ,GPHI(KGAUS),PARAMS))
                              DENOM2=DENOM2+GWT(KGAUS)
                          ENDDO
                          CALL AIRWAT(GMUJ,1-GMUJ*GMUJ,                 &
     &                      CFRAC,RATSIN,RATSN2,SURFRF)
                          TWATWT=GMUWT(JGAUS)*EXP(-WATDEP/GMUJ)
                          HDIR(ILOS0,IWVSRF)                            &
     &                      =HDIR(ILOS0,IWVSRF)+PHISUM*(1-SURFRF)*TWATWT
                          DENOM1=DENOM1+DENOM2*TWATWT
                      ENDDO
                  ELSE

!                     SIMPLE ATTENUATION MOISTURE MODEL:
                      DO JGAUS=1,NGAUS
                          GMUJ=GMU(JGAUS)*CWTANG
                          PHISUM=0.
                          DENOM2=0.
                          DO KGAUS=1,NGAUS
                              PHISUM=PHISUM+GWT(KGAUS)*MAX(0.,BRDFUN    &
     &                          (CVWSRF(ILOS0),GMUJ,GPHI(KGAUS),PARAMS))
                              DENOM2=DENOM2+GWT(KGAUS)
                          ENDDO
                          TWATWT=GMUWT(JGAUS)*EXP(-WATDEP/GMUJ)
                          HDIR(ILOS0,IWVSRF)                            &
     &                      =HDIR(ILOS0,IWVSRF)+PHISUM*TWATWT
                          DENOM1=DENOM1+DENOM2*TWATWT
                      ENDDO
                  ENDIF
                  HDIR(ILOS0,IWVSRF)=HDIR(ILOS0,IWVSRF)/DENOM1
                  IF(HDIR(ILOS0,IWVSRF).GT.1.)THEN
                      WRITE(IPR,'(/2A,/22X,2(A,F12.5),A,/(A,F12.5))')   &
     &                  ' Warning from GTBRDF:  The IMAGED-pixel',      &
     &                  ' hemisphere directional reflectance',          &
     &                  ' exceeds 1 (=',HDIR(ILOS0,IWVSRF),') at',      &
     &                  WVSURF(1,IWVSRF),' Microns when',               &
     &                  ' the cosine of the view angle equals',         &
     &                  CVWSRF(ILOS0),' The value has been reset to 1.'
                      HDIR(ILOS0,IWVSRF)=1.
                  ENDIF
              ELSE
                  HDIR(ILOS0,IWVSRF)=0.
              ENDIF
          ENDIF

!         AREA-AVERAGED GROUND SURFACE:
          IF(GSURF)THEN

!             CHECK SURFACE ALBEDO:
              IF(SALB(IWVSRF).GT.1.)THEN
                  WRITE(IPR,'(/2A,/(22X,A,F12.5,A))')' Error in',       &
     &              'GTBRDF:  The area-averaged ground surface albedo', &
     &              ' at',WVSURF(ILOS0,IWVSRF),' Microns exceeds 1.'
                  GTBRDF=.FALSE.
                  RETURN
              ENDIF
              IF(DIS)THEN

!                 DIRECTIONAL EMISSIVITY:
                  DO ILOS=1,NLOS
!****************** VINCENT ROSS CHANGED FOR OPTIMIZATION **************
#ifdef DIREM_OPTIMIZATION
                      VDIREM(ILOS,IWVSRF) = 1. - HDIR(ILOS,IWVSRF)
#else
                      VDIREM(ILOS,IWVSRF)=1.
                      IF(UMU1(ILOS).GT.0.)THEN
                          DO JGAUS=1,NGAUS
                              GMUJ=GMU(JGAUS)
                              PHISUM=0.
                              DO KGAUS=1,NGAUS
                                  PHISUM=PHISUM+GWT(KGAUS)              &
     &                              *MAX(0.,BRDFUN(UMU1(ILOS),          &
     &                              GMUJ,GPHI(KGAUS),PARAMS))
                              ENDDO
                              VDIREM(ILOS,IWVSRF)                       &
     &                          =VDIREM(ILOS,IWVSRF)-GMUWT(JGAUS)*PHISUM
                          ENDDO
                          IF(VDIREM(ILOS,IWVSRF).LT.0.)THEN
                              WRITE(IPR,'(/A,/(22X,A,F12.5),A,F12.5,A)')&
     &                          ' Warning from GTBRDF:  The area-aver'//&
     &                          'aged ground directional emissivity is',&
     &                          ' negative (=',VDIREM(ILOS,IWVSRF),     &
     &                          ') at',WVSURF(ILOS0,IWVSRF),' Microns', &
     &                          ' when the cosine of the view'          &
     &                          //' angle equals',UMU1(ILOS),           &
     &                          ' The value has been reset to 0.'
                              VDIREM(ILOS,IWVSRF)=0.
                          ELSEIF(VDIREM(ILOS,IWVSRF).GT.1.)THEN
                              WRITE(IPR,'(/A,/(22X,A,F12.5),A,F12.5,A)')&
     &                          ' Warning from GTBRDF:  The area-aver'//&
     &                          'aged ground directional emissivity',   &
     &                          ' exceeds one (=',VDIREM(ILOS,IWVSRF),  &
     &                          ') at',WVSURF(ILOS0,IWVSRF),' Microns', &
     &                          ' when the cosine of the view'          &
     &                          //' angle equals',UMU1(ILOS),           &
     &                          ' The value has been reset to 1.'
                              VDIREM(ILOS,IWVSRF)=1.
                          ENDIF
                      ENDIF
#endif
!**************************** END VINCENT ROSS *************************
                  ENDDO

!                 LOOP OVER DISORT COMPUTATIONAL ANGLES:
                  DO I2GAUS=1,N2GAUS
                      CMUI=CMU(I2GAUS)
                      GDIREM(I2GAUS,IWVSRF)=1.
                      DO JGAUS=1,NGAUS
                          GMUJ=GMU(JGAUS)
                          PHISUM=0.
                          DO KGAUS=1,NGAUS
                              PHISUM=PHISUM+GWT(KGAUS)*MAX(0.,          &
     &                          BRDFUN(CMUI,GMUJ,GPHI(KGAUS),PARAMS))
                          ENDDO
                          GDIREM(I2GAUS,IWVSRF)                         &
     &                      =GDIREM(I2GAUS,IWVSRF)-GMUWT(JGAUS)*PHISUM
                      ENDDO
                      IF(GDIREM(I2GAUS,IWVSRF).LT.0.)THEN
                          WRITE(IPR,'(/A,/(22X,A,F12.5),A,F12.5,A)')    &
     &                      ' Warning from GTBRDF:  The area-averaged'  &
     &                      //' ground directional emissivity is',      &
     &                      ' negative (=',GDIREM(I2GAUS,IWVSRF),       &
     &                      ') at',WVSURF(ILOS0,IWVSRF),' Microns',     &
     &                      ' when the cosine of the view angle equals',&
     &                      CMUI,' The value has been reset to 0.'
                          GDIREM(I2GAUS,IWVSRF)=0.
                      ELSEIF(GDIREM(I2GAUS,IWVSRF).GT.1.)THEN
                          WRITE(IPR,'(/A,/(22X,A,F12.5),A,F12.5,A)')    &
     &                      ' Warning from GTBRDF:  The area-averaged'  &
     &                      //' ground directional emissivity exceeds', &
     &                      ' one (=',GDIREM(I2GAUS,IWVSRF),            &
     &                      ') at',WVSURF(ILOS0,IWVSRF),' Microns',     &
     &                      ' when the cosine of the view angle equals',&
     &                      CMUI,' The value has been reset to 1.'
                          GDIREM(I2GAUS,IWVSRF)=1.
                      ENDIF
                  ENDDO

!                 VIEW - QUADRATURES BRDF AZIMUTH FOURIER MOMENTS:
                  DO ILOS=1,NLOS
                      IF(UMU1(ILOS).GT.0.)THEN
                          DO J2GAUS=1,N2GAUS
                              CALL GTVMOM(UMU1(ILOS),CMU(J2GAUS),       &
     &                          ILOS,J2GAUS,IWVSRF,BRDFUN,PARAMS,       &
     &                          NGAUS,NAZ,GPHI,GPHIWT)
                          ENDDO
                      ELSE
                          DO J2GAUS=1,N2GAUS
                              DO IAZ=0,NAZ
                                  VAZMOM(ILOS,J2GAUS,IAZ,IWVSRF)=0.
                              ENDDO
                          ENDDO
                      ENDIF
                  ENDDO

!                 QUADRATURES - SUN BRDF AZIMUTH FOURIER MOMENTS:
                  IF(UMU0.GT.0.)THEN

!                     VIEW - SUN BRDF AZIMUTH FOURIER MOMENTS:
                      DO ILOS=1,NLOS
                          IF(UMU1(ILOS).GT.0.)THEN
                              CALL GTVMOM(UMU1(ILOS),UMU0,ILOS,0,IWVSRF,&
     &                          BRDFUN,PARAMS,NGAUS,NAZ,GPHI,GPHIWT)
                          ELSE
                              DO IAZ=0,NAZ
                                  VAZMOM(ILOS,0,IAZ,IWVSRF)=0.
                              ENDDO
                          ENDIF
                      ENDDO

!                     QUADRATURES - SUN BRDF AZIMUTH FOURIER MOMENTS:
                      DO I2GAUS=1,N2GAUS
                          CALL GTGMOM(CMU(I2GAUS),UMU0,I2GAUS,0,        &
     &                      IWVSRF,BRDFUN,PARAMS,NGAUS,NAZ,GPHI,GPHIWT)
                      ENDDO
                  ELSE

!                     SET SOLAR BRDF AZIMUTH FOURIER MOMENTS TO ZERO:
                      DO IAZ=0,NAZ
                          DO ILOS=1,NLOS
                              VAZMOM(ILOS,0,IAZ,IWVSRF)=0.
                          ENDDO
                          DO I2GAUS=1,N2GAUS
                              GAZMOM(I2GAUS,0,IAZ,IWVSRF)=0.
                          ENDDO
                      ENDDO
                  ENDIF

!                 QUADRATURES - QUADRATURES BRDF AZM FOURIER MOMENTS:
                  IF(RECIP)THEN

!                     EXPLOIT BRDF RECIPROCITY:
                      CALL GTGMOM(CMU(1),CMU(1),1,1,                    &
     &                  IWVSRF,BRDFUN,PARAMS,NGAUS,NAZ,GPHI,GPHIWT)
                      J2GMAX=1
                      DO I2GAUS=2,N2GAUS
                          CMUI=CMU(I2GAUS)
                          DO J2GAUS=1,J2GMAX
                              CALL GTGMOM(CMUI,CMU(J2GAUS),             &
     &                          I2GAUS,J2GAUS,IWVSRF,BRDFUN,            &
     &                          PARAMS,NGAUS,NAZ,GPHI,GPHIWT)
                              DO IAZ=0,NAZ
                                  GAZMOM(J2GAUS,I2GAUS,IAZ,IWVSRF)      &
     &                              =GAZMOM(I2GAUS,J2GAUS,IAZ,IWVSRF)
                              ENDDO
                          ENDDO
                          CALL GTGMOM(CMUI,CMUI,I2GAUS,I2GAUS,          &
     &                      IWVSRF,BRDFUN,PARAMS,NGAUS,NAZ,GPHI,GPHIWT)
                          J2GMAX=I2GAUS
                      ENDDO
                  ELSE

!                     IGNORE BRDF RECIPROCITY:
                      DO I2GAUS=1,N2GAUS
                          CMUI=CMU(I2GAUS)
                          DO J2GAUS=1,N2GAUS
                              CALL GTGMOM(CMUI,CMU(J2GAUS),             &
     &                          I2GAUS,J2GAUS,IWVSRF,BRDFUN,            &
     &                          PARAMS,NGAUS,NAZ,GPHI,GPHIWT)
                          ENDDO
                      ENDDO
                  ENDIF
              ENDIF
              IF(.NOT.DIS .OR. LDISCL)THEN

!                 SOLAR ANGLE DIRECTIONAL REFLECTIVITY:
                  GDIRRF(IWVSRF)=0.
                  DENOM1=0.
                  IF(UMU0.GT.0.)THEN
                      IF(WATDEP.LT.WDEPMX)THEN

!                         MULTIPLE REFLECTIONS WATER LAYER MODEL:
                          IF(MLTRFL)THEN
                              DO JGAUS=1,NGAUS
                                  GMUJ=GMU(JGAUS)*CWTANG
                                  PHISUM=0.
                                  DENOM2=0.
                                  DO KGAUS=1,NGAUS
                                      PHISUM=PHISUM+GWT(KGAUS)*         &
     &                                  MAX(0.,BRDFUN(CSNSRF(ILOS0),    &
     &                                  GMUJ,GPHI(KGAUS),PARAMS))
                                      DENOM2=DENOM2+GWT(KGAUS)
                                  ENDDO
                                  CALL AIRWAT(GMUJ,1-GMUJ*GMUJ,         &
     &                              CFRAC,RATSIN,RATSN2,SURFRF)
                                  TWATWT=GMUWT(JGAUS)*EXP(-WATDEP/GMUJ)
                                  GDIRRF(IWVSRF)=GDIRRF(IWVSRF)         &
     &                              +PHISUM*(1-SURFRF)*TWATWT
                                  DENOM1=DENOM1+DENOM2*TWATWT
                              ENDDO
                          ELSE

!                             SIMPLE ATTENUATION MOISTURE MODEL:
                              DO JGAUS=1,NGAUS
                                  GMUJ=GMU(JGAUS)*CWTANG
                                  PHISUM=0.
                                  DENOM2=0.
                                  DO KGAUS=1,NGAUS
                                      PHISUM=PHISUM+GWT(KGAUS)*         &
     &                                  MAX(0.,BRDFUN(CSNSRF(ILOS0),    &
     &                                  GMUJ,GPHI(KGAUS),PARAMS))
                                      DENOM2=DENOM2+GWT(KGAUS)
                                  ENDDO
                                  TWATWT=GMUWT(JGAUS)*EXP(-WATDEP/GMUJ)
                                  GDIRRF(IWVSRF)                        &
     &                              =GDIRRF(IWVSRF)+PHISUM*TWATWT
                                  DENOM1=DENOM1+DENOM2*TWATWT
                              ENDDO
                          ENDIF
                          GDIRRF(IWVSRF)=GDIRRF(IWVSRF)/DENOM1
                      ELSE
                          GDIRRF(IWVSRF)=0.
                      ENDIF
                      IF(GDIRRF(IWVSRF).LT.0.)THEN
                          WRITE(IPR,                                    &
     &                      '(/2A,/22X,2(A,F12.5),A,/(22X,A,F12.5))')   &
     &                      ' Warning from GTBRDF:  The area-averaged', &
     &                      ' ground directional reflectivity is',      &
     &                      ' negative (=',GDIRRF(IWVSRF),              &
     &                      ') at',WVSURF(ILOS0,IWVSRF),' Microns',     &
     &                      ' when the cosine of the sun angle equals', &
     &                      UMU0,' The value has been reset to 0.'
                          GDIRRF(IWVSRF)=0.
                      ELSEIF(GDIRRF(IWVSRF).GT.1.)THEN
                          WRITE(IPR,                                    &
     &                      '(/2A,/22X,2(A,F12.5),A,/(22X,A,F12.5))')   &
     &                      ' Warning from GTBRDF:  The area-averaged', &
     &                      ' ground directional reflectivity exceeds', &
     &                      ' one (=',GDIRRF(IWVSRF),                   &
     &                      ') at',WVSURF(ILOS0,IWVSRF),' Microns',     &
     &                      ' when the cosine of the sun angle equals', &
     &                      UMU0,' The value has been reset to 1.'
                          GDIRRF(IWVSRF)=1.
                      ENDIF
                  ENDIF
              ENDIF
          ENDIF
      ENDDO
      GTBRDF=.TRUE.
      RETURN
      END

      SUBROUTINE AIRWAT(CIN,SIN2,CFRAC,RATSIN,RATSN2,SURFRF)

!     AIRWAT COMPUTES AIR-TO-WATER FRESNEL REFLECTION AND REFRACTION.
      IMPLICIT NONE

!     INPUT ARGUMENTS:
!       CIN      COSINE OF THE ANGLE OF INCIDENCE.
!       SIN2     SINE SQUARED OF THE ANGLE OF INCIDENCE.
      REAL CIN,SIN2

!     OUTPUT ARGUMENTS:
!       CFRAC    COSINE OF THE ANGLE OF REFRACTION.
!       RATSIN   RATIO OF SINE OF INCIDENT TO SINE OF REFRACTED ANGLE.
!       RATSN2   RATSIN SQUARED.
!       SURFRF   SURFACE REFLECTANCE.
      REAL CFRAC,RATSIN,RATSN2,SURFRF

!     COMMONS:

!     /WSURF/
!       AIRIND   SPECTRAL INDEX OF REFRACTION OF AIR ABOVE WATER.
!       WATIND   SPECTRAL INDEX OF REFRACTION OF PURE WATER.
!       AIRWT    AIR TO WATER INDEX OF REFRACTION RATIO.
!       AIRWT2   AIR TO WATER INDEX OF REFRACTION RATIO SQUARED.
      REAL AIRIND,WATIND,AIRWT,AIRWT2
      COMMON/WSURF/AIRIND,WATIND,AIRWT,AIRWT2

!     SAVED COMMONS:
      SAVE /WSURF/

!     LOCAL VARIABLES:
!       DIF2     DIFFERENCE SQUARED USED IN FRESNEL REFLECTION.
!       SUM2     SUM SQUARED USED IN FRESNEL REFLECTION.
      REAL DIF2,SUM2

!     RATIO OF SINE OF INCIDENT TO SINE OF REFRACTED ANGLE:
      RATSIN=AIRWT
      RATSN2=AIRWT2

!     CALCULATE REFLECTANCE.
      CFRAC=SQRT(1-SIN2*AIRWT2)
      DIF2=(CFRAC-CIN*AIRWT)**2
      SUM2=(CFRAC+CIN*AIRWT)**2
      SURFRF=(2-SIN2*(DIF2+SUM2))*DIF2/((2-2*SIN2*DIF2)*SUM2)
      RETURN
      END

      SUBROUTINE GTGMOM(CVIEW,CSOURC,IVIEW,ISOURC,                      &
     &  IWVSRF,BRDFUN,PARAMS,NGAUS,NAZ,GPHI,GPHIWT)

!     GTGMOM DEFINES GAUSSIAN ANGLE AREA-AVERAGED GROUND BRDF
!     AZIMUTH FOURIER MOMENTS.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       CVIEW    COSINE OF THE SURFACE VIEW ZENITH ANGLE.
!       CSOURC   COSINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       IVIEW    INDEX FOR THE SURFACE VIEW ZENITH ANGLE.
!       ISOURC   INDEX FOR THE SURFACE SOURCE ZENITH ANGLE.
!       IWVSRF   CURRENT SPECTRAL WAVELENGTH INDEX.
!       BRDFUN   BIDIRECTIONAL REFLECTIVITY DISTRIBUTION FUNCTION.
!       PARAMS   PARAMETERS IN BRDF REPRESENTATION.
!       NGAUS    NUMBER OF QUADRATURE POINTS FOR INTEGRATING THE BRDF.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       GPHI     QUADRATURE POINTS ON (0,PI).
!       GPHIWT   QUADRATURE-WEIGHTED FOURIER COMPONENT COSINE TERMS.
      INTEGER IVIEW,ISOURC,IWVSRF,NGAUS,NAZ
      REAL CVIEW,CSOURC,BRDFUN,                                         &
     &  PARAMS(*),GPHI(NGAUS),GPHIWT(0:MAZ,1:NGAUS)
      EXTERNAL BRDFUN

!     COMMONS:

!     /SRFACE/
!       NWVSRF   NUMBER OF WAVELENGTH GRID POINTS.
!       WVSURF   WAVELENGTH GRID FOR IMAGED-PIXELS (1 TO MLOS) AND
!                AREA-AVERAGED (MLOSP1) SURFACES [MICRONS].
!       GDIRRF   AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!                AT SOLAR ANGLE.
!       SALB     AREA-AVERAGED GROUND SURFACE ALBEDO SPECTRAL ARRAY.
!       GAZMOM   GAUSS ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       VAZMOM   VIEW ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       GDIREM   GAUSS ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       VDIREM   VIEW ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       HDIR     IMAGED-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCES
!                AT VIEWING ANGLES.
!       BRDF     IMAGED-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!                FUNCTION AT VIEWING, SUN AND RELATIVE AZIMUTH ANGLES.
      INTEGER NWVSRF
      REAL WVSURF,GDIRRF,SALB,GAZMOM,VAZMOM,GDIREM,VDIREM,HDIR,BRDF
      COMMON/SRFACE/NWVSRF(MLOSP1),WVSURF(MLOSP1,MWVSRF),               &
     &  GDIRRF(MWVSRF),SALB(MWVSRF),GAZMOM(1:MI,0:MI,0:MAZ,1:MWVSRF),   &
     &  VAZMOM(1:MLOS,0:MI,0:MAZ,1:MWVSRF),GDIREM(MI,MWVSRF),           &
     &  VDIREM(MLOS,MWVSRF),HDIR(MLOS,MWVSRF),BRDF(MLOS,MWVSRF)

!     LOCAL VARIABLES:
!       IAZ      DISORT AZIMUTH COMPONENT LOOP INDEX.
!       KGAUS    QUADRATURE POINT LOOP INDEX FOR INTEGRATING THE BRDF.
!       BRDF0    NON-NEGATIVE BRDF VALUE.
      INTEGER IAZ,KGAUS
      REAL BRDF0

!     INITIALIZE AREA-AVERAGED GROUND BRDF AZIMUTH FOURIER MOMENTS:
      BRDF0=MAX(BRDFUN(CVIEW,CSOURC,GPHI(1),PARAMS),0.)
!bug? DO IAZ=1,NAZ
      DO IAZ=0,NAZ
          GAZMOM(IVIEW,ISOURC,IAZ,IWVSRF)=BRDF0*GPHIWT(IAZ,1)
      ENDDO

!     INCREMENT AREA-AVERAGED GROUND BRDF AZIMUTH FOURIER MOMENTS:
      DO KGAUS=2,NGAUS
          BRDF0=MAX(BRDFUN(CVIEW,CSOURC,GPHI(KGAUS),PARAMS),0.)
          DO IAZ=0,NAZ
              GAZMOM(IVIEW,ISOURC,IAZ,IWVSRF)                           &
     &          =GAZMOM(IVIEW,ISOURC,IAZ,IWVSRF)+BRDF0*GPHIWT(IAZ,KGAUS)
          ENDDO
      ENDDO
!69   write(69,*)iview,isourc,iwvsrf
!69   write(69,*)(GAZMOM(IVIEW,ISOURC,IAZ,IWVSRF),IAZ=1,NAZ)
      RETURN
      END

      SUBROUTINE GTVMOM(CVIEW,CSOURC,IVIEW,ISOURC,                      &
     &  IWVSRF,BRDFUN,PARAMS,NGAUS,NAZ,GPHI,GPHIWT)

!     GTVMOM DEFINES VIEW ANGLE (LINE-OF-SIGHT) AREA-AVERAGED GROUND
!     BRDF AZIMUTH FOURIER MOMENTS.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       CVIEW    COSINE OF THE SURFACE VIEW ZENITH ANGLE.
!       CSOURC   COSINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       IVIEW    INDEX FOR THE SURFACE VIEW ZENITH ANGLE.
!       ISOURC   INDEX FOR THE SURFACE SOURCE ZENITH ANGLE.
!       IWVSRF   CURRENT SPECTRAL WAVELENGTH INDEX.
!       BRDFUN   BIDIRECTIONAL REFLECTIVITY DISTRIBUTION FUNCTION.
!       PARAMS   PARAMETERS IN BRDF REPRESENTATION.
!       NGAUS    NUMBER OF QUADRATURE POINTS FOR INTEGRATING THE BRDF.
!       NAZ      NUMBER OF DISORT AZIMUTH COMPONENTS.
!       GPHI     QUADRATURE POINTS ON (0,PI).
!       GPHIWT   QUADRATURE-WEIGHTED FOURIER COMPONENT COSINE TERMS.
      INTEGER IVIEW,ISOURC,IWVSRF,NGAUS,NAZ
      REAL CVIEW,CSOURC,BRDFUN,                                         &
     &  PARAMS(*),GPHI(NGAUS),GPHIWT(0:MAZ,1:NGAUS)
      EXTERNAL BRDFUN

!     COMMONS:

!     /SRFACE/
!       NWVSRF   NUMBER OF WAVELENGTH GRID POINTS.
!       WVSURF   WAVELENGTH GRID FOR IMAGED-PIXELS (1 TO MLOS) AND
!                AREA-AVERAGED (MLOSP1) SURFACES [MICRONS].
!       GDIRRF   AREA-AVERAGED GROUND SURFACE DIRECTIONAL REFLECTIVITY
!                AT SOLAR ANGLE.
!       SALB     AREA-AVERAGED GROUND SURFACE ALBEDO SPECTRAL ARRAY.
!       GAZMOM   GAUSS ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       VAZMOM   VIEW ANGLE AREA-AVG'D BRDF AZIMUTH FOURIER MOMENTS.
!       GDIREM   GAUSS ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       VDIREM   VIEW ANGLE AREA-AVG'D GROUND DIRECTIONAL EMISSIVITIES.
!       HDIR     IMAGED-PIXEL HEMISPHERE DIRECTIONAL REFLECTANCES
!                AT VIEWING ANGLES.
!       BRDF     IMAGED-PIXEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!                FUNCTION AT VIEWING, SUN AND RELATIVE AZIMUTH ANGLES.
      INTEGER NWVSRF
      REAL WVSURF,GDIRRF,SALB,GAZMOM,VAZMOM,GDIREM,VDIREM,HDIR,BRDF
      COMMON/SRFACE/NWVSRF(MLOSP1),WVSURF(MLOSP1,MWVSRF),               &
     &  GDIRRF(MWVSRF),SALB(MWVSRF),GAZMOM(1:MI,0:MI,0:MAZ,1:MWVSRF),   &
     &  VAZMOM(1:MLOS,0:MI,0:MAZ,1:MWVSRF),GDIREM(MI,MWVSRF),           &
     &  VDIREM(MLOS,MWVSRF),HDIR(MLOS,MWVSRF),BRDF(MLOS,MWVSRF)

!     LOCAL VARIABLES:
!       IAZ      DISORT AZIMUTH COMPONENT LOOP INDEX.
!       KGAUS    QUADRATURE POINT LOOP INDEX FOR INTEGRATING THE BRDF.
!       BRDF0    NON-NEGATIVE BRDF VALUE.
      INTEGER IAZ,KGAUS
      REAL BRDF0

!     INITIALIZE AREA-AVERAGED GROUND BRDF AZIMUTH FOURIER MOMENTS:
      BRDF0=MAX(BRDFUN(CVIEW,CSOURC,GPHI(1),PARAMS),0.)
!bug? DO IAZ=1,NAZ
      DO IAZ=0,NAZ
          VAZMOM(IVIEW,ISOURC,IAZ,IWVSRF)=BRDF0*GPHIWT(IAZ,1)
      ENDDO

!     INCREMENT AREA-AVERAGED GROUND BRDF AZIMUTH FOURIER MOMENTS:
      DO KGAUS=2,NGAUS
          BRDF0=MAX(BRDFUN(CVIEW,CSOURC,GPHI(KGAUS),PARAMS),0.)
          DO IAZ=0,NAZ
              VAZMOM(IVIEW,ISOURC,IAZ,IWVSRF)                           &
     &          =VAZMOM(IVIEW,ISOURC,IAZ,IWVSRF)+BRDF0*GPHIWT(IAZ,KGAUS)
          ENDDO
      ENDDO
!69   write(69,*)iview,isourc,iwvsrf
!69   write(69,*)(GAZMOM(IVIEW,ISOURC,IAZ,IWVSRF),IAZ=1,NAZ)
      RETURN
      END

      REAL FUNCTION REFWAL(CVIEW,CSOURC,PHI,PARAMS)

!     REFWAL RETURNS THE 4-PARAMETER WALTHALL MODEL
!     BIDIRECTIONAL REFLECTANCE DISTRIBUTION FUNCTION (BRDF).
!     [C.L. WALTHALL, J.M. NORMAN, J.M. WELLES, G. CAMPBELL, AND
!     B.L. BLAD, "SIMPLE EQUATION TO APPROXIMATE THE BIDIRECTIONAL
!     REFLECTANCE FROM VEGETATION CANOPIES AND BARE SOIL SURFACES,"
!     APPL. OPT., VOL 24, 383-387 (1985)].
      IMPLICIT NONE

!     INPUT ARGUMENTS:
!       CVIEW   COSINE OF THE SURFACE VIEW ZENITH ANGLE.
!       CSOURC  COSINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       PHI     SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE [0 TO PI RADIANS].
!       PARAMS  PARAMETERS IN BRDF REPRESENTATION:

!     BRDF(CVIEW,CSOURC,AZIM)

!       = PARAMS(1) + PARAMS(2) * ACOS(CVIEW) * ACOS(CSOURC) * COS(PHI)

!                                            2               2
!                   + PARAMS(3) * ACOS(CVIEW)  * ACOS(CSOURC)

!                                              2               2
!                   + PARAMS(4) * [ ACOS(CVIEW)  + ACOS(CSOURC)  ]

      REAL CVIEW,CSOURC,PHI,PARAMS(*)

!     LOCAL VARIABLES:
!       VIEW    SURFACE VIEW ZENITH ANGLE [RADIANS].
!       SOURC   SURFACE SOURCE ZENITH ANGLE [RADIANS].
!       COSPHI  COSINE OF THE SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE.
!       VWSRC   PRODUCT OF VIEW AND SOURC.
      REAL VIEW,SOURC,COSPHI,VWSRC

!     BRDF FUNCTION:
      COSPHI=COS(PHI)
      VIEW=ACOS(CVIEW)
      SOURC=ACOS(CSOURC)
      VWSRC=VIEW*SOURC
      REFWAL=PARAMS(1)+VWSRC*(COSPHI*PARAMS(2)+VWSRC*PARAMS(3))         &
     &  +(VIEW**2+SOURC**2)*PARAMS(4)
      RETURN
      END

      REAL FUNCTION REFWLS(CVIEW,CSOURC,PHI,PARAMS)

!     REFWLS RETURNS THE 4-PARAMETER SINUSOIDAL WALTHALL MODEL
!     BIDIRECTIONAL REFLECTANCE DISTRIBUTION FUNCTION (BRDF).
!     [C.L. WALTHALL, J.M. NORMAN, J.M. WELLES, G. CAMPBELL, AND
!     B.L. BLAD, "SIMPLE EQUATION TO APPROXIMATE THE BIDIRECTIONAL
!     REFLECTANCE FROM VEGETATION CANOPIES AND BARE SOIL SURFACES,"
!     APPL. OPT., VOL 24, 383-387 (1985)].
      IMPLICIT NONE

!     INPUT ARGUMENTS:
!       CVIEW   COSINE OF THE SURFACE VIEW ZENITH ANGLE.
!       CSOURC  COSINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       PHI     SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE [0 TO PI RADIANS].
!       PARAMS  PARAMETERS IN BRDF REPRESENTATION:

!     BRDF(CVIEW,CSOURC,AZIM)

!       = PARAMS(1) + PARAMS(2) * SIN(VIEW) * SIN(SOURC) * COS(PHI)

!                                          2             2
!                   + PARAMS(3) * SIN(VIEW)  * SIN(SOURC)

!                                            2             2
!                   + PARAMS(4) * [ SIN(VIEW)  + SIN(SOURC)  ]

      REAL CVIEW,CSOURC,PHI,PARAMS(*)

!     LOCAL VARIABLES:
!       VIEW    SINE OF SURFACE VIEW ZENITH ANGLE.
!       SOURC   SINE OF SURFACE SOURCE ZENITH ANGLE.
!       COSPHI  COSINE OF THE SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE.
!       VWSRC   PRODUCT OF VIEW AND SOURC.
      REAL VIEW,SOURC,COSPHI,VWSRC

!     BRDF FUNCTION:
      COSPHI=COS(PHI)
      VIEW=1-CVIEW**2
      SOURC=1-CSOURC**2
      VWSRC=VIEW*SOURC
      REFWLS=PARAMS(1)+SQRT(VWSRC)*COSPHI*PARAMS(2)+VWSRC*PARAMS(3)     &
     &  +(VIEW+SOURC)*PARAMS(4)
      RETURN
      END

      REAL FUNCTION REFROU(CVIEW,CSOURC,PHI,PARAMS)

!     REFROU RETURNS THE 3-PARAMETER ROUJEAN MODEL
!     BIDIRECTIONAL REFLECTANCE DISTRIBUTION FUNCTION (BRDF).
!     [J.L. ROUJEAN, M. LEROY, AND P.Y. DESCHAMPS,
!     "A BIDIRECTIONAL REFLECTANCE MODEL OF THE EARTH
!     SURFACE FOR THE CORRECTION OF REMOTE SENSING DATA,"
!     J. GEOPHYS. RES., VOL 97, 20,455-20,468 (1992)].
      IMPLICIT NONE

!     INPUT ARGUMENTS:
!       CVIEW   COSINE OF THE SURFACE VIEW ZENITH ANGLE.
!       CSOURC  COSINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       PHI     SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE [0 TO PI RADIANS].
!       PARAMS  PARAMETERS IN BRDF REPRESENTATION:
!         PARAMS(1)  ISOTROPIC FACTOR.
!         PARAMS(2)  SURFACE SCATTERING PARAMETER.
!         PARAMS(3)  VOLUME SCATTERING PARAMETER.
      REAL CVIEW,CSOURC,PHI,PARAMS(*)

!     /RCNSTN/
!       PI       THE CONSTANT PI.
!       DEG      NUMBER OF DEGREES IN ONE RADIAN.
!       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.
!       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.
!       RRIGHT   SMALLEST SINGLE PRECISION REAL ADDED TO 1 EXCEEDS 1.
      REAL PI,DEG,BIGNUM,BIGEXP,RRIGHT
      COMMON/RCNSTN/PI,DEG,BIGNUM,BIGEXP,RRIGHT

!     LOCAL VARIABLES:
!       SVIEW   SINE OF THE SURFACE VIEW ZENITH ANGLE.
!       SSOURC  SINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       TVIEW   TANGENT OF THE SURFACE VIEW ZENITH ANGLE.
!       TSOURC  TANGENT OF THE SURFACE SOURCE ZENITH ANGLE.
!       COSPHI  COSINE OF THE SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE.
!       GEOFAC  GEOMETRY FACTOR.
!       F1      SURFACE REFLECTANCE COMPONENT.
!       CPHASE  COSINE OF THE PHASE ANGLE.
!       PHASE   PHASE ANGLE [RADIANS].
!       F2      VOLUME SCATTERING COMPONENT.
      REAL SVIEW,SSOURC,TVIEW,TSOURC,COSPHI,GEOFAC,F1,CPHASE,PHASE,F2

!     SURFACE REFLECTANCE COMPONENT:
      SVIEW=SQRT(1-CVIEW**2)
      SSOURC=SQRT(1-CSOURC**2)
      TVIEW=SVIEW/CVIEW
      TSOURC=SSOURC/CSOURC
      COSPHI=COS(PHI)
      GEOFAC=SQRT((TVIEW-TSOURC)**2+2*TVIEW*TSOURC*(1-COSPHI))
      F1=TVIEW*TSOURC*((PI-PHI)*COSPHI+SIN(PHI))/2-(TVIEW+TSOURC+GEOFAC)

!     VOLUME SCATTERING COMPONENT:
      CPHASE=CVIEW*CSOURC+SVIEW*SSOURC*COSPHI
      PHASE=ACOS(CPHASE)
      F2=(4*(SIN(PHASE)+(PI/2-PHASE)*CPHASE)/(PI*(CVIEW+CSOURC))-1)/3

!     BRDF FUNCTION:
      REFROU=PARAMS(1)+PARAMS(2)*F1/PI+PARAMS(3)*F2
      RETURN
      END

      REAL FUNCTION REFHAP(CVIEW,CSOURC,PHI,PARAMS)

!     REFHAP RETURNS THE 3-PARAMETER HAPKE 1981 MODEL
!     BIDIRECTIONAL REFLECTANCE DISTRIBUTION FUNCTION (BRDF).
!     [B.W. HAPKE, "BIDIRECTIONAL REFLECTANCE SPECTROSCOPY,
!     1, THEORY," J. GEOPHYS. RES., VOL 86, 3039-3054 (1981);
!     B.W. HAPKE, "BIDIRECTIONAL REFLECTANCE SPECTROSCOPY,
!     3, CORRECTION FOR MACROSCOPIC ROUGHNESS, ICARUS, VOL 59,
!     41-59 (1984);  B.W. HAPKE, "BIDIRECTIONAL REFLECTANCE
!     SPECTROSCOPY, 4, THE EXTINCTION COEFFICIENT AND THE
!     OPPOSITION EFFECT," ICARUS, VOL 67, 264-280 (1986)].
      IMPLICIT NONE

!     INPUT ARGUMENTS:
!       CVIEW   COSINE OF THE SURFACE VIEW ZENITH ANGLE.
!       CSOURC  COSINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       PHI     SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE [0 TO PI RADIANS].
!       PARAMS  PARAMETERS IN BRDF REPRESENTATION:
!         PARAMS(1)  SURFACE PARTICLE SINGLE SCATTERING ALBEDO.
!         PARAMS(2)  HENYEY-GREENSTEIN ASYMMETRY FACTOR.
!         PARAMS(3)  HOT SPOT WIDTH.
!         PARAMS(4)  HOT SPOT AMPLITUDE.
      REAL CVIEW,CSOURC,PHI,PARAMS(*)

!     LOCAL VARIABLES:
!       CPHASE  COSINE OF THE PHASE ANGLE.
!       ONEMP2  ONE MINUS THE HENYEY-GREENSTEIN ASYMMETRY FACTOR.
!       ONEPP2  ONE PLUS THE HENYEY-GREENSTEIN ASYMMETRY FACTOR.
!       HGZERO  HENYEY-GREENSTEIN PHASE FUNCTION AT 0.
!       DENOM   FACTOR IN DENOMINATOR OF HENYEY-GREENSTEIN FUNCTION.
!       HGPHAS  HENYEY-GREENSTEIN PHASE FUNCTION AT PHASE ANGLE.
!       BCKSCT  BACKSCATTERING FUNCTION.
!       RCOALB  ROOT OF THE SURFACE PARTICLE SINGLE SCATTERING COALBEDO.
!       HS      MULTIPLE SCATTERING TERM AT SOURCE ANGLE.
!       HV      MULTIPLE SCATTERING TERM AT VIEW ANGLE.
      REAL CPHASE,ONEMP2,ONEPP2,HGZERO,DENOM,HGPHAS,BCKSCT,RCOALB,HS,HV

!     HENYEY-GREENSTEIN PHASE FUNCTION:
      CPHASE=CVIEW*CSOURC+COS(PHI)*SQRT((1-CVIEW**2)*(1-CSOURC**2))
      ONEMP2=1-PARAMS(2)
      ONEPP2=1+PARAMS(2)
      HGZERO=ONEMP2/ONEPP2**2
      DENOM=1+2*PARAMS(2)*CPHASE+PARAMS(2)**2
      HGPHAS=ONEMP2*ONEPP2/(DENOM*SQRT(DENOM))

!     BACKSCATTER FUNCTION:
      BCKSCT=PARAMS(4)                                                  &
     &  /(PARAMS(1)*HGZERO*(SQRT((1.+CPHASE)/(1-CPHASE))/PARAMS(3)+1.))

!     MULTIPLE SCATTERING FUNCTIONS:
      RCOALB=SQRT(1-PARAMS(1))
      HS=(.5+CSOURC)/(.5+CSOURC*RCOALB)
      HV=(.5+CVIEW)/(.5+CVIEW*RCOALB)

!     BRDF FUNCTION:
      REFHAP=.25*PARAMS(1)*((1+BCKSCT)*HGPHAS+HV*HS-1.)/(CSOURC+CVIEW)
      RETURN
      END

      REAL FUNCTION REFRAH(CVIEW,CSOURC,PHI,PARAMS)

!     REFHAP RETURNS THE 3-PARAMETER RAHMAN MODEL BIDIRECTIONAL
!     REFLECTANCE DISTRIBUTION FUNCTION (BRDF).  [H. RAHMAN,
!     B. PINTY, AND M.M. VERSTRAETE, "COUPLED SURFACE-ATMOSPHERE
!     REFLECTANCE (CSAR) MODEL, 2. SEMIEMPIRICAL SURFACE MODEL
!     USABLE WITH NOAA ADVANCED VERY HIGH RESOLUTION RADIOMETER
!     DATA," J. GEOPHYS. RES., VOL D98, 20,791-20,801 (1993).]
      IMPLICIT NONE

!     INPUT ARGUMENTS:
!       CVIEW   COSINE OF THE SURFACE VIEW ZENITH ANGLE.
!       CSOURC  COSINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       PHI     SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE [0 TO PI RADIANS].
!       PARAMS  PARAMETERS IN BRDF REPRESENTATION:
!         PARAMS(1)  REFLECTANCE INTENSITY FACTOR.
!         PARAMS(2)  HENYEY-GREENSTEIN ASYMMETRY FACTOR.
!         PARAMS(3)  SURFACE ANISOTROPY PARAMETER.
      REAL CVIEW,CSOURC,PHI,PARAMS(*)

!     LOCAL VARIABLES:
!       SVIEW   SINE OF THE SURFACE VIEW ZENITH ANGLE.
!       SSOURC  SINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       COSPHI  COSINE OF THE SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE.
!       CPHASE  COSINE OF THE PHASE ANGLE.
!       ASYMSQ  HENYEY-GREENSTEIN ASYMMETRY FACTOR SQUARED.
!       DENOM   FACTOR IN DENOMINATOR OF HENYEY-GREENSTEIN FUNCTION.
!       HGPHAS  HENYEY-GREENSTEIN PHASE FUNCTION AT PHASE ANGLE.
!       TVIEW   TANGENT OF THE SURFACE VIEW ZENITH ANGLE.
!       TSOURC  TANGENT OF THE SURFACE SOURCE ZENITH ANGLE.
!       GEOFAC  GEOMETRY FACTOR.
!       HOTSPT  HOT SPOT FUNCTION
      REAL SVIEW,SSOURC,COSPHI,CPHASE,ASYMSQ,DENOM,HGPHAS,              &
     &  TVIEW,TSOURC,GEOFAC,HOTSPT

!     HENYEY-GREENSTEIN FUNCTION:
      SVIEW=SQRT(1-CVIEW**2)
      SSOURC=SQRT(1-CSOURC**2)
      COSPHI=COS(PHI)
      CPHASE=CVIEW*CSOURC+SVIEW*SSOURC*COSPHI
      ASYMSQ=PARAMS(2)**2
      DENOM=1.+2*PARAMS(2)*CPHASE+ASYMSQ
      HGPHAS=(1-ASYMSQ)/(DENOM*SQRT(DENOM))

!     HOT SPOT:
      TVIEW=SVIEW/CVIEW
      TSOURC=SSOURC/CSOURC
      GEOFAC=SQRT((TVIEW-TSOURC)**2+2*TVIEW*TSOURC*(1-COSPHI))
      HOTSPT=1.+(1-PARAMS(1))/(1.+GEOFAC)

!     BRDF FUNCTION:
      REFRAH=PARAMS(1)*HGPHAS*HOTSPT                                    &
     &  *(CSOURC*CVIEW*(CSOURC+CVIEW))**(PARAMS(3)-1.)
      RETURN
      END

      REAL FUNCTION REFRL(CVIEW,CSOURC,PHI,PARAMS)

!     REFRL RETURNS THE 5-PARAMETER ROSS-LI (RECIPROCAL ROSS THICK
!     LI SPARSE) MODEL BIDIRECTIONAL REFLECTANCE DISTRIBUTION
!     FUNCTION (BRDF).  [W. WANNER, X. LI AND A.H. STRAHLER, "ON THE
!     DERIVATION OF KERNELS FOR KERNEL-DRIVEN MODELS OF BIDIRECTIONAL
!     REFLECTANCE," J. GEOPHYS. RES., VOL D100, 21,077-21,090 (1995);
!     W. WANNER, A.H. STRAHLER, B. HU, X. LI, C.L. BARKER SCHAAF,
!     P. LEWIS, J.-P. MULLER AND M.J. BARNSLEY, "GLOBAL RETRIEVAL
!     OF BIDIRECTIONAL REFLECTANCE AND ALBEDO OVER LAND FROM EOS
!     MODIS AND MISR DATA: THEORY AND ALGORITHM, J. GEOPHYS. RES.,
!     VOL 102D, 17,143-17,162 (1997); AND W. LUCHT, C.B. SCHAAF
!     AND A.H. STRAHLER, "AN ALGORITHM FOR THE RETRIEVAL OF ALBEDO
!     FROM SPACE USING SEMIEMPIRICAL BRDF MODELS," IEEE TRANS.
!     GEOSCI. REMOTE SENS., IN PRESS, 1999.]
      IMPLICIT NONE

!     INPUT ARGUMENTS:
!       CVIEW   COSINE OF THE SURFACE VIEW ZENITH ANGLE.
!       CSOURC  COSINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       PHI     SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE [0 TO PI RADIANS].
!       PARAMS  PARAMETERS IN BRDF REPRESENTATION:
!         PARAMS(1)  ISOTROPIC FACTOR.
!         PARAMS(2)  SURFACE SCATTERING PARAMETER.
!         PARAMS(3)  VOLUME SCATTERING PARAMETER.
!         PARAMS(4)  DIMENSIONLESS CROWN RELATIVE HEIGHT PARAMETER.
!         PARAMS(5)  CROWN VERTICAL TO HORIZONTAL RADIUS RATIO.
      REAL CVIEW,CSOURC,PHI,PARAMS(*)

!     /RCNSTN/
!       PI       THE CONSTANT PI.
!       DEG      NUMBER OF DEGREES IN ONE RADIAN.
!       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.
!       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.
!       RRIGHT   SMALLEST SINGLE PRECISION REAL ADDED TO 1 EXCEEDS 1.
      REAL PI,DEG,BIGNUM,BIGEXP,RRIGHT
      COMMON/RCNSTN/PI,DEG,BIGNUM,BIGEXP,RRIGHT

!     LOCAL VARIABLES:
!       SVIEW   SINE OF THE SURFACE VIEW ZENITH ANGLE.
!       SSOURC  SINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       TANVP   CROWN VERTICAL TO HORIZONTAL RADIUS RATIO TIMES
!               TANGENT OF THE SURFACE VIEW ZENITH ANGLE.
!       TANSP   CROWN VERTICAL TO HORIZONTAL RADIUS RATIO TIMES
!               TANGENT OF THE SURFACE SOURCE ZENITH ANGLE.
!       TANVSP  PRODUCT OF TANVP AND TANSP.
!       SECVP   SQUARE ROOT OF ONE PLUS TANVP SQUARED.
!       SECSP   SQUARE ROOT OF ONE PLUS TANSP SQUARED.
!       SECVSP  SUM OF SECVP AND SECSP.
!       COSPHI  COSINE OF THE SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE.
!       TTCPHI  PRODUCT OF TANVP, TANSP, AND COSPHI.
!       COST2   SQUARE OF COSINE OF PARAMETER T.
!       SIN2T   SINE OF TWO TIMES PARAMETER T.
!       F1      THE LI SPARSE RECIPROCAL KERNEL.
!       CPHASE  COSINE OF THE PHASE ANGLE.
!       PHASE   PHASE ANGLE [RADIANS].
!       F2      VOLUME SCATTERING COMPONENT.
      REAL SVIEW,SSOURC,TANVP,TANSP,TANVSP,SECVP,SECSP,SECVSP,COSPHI,   &
     &  TTCPHI,COST2,SIN2T,F1,CPHASE,PHASE,F2

!     SURFACE REFLECTANCE COMPONENT:
      SVIEW=SQRT(1-CVIEW**2)
      SSOURC=SQRT(1-CSOURC**2)
      TANVP=PARAMS(5)*SVIEW/CVIEW
      TANSP=PARAMS(5)*SSOURC/CSOURC
      TANVSP=TANVP*TANSP
      SECVP=SQRT(1.+TANVP**2)
      SECSP=SQRT(1.+TANSP**2)
      SECVSP=SECVP+SECSP
      COSPHI=COS(PHI)
      TTCPHI=TANVSP*COSPHI
      F1=(SECVP*SECSP+1.+TTCPHI)/2-SECVSP
      COST2=(PARAMS(4)/SECVSP)**2                                       &
     &  *(TANVP**2+TANSP**2-2*TTCPHI+(TANVSP-TTCPHI)*(TANVSP+TTCPHI))
      IF(COST2.LT.1.)THEN

!         ADD OVERLAP TERM:
          SIN2T=2*SQRT(COST2-COST2**2)
          F1=F1+SECVSP*(ASIN(SIN2T)-SIN2T)/(2*PI)
      ENDIF

!     VOLUME SCATTERING COMPONENT:
      CPHASE=CVIEW*CSOURC+SVIEW*SSOURC*COSPHI
      PHASE=ACOS(CPHASE)
      F2=(SIN(PHASE)+(PI/2-PHASE)*CPHASE)/(CVIEW+CSOURC)-PI/4

!     BRDF FUNCTION:
      REFRL=PARAMS(1)+PARAMS(2)*F1+PARAMS(3)*F2
      RETURN
      END

      REAL FUNCTION REFPV(CVIEW,CSOURC,PHI,PARAMS)

!     REFPV RETURNS THE 4-PARAMETER PINTY AND VERSTRAETE 1991 MODEL
!     BIDIRECTIONAL REFLECTANCE DISTRIBUTION FUNCTION (BRDF).
!     [B. PINTY AND M.M. VERSTRAETE, "EXTRACTING INFORMATION ON
!     SURFACE PROPERTIES FROM BIDIRECIONAL REFLECTANCE MEASUREMENTS,"
!     J. GEOPHYS. RES., VOL 96, 2865-2874 (1991).]
      IMPLICIT NONE

!     PARAMETERS:
!       PVCONS  CONSTANT USED IN CALCULATION OF PV [= 2 - 8 / (3 PI) ]
      REAL PVCONS
      PARAMETER(PVCONS=1.1511736)

!     INPUT ARGUMENTS:
!       CVIEW   COSINE OF THE SURFACE VIEW ZENITH ANGLE.
!       CSOURC  COSINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       PHI     SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE [0 TO PI RADIANS].
!       PARAMS  PARAMETERS IN BRDF REPRESENTATION:
!         PARAMS(1)  SURFACE PARTICLE SINGLE SCATTERING ALBEDO.
!         PARAMS(2)  HENYEY-GREENSTEIN ASYMMETRY FACTOR.
!         PARAMS(3)  GOUDRIAAN SCATTERER ANGLE DISTRIBUTION PARAMETER.
!           = -0.4 FOR ERECTOPHILE CANOPY (MOSTLY VERITCAL SCATTERERS).
!           =  0.0 FOR UNIFORM (SPHERICAL) DISTRIBUTION
!           =  0.6 FOR PLANOPHILE CANOPY (MOSTLY HORIZONTAL SCATTERERS).
!         PARAMS(4)  CANOPY SCATTERER AREA DENSITY * SUN FLECK RADIUS.
      REAL CVIEW,CSOURC,PHI,PARAMS(*)

!     LOCAL VARIABLES:
!       PSI1    GOUDRIAAN (1977) SCATTERER ORIENTATION FUNCTION.
!       PSI2    GOUDRIAAN (1977) SCATTERER ORIENTATION FUNCTION.
!       KAPPAV  GOUDRIAAN (1977) SCATTERER ORIENTATION PARAMETER.
!       MUKAPV  SCALED COSINE OF THE SURFACE VIEW ZENITH ANGLE.
!       MUKAPS  SCALED COSINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       SVIEW   SINE OF THE SURFACE VIEW ZENITH ANGLE.
!       SSOURC  SINE OF THE SURFACE SOURCE ZENITH ANGLE.
!       COSPHI  COSINE OF THE SOURCE-TO-VIEW RELATIVE AZIMUTH ANGLE.
!       CPHASE  COSINE OF THE PHASE ANGLE.
!       ASYMSQ  HENYEY-GREENSTEIN ASYMMETRY FACTOR SQUARED.
!       DENOM   FACTOR IN DENOMINATOR OF HENYEY-GREENSTEIN FUNCTION.
!       HGPHAS  HENYEY-GREENSTEIN PHASE FUNCTION AT PHASE ANGLE.
!       TVIEW   TANGENT OF THE SURFACE VIEW ZENITH ANGLE.
!       TSOURC  TANGENT OF THE SURFACE SOURCE ZENITH ANGLE.
!       GEOFAC  GEOMETRY FACTOR.
!       TRANFN  INGOING/OUTGOING TRANSMISSION FUNCTION.
!       RCOALB  ROOT OF THE SURFACE PARTICLE SINGLE SCATTERING COALBEDO.
!       HS      MULTIPLE SCATTERING TERM AT SOURCE ANGLE.
!       HV      MULTIPLE SCATTERING TERM AT VIEW ANGLE.
      REAL PSI1,PSI2,KAPPAV,MUKAPV,MUKAPS,SVIEW,SSOURC,COSPHI,CPHASE,   &
     &  ASYMSQ,DENOM,HGPHAS,TVIEW,TSOURC,GEOFAC,TRANFN,RCOALB,HS,HV

!     SCATTERER ORIENTATION DISTRIBUTION FUNCTIONS: [J. GOUDRIAAN, "CROP
!     MICROMETEOROLOGY: A SIMULATION STUDY, REPORT," WAGENINGEN CENT.
!     FOR AGRIC. PUBL. AND DOC., WAGENINGEN, THE NETHERLANDS, 1977].
      PSI1=0.5-(0.6333+0.33*PARAMS(3))*PARAMS(3)
      PSI2=0.877-1.754*PSI1
      KAPPAV=PSI1+PSI2*CVIEW
      MUKAPV=CVIEW/KAPPAV
      MUKAPS=CSOURC/(PSI1+PSI2*CSOURC)

!     HENYEY-GREENSTEIN FUNCTION:
      SVIEW=SQRT(1-CVIEW**2)
      SSOURC=SQRT(1-CSOURC**2)
      COSPHI=COS(PHI)
      CPHASE=CVIEW*CSOURC+SVIEW*SSOURC*COSPHI
      ASYMSQ=PARAMS(2)**2
      DENOM=1.+2*PARAMS(2)*CPHASE+ASYMSQ
      HGPHAS=(1-ASYMSQ)/(DENOM*SQRT(DENOM))

!     INGOING/OUTGOING TRANSMISSION FUNCTION (INCLUDES HOT SPOT):
      TVIEW=SVIEW/CVIEW
      TSOURC=SSOURC/CSOURC
      GEOFAC=SQRT((TVIEW-TSOURC)**2+2*TVIEW*TSOURC*(1-COSPHI))
      TRANFN=1.+1./(1.+PVCONS*GEOFAC*MUKAPV/PARAMS(4))

!     MULTIPLE SCATTERING COMPONENTS:
      RCOALB=SQRT(1-PARAMS(1))
      HS=(1.+MUKAPS)/(1.+MUKAPS*RCOALB)
      HV=(1.+MUKAPV)/(1.+MUKAPV*RCOALB)

!     BRDF FUNCTIONS:
      REFPV=.25*PARAMS(1)*(HGPHAS*TRANFN+HS*HV-1.)/(CVIEW+KAPPAV*MUKAPS)
      RETURN
      END
