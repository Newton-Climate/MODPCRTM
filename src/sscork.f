      SUBROUTINE SSCORK(COLIN,IPH,ILOS,IK,IPATH,JNTRVL,VCEN,S0,         &
     &  PFMOL0,PFMOL2,SSAP,TX,TSNOBS,SUMSSS,RADCUM)

!     SSCORK PERFORMS THE SINGLE SCATTERING SOLAR/LUNAR RADIANCE LAYER
!     SUM WHEN THE CORRELATED-K APPROACH IS USED AND STORES TRANSMITTED
!     SOLAR/LUNAR IRRADIANCES FOR MULTIPLE SCATTERING CALCULATIONS.
      IMPLICIT NONE

!     PARAMETERS:
      INCLUDE 'PARAMS.h'

!     INPUT ARGUMENTS:
!       COLIN    IF TRUE TREAT LOS & SOLAR PATHS AS NEARLY IDENTICAL.
!       IPH      SCATTERING PHASE FUNCTION SWITCH.
!                =2 FOR LOWTRAN MIE FUNCTIONS
!       ILOS     INDEX FOR LINE-OF-SIGHT PATH.
!       IK       LAYER INDEX.
!       IPATH    PATH TYPE SWITCH.
!                =1 FOR DIRECT SUN TO OBSERVER PATH ONLY
!                =2 FOR SUN TO SCATTERING POINT PATH
!                =3 FOR OBSERVER TO SCATTERING POINT LINE-OF-SIGHT PATH
!       JNTRVL   NUMBER OF K-DISTRIBUTION INTERVALS FOR CURRENT FREQ.
!       VCEN     SPECTRAL BIN CENTRAL FREQUENCY [CM-1].
!       S0       EXTRA-TERRESTRIAL SOURCE FUNCTION [W/(CM2-MICRON)].
!       PFMOL0   MOLECULAR PHASE FUNCTION ISOTROPIC SCATTERING TERM.
!       PFMOL2   MOLECULAR PHASE FUNCTION ANISOTROPIC SCATTERING TERM.
!       SSAP     SCATTERING OPTICAL DEPTH OF SPECTRAL AEROSOL PROFILE.
      LOGICAL COLIN
      INTEGER IPH,ILOS,IK,IPATH,JNTRVL
      REAL VCEN,S0,PFMOL0,PFMOL2,SSAP,TX(MEXTXY)

!     OUTPUT ARGUMENTS:
!       TSNOBS   SOLAR/LUNAR IRRADIANCE AT THE OBSERVER [W CM-2 / CM-1].
!       SUMSSS   SINGLE SCATTER SOLAR RADIANCE SUM [W SR-1 CM-2 / CM-1].
!       RADCUM   CUMULATIVE PATH RADIANCE K-DATA [W SR-1 CM-2 / CM-1].
      REAL TSNOBS,SUMSSS,RADCUM(MXKSUB)

!     COMMONS:
      INCLUDE 'SNGSOL.h'

!     /CARD2A/
      INTEGER NCRALT,NCRSPC
      DOUBLE PRECISION CTHIK,CALT
      REAL CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,CWAVLN,CCOLWD,        &
     &  CCOLIP,CHUMID,ASYMWD,ASYMIP

!     /AER/ THERE ARE "MAER=17" PARTICULATE COMPONENTS:
!           1       AEROSOL 1 (NOMINALLY, BOUNDARY LAYER AEROSOL).
!           2       AEROSOL 2 (NOMINALLY, TROPOSPHERIC AEROSOL).
!           3       AEROSOL 3 (NOMINALLY, STRATOSPHERIC AEROSOL).
!           4       AEROSOL 4 (NOMINALLY, VOLCANIC AEROSOL).
!           5       CIRRUS CLOUD.
!           6       CLOUD 1 (NOMINALLY, WATER CLOUD).
!           7       CLOUD 2 (NOMINALLY, ICE CLOUD).
!           8-17    NOVAM (NAVY OCEANIC VERTICAL AEROSOL MODEL) LAYERS.
!       NAER     NUMBER OF ACTIVE AEROSOLS.
!       EXTV     SPECTRAL EXTINCTION (NORMALIZED TO 1 AT 550 NM).
!       ABSV     SPECTRAL ABSORPTION (1-ABSV/EXTV=SCATTERING ALBEDO).
!       ASYV     SPECTRAL LEGENDRE MOMENT (DIVIDED BY 2N+1).
!       FRAC5    5 CM-1 GRID SPECTRAL INTERPOLATION FRACTION.
!       ASYVLO   ASYMMETRY FACTOR FROM PREVIOUS SPECTRAL FREQUENCY.
      INTEGER NAER
      REAL EXTV,ABSV,ASYV,FRAC5,ASYVLO
      COMMON/AER/NAER,EXTV(MAER),ABSV(MAER),ASYV(MXCMU,MAER),           &
     &  FRAC5,ASYVLO(MAER)

!     /MSRD/
!       CSSCAT   COSINE OF THE SCATTERING ANGLE.
!                (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       SLEGEN   Nth LEGENDRE POLYNOMIAL EVALUATED AT THE COSINE OF THE
!                SCATTERING ANGLE TIMES (2N+1)/4pi (N=0 TO NSTR-1).
!       CSZEN0   LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.
!       CSZEN    LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.
!       CSZENX   AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING
!                (AWAY FROM EARTH) THE CURRENT LAYER.
!       BBGRND   THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].
!       BBNDRY   LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1].
!       TCONT    LAYER CONTINUUM OPTICAL DEPTH.
!       TAUT     LAYER TOTAL VERTICAL EXTINCTION OPTICAL DEPTH.
!       GTSCAT   SUM OVER SCATTERING SOURCES OF SCATTERING OPTICAL DEPTH
!                AND PHASE FUNCTION LEGENDRE COEFFICIENT PRODUCTS.
!       COSBAR   LAYER EFFECTIVE SCATTERING ASYMMETRY FACTOR.
!       DEPRAT   FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.
!       S0DEP    OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.
!       S0TRN    TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]
!       UPF      LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].
!       DNF      LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].
!       UPFS     LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].
!       DNFS     LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].
!       CO_LIN   TRUE IF LOS AND SOLAR PATHS ARE NEARLY IDENTICAL.
      REAL CSSCAT,SLEGEN,CSZEN0,CSZEN,CSZENX,TCONT,TAUT,GTSCAT,COSBAR,  &
     &  BBGRND,BBNDRY,S0DEP,S0TRN,DEPRAT,UPF,DNF,UPFS,DNFS
      LOGICAL CO_LIN
      COMMON/MSRD/CSSCAT(MLOS),SLEGEN(0:MAZ,MLOS),CSZEN0(LAYDIM),       &
     &  CSZEN(LAYDIM),CSZENX(LAYDIM),TCONT(LAYDIM),TAUT(MXKSUB,LAYDIM), &
     &  GTSCAT(0:MXCMU,1:LAYDIM),COSBAR(LAYDIM),BBGRND,BBNDRY(LAYDIM),  &
     &  S0DEP(MXKSUB,LAYTWO),S0TRN(MXKSUB,LAYTWO),DEPRAT(MXKSUB,LAYDIM),&
     &  UPF(MXKSUB,LAYDIM),DNF(MXKSUB,LAYDIM),UPFS(MXKSUB,LAYDIM),      &
     &  DNFS(MXKSUB,LAYDIM),CO_LIN(MLOS)

!     /CORKDT/
!       WTKSUB   SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       WTKSAV   SAVED SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.
!       DEPLAY   INCREMENTAL OPTICAL DEPTHS.
!       TRNLAY   INCREMENTAL TRANSMITTANCES.
!       TRNCUM   CUMULATIVE TRANSMITTANCES.
!       K2TAIL   POINTER FROM K BIN TO LINE TAIL SUB-BIN
!                (=0 IF MULTIPLE LINE TAIL SUB-BINS CONTRIBUTE).
!       CONTWT   WEIGHTS FOR PARTITIONING LINE TAILS INTO K'S
!                (ONLY USED IF K2TAIL IS 0).
      REAL WTKSUB(MXKSUB),WTKSAV(NTLSUB),DEPLAY(MXKSUB),                &
     &  TRNLAY(MXKSUB),TRNCUM(MXKSUB),CONTWT(NTLSUB,MXKSUB)
      INTEGER K2TAIL(MXKSUB)
      COMMON/CORKDT/K2TAIL,WTKSUB,WTKSAV,DEPLAY,TRNLAY,TRNCUM,CONTWT

!     /USRDTA/
      INTEGER NAERF,NWLF
      REAL WLF,F
      COMMON/USRDTA/NAERF,NWLF,WLF(MWLF),F(MAERF,MANGLS,MWLF)

!     /PATH/
!       PTHCOS   COSINE OF PATH ZENITH AT PATH BOUNDARIES.
!       PTHZEN   PATH ZENITH AT PATH BOUNDARIES [DEG].
!       PTHECA   SENSOR TO PATH EARTH CENTER ANGLE [DEG].
!       PTHALT   ALTITUDES AT PATH BOUNDARIES [KM].
!       PTH_MS   ALTITUDES AT PATH BOUNDARIES FOR THE MS PATH.
!       PTHSEG   PATH SEGMENT LENGTH [KM].
!       PTHRNG   SENSOR TO PATH BOUNDARY RANGE [KM].
!       JMAX     NUMBER OF DISTINCT LOS PATH SEGMENT ENDPOINT ALTITUDES.
!       IKHMIN   PATH BOUNDARY INDEX OF PATH MINIMUM ALTITUDE.
!       IKHMAX   PATH BOUNDARY INDEX OF PATH MAXIMUM ALTITUDE.
!       IKOUT    NUMBER OF PATH BOUNDARIES K DATA IS OUTPUT.
!       NTKDIS   RECORD NUMBER FOR K-DISTRIBUTION TRANSMITTANCE FILE.
!       NRKDIS   RECORD NUMBER FOR K-DISTRIBUTION RADIANCE FILE.
!       MAPPTH   MAPPING FROM PATH SEGMENT MIDPOINT TO VERTICAL LAYER.
!       IPTHHT   ALTITUDES (HEIGHTS) AT PATH BOUNDARIES [M].
!       LOWALT   VERTICAL LAYER BOUNDARY INDEX AT OR JUST BELOW PTHALT.
!       FACALT   ALTITUDE INTERPOLATION FRACTION FOR PTHALT
!       PATH_T   TEMPERATURE AT PATH BOUNDARIES [K].
!       PATH_P   PRESSURE AT PATH BOUNDARIES [ATM].
!       PTHRH    RELATIVE HUMIDITY AT PATH BOUNDARIES [K].
!       LSSGEO   LOGICAL FLAG, .TRUE. FOR SOLAR PATHS.
!       LTANMX   LOGICAL FLAG, .TRUE. IF PATH HAS A TANGENT MAXIMUM.
      DOUBLE PRECISION PTHCOS,PTHZEN,PTHECA,PTHALT,PTH_MS,PTHSEG,PTHRNG
      INTEGER JMAX,IKHMIN,IKHMAX,IKOUT,NTKDIS,NRKDIS,MAPPTH,            &
     &  IPTHHT,LOWALT
      REAL FACALT,PATH_T,PATH_P,PTHRH
      LOGICAL LSSGEO,LTANMX
      COMMON/PATH/PTHCOS(0:LAYTWO),PTHZEN(0:LAYTWO),PTHECA(0:LAYTWO),   &
     &  PTHALT(0:LAYTWO,1:MLOS),PTH_MS(0:LAYDIM),PTHSEG(LAYTWO),        &
     &  PTHRNG(0:LAYTWO,1:MLOS),JMAX,IKHMIN(MLOS),IKHMAX(MLOS),         &
     &  IKOUT(MLOS),MAPPTH(LAYTWO,1:MLOS),IPTHHT(0:LAYTWO),NTKDIS,      &
     &  NRKDIS,LOWALT(0:LAYTWO,1:MLOS),FACALT(0:LAYTWO,1:MLOS),         &
     &  PATH_T(0:LAYTWO,1:MLOS),PATH_P(0:LAYTWO,1:MLOS),                &
     &  PTHRH(0:LAYTWO,1:MLOS),LSSGEO,LTANMX

!     /CARD2/
!       IHAZE    BOUNDARY LAYER AEROSOL MODEL NUMBER.
!       ISEASN   SEASON NUMBER (1=SPRING-SUMMER, 2=FALL-WINTER).
!       IVULCN   VOLCANIC AEROSOL MODEL NUMBER.
!       ICSTL    COASTAL AIRMASS MODEL NUMBER.
!       ICLD     CLOUD MODEL NUMBER.
!       IVSA     VERTICAL STRUCTURE ALGORITHM (0=OFF, 1=ON).
!       VIS      SURFACE VISIBILITY (GROUND METEOROLOGICAL RANGE) [KM].
!       WSS      CURRENT WIND SPEED (M/S).
!       WHH      24-HOUR WIND SPEED (M/S).
!       RAINRT   RAIN RATE (MM/HR)
!       LSAP     LOGICAL FLAG FOR SPECTRAL AEROSOL PROFILES INPUT.
      INTEGER IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA
      REAL VIS,WSS,WHH,RAINRT
      LOGICAL LSAP
      COMMON/CARD2/IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,                 &
     &  VIS,WSS,WHH,RAINRT,LSAP

!     /ANGSRF/
!       CVWSRF  COSINE OF THE VIEW ZENITH ANGLE FROM THE SURFACE.
!       CSNSRF  COSINE OF THE SOLAR (LUNAR) ZENITH AT SURFACE.
!       AZMSRF  RELATIVE AZIMUTH ANGLE (SUN - SENSOR AT SURFACE) [RAD].
!       UMU1    COSINE OF THE PATH NADIR ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       UMU0    COSINE OF THE SOLAR ZENITH ANGLE.
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       PHI1    RELATIVE AZIMUTH ANGLE (SUN - LOS PATH AT SENSOR) [DEG].
!               (AT H1ALT IF IMULT=1; AT OR "NEAR" H2ALT IF IMULT=-1)
!       CMU     COSINE OF THE NADIR ANGLES USED IN DISORT.
      REAL CVWSRF,CSNSRF,AZMSRF,UMU1,UMU0,PHI1,CMU
      COMMON/ANGSRF/CVWSRF(MLOS),CSNSRF(MLOS),AZMSRF(MLOS),UMU1(MLOS),  &
     &  UMU0,PHI1(MLOS),CMU(MI)

!     FUNCTIONS:
!       GTPSAP   RETURNS SPECTRAL AEROSOL PROFILES PHASE FUNCTION [SR-1]
      REAL PHASEF,HENGNS,GTPSAP,EXPINT

!     LOCAL VARIABLES:
!       IANGLO   PHASE ANGLE LOWER INTERPOLATION INDEX FOR ANGF ARRAY.
!       IANGUP   PHASE ANGLE UPPER INTERPOLATION INDEX FOR ANGF ARRAY.
!       FANG     ANGF ARRAY INTERPOLATION FACTOR.
!       PFWGT    SUM OF SCAT OPTICAL DEPTH & PHASE FNC PRODUCTS [SR-1].
!       PF_COS   COSINE OF THE PHASE FUNCTION SCATTERING ANGLE.
!       PF_ANG   PHASE FUNCTION SCATTERING ANGLE [DEG].
      INTEGER INTRVL,IKP1,IANGLO,IANGUP
      REAL FANG,DELDEP,PNOV,STRNK,PFWGT,PF_COS,PF_ANG

!     SAVE CORRELATED-K COMMON:
      SAVE /CORKDT/

!     SAVE WAVELENGTH INTERPOLATION VARIABLES USED WITH IPH=1:
      INTEGER IWLFM1,IWLF
      REAL WAVFAC
      SAVE IWLFM1,IWLF,WAVFAC

!     SAVED PHASE FUNCTION VARIABLES:
!       PSAPF    FRONT SPECTRAL AEROSOL PROFILES PHASE FUNCTION [SR-1].
!       PSAPB    BACK SPECTRAL AEROSOL PROFILES PHASE FUNCTION [SR-1].
      REAL PMOLB,PMOLF,PAERB(4),PAERF(4),                               &
     &  PCIRB,PCIRF,PCLDB,PCLDF,PICEB,PICEF,PRAINB,PRAINF,PSAPB,PSAPF
      DATA PSAPB,PSAPF/2*0./
      SAVE PMOLB,PMOLF,PAERB,PAERF,                                     &
     &  PCIRB,PCIRF,PCLDB,PCLDF,PICEB,PICEF,PRAINB,PRAINF,PSAPB,PSAPF

!     BRANCH TO PATH TYPE
      GOTO (10,30,40),IPATH

!     IPATH=1 (DIRECT SUN TO OBSERVER PATH).
   10 CONTINUE

!     STORE SUN/MOON TO OBSERVER OPTICAL
!     DEPTHS AND TRANSMITTED IRRADIANCES.
      IF(COLIN)THEN
          DO INTRVL=1,JNTRVL
              S0DEP(INTRVL,1)=0.
              S0TRN(INTRVL,1)=S0
          ENDDO
          TSNOBS=S0
      ELSE
          TSNOBS=0.
          DO INTRVL=1,JNTRVL
              S0DEP(INTRVL,1)=DEPLAY(INTRVL)
              S0TRN(INTRVL,1)=S0*TRNLAY(INTRVL)
              TSNOBS=TSNOBS+WTKSUB(INTRVL)*S0TRN(INTRVL,1)
          ENDDO
      ENDIF

!     FOR MULTIPLE SCATTERING PATH, RETURN AFTER
!     DEFINING TRANSMITTED SOLAR/LUNAR IRRADIANCES.
      IF(ILOS.EQ.MLOSP1)RETURN

!     INITIALIZE THE SOLAR/LUNAR SINGLE SCATTERING RADIANCE LAYER SUM.
      SUMSSS=0.

!     STORE RAYLEIGH (PMOLB), FOUR AEROSOL (PAERB), CIRRUS (PCIRB),
!     CLOUD WATER DROPLET (PCLDB) AND CLOUD ICE PARTICLE (PICEB)
!     PHASE FUNCTIONS AT THE OBSERVER.
      PF_COS=PHSCOS(0,ILOS)
      PMOLB=PFMOL0+PFMOL2*PF_COS**2
      IF(IPH.EQ.0)THEN

!         HENYEY-GREENSTEIN:
          PAERB(1)=PF_HG(0,ILOS)
          PAERB(2)=PAERB(1)
          PAERB(3)=PAERB(1)
          PAERB(4)=PAERB(1)
          PCIRB=PAERB(1)
      ELSEIF(IPH.EQ.1)THEN

!         /USRDTA/ USER-SUPPLIED PHASE FUNCTION; FETCH ANGLE INDICES:
          WAVFAC=10000/(VCEN+1.E-5)
          IWLFM1=1
          IF(WAVFAC.LE.WLF(1))THEN
              IWLF=1
              WAVFAC=0.
          ELSE
              DO IWLF=2,NWLF
                  IF(WAVFAC.LT.WLF(IWLF))THEN
                      WAVFAC=(WLF(IWLF)-WAVFAC)/(WLF(IWLF)-WLF(IWLFM1))
                      GOTO 20
                  ENDIF
                  IWLFM1=IWLF
              ENDDO
              IWLF=NWLF
              WAVFAC=0.
   20         CONTINUE
          ENDIF
          IANGUP=IUPPHS(0,ILOS)
          IANGLO=IANGUP-1
          FANG=PHSFAC(0,ILOS)
          PAERB(1)=EXPINT(F(1,IANGLO,IWLF),F(1,IANGUP,IWLF),FANG)
          PAERB(2)=EXPINT(F(2,IANGLO,IWLF),F(2,IANGUP,IWLF),FANG)
          PAERB(3)=EXPINT(F(3,IANGLO,IWLF),F(3,IANGUP,IWLF),FANG)
          PAERB(4)=EXPINT(F(4,IANGLO,IWLF),F(4,IANGUP,IWLF),FANG)
          IF(IWLFM1.NE.IWLF)THEN
              PAERB(1)=PAERB(1)+WAVFAC*(EXPINT(F(1,IANGLO,IWLFM1),      &
     &          F(1,IANGUP,IWLFM1),FANG)-PAERB(1))
              PAERB(2)=PAERB(2)+WAVFAC*(EXPINT(F(2,IANGLO,IWLFM1),      &
     &          F(2,IANGUP,IWLFM1),FANG)-PAERB(2))
              PAERB(3)=PAERB(3)+WAVFAC*(EXPINT(F(3,IANGLO,IWLFM1),      &
     &          F(3,IANGUP,IWLFM1),FANG)-PAERB(3))
              PAERB(4)=PAERB(4)+WAVFAC*(EXPINT(F(4,IANGLO,IWLFM1),      &
     &          F(4,IANGUP,IWLFM1),FANG)-PAERB(4))
          ENDIF
          PCIRB=HENGNS(ASYV(1,5),PF_COS)
          IF(ABS(FRAC5).GT..001)                                        &
     &      PCIRB=PCIRB+FRAC5*(HENGNS(ASYVLO(5),PF_COS)-PCIRB)
      ELSEIF(IPH.EQ.2)THEN

!         MIE DATA-BASE:
          PF_ANG=PHSANG(0,ILOS)
          PAERB(1)=PHASEF(1,VCEN,PTHALT(0,ILOS),PF_ANG,PTHRH(0,ILOS))
          PAERB(2)=PHASEF(2,VCEN,PTHALT(0,ILOS),PF_ANG,PTHRH(0,ILOS))
          PAERB(3)=PHASEF(3,VCEN,PTHALT(0,ILOS),PF_ANG,PTHRH(0,ILOS))
          PAERB(4)=PHASEF(4,VCEN,PTHALT(0,ILOS),PF_ANG,PTHRH(0,ILOS))
          PCIRB=HENGNS(ASYV(1,5),PF_COS)
          IF(ABS(FRAC5).GT..001)                                        &
     &      PCIRB=PCIRB+FRAC5*(HENGNS(ASYVLO(5),PF_COS)-PCIRB)
      ENDIF
      IF(NCRSPC.EQ.1)THEN

!         ANGULAR INTERPOLATE TABULATED SCATTERING PHASE FUNCTIONS:
          CALL GETPF(PF_COS,PCLDB,PICEB)
      ELSE
          IF(ABS(ASYMWD).GE.1.)THEN

!             SPECTRAL WATER DROPLET SCATTERING PHASE FUNCTION:
              PCLDB=HENGNS(ASYV(1,6),PF_COS)
              IF(ABS(FRAC5).GT..001)                                    &
     &          PCLDB=PCLDB+FRAC5*(HENGNS(ASYVLO(6),PF_COS)-PCLDB)
          ELSE

!             SPECTRALLY INDEPENDENT WATER DROPLET PHASE FUNCTION:
              PCLDB=PF_WAT(0,ILOS)
          ENDIF
          IF(ABS(ASYMIP).GE.1.)THEN

!             SPECTRALLY VARYING ICE PARTICLE SCATTERING PHASE FUNCTION:
              PICEB=HENGNS(ASYV(1,7),PF_COS)
              IF(ABS(FRAC5).GT..001)                                    &
     &          PICEB=PICEB+FRAC5*(HENGNS(ASYVLO(7),PF_COS)-PICEB)
          ELSE

!             SPECTRALLY INDEPENDENT ICE PARTICLE PHASE FUNCTION:
              PICEB=PF_ICE(0,ILOS)
          ENDIF
      ENDIF
      PRAINB=HENGNS(TX(79),PF_COS)

!     SPECTRAL AEROSOL PROFILES (SAP) PHASE FUNCTIONS:
      IF(LSAP)PSAPB=GTPSAP(VCEN,1)
      RETURN

!     IPATH=2 (SUN TO SCATTERING POINT PATH).
!     TRANSLATE PREVIOUS SOLAR/LUNAR OPTICAL DEPTHS TO
!     FRONT AND STORE CURRENT VALUES IN BACK.  CALCULATE
!     SOLAR/LUNAR IRRADIANCE TRANSMITTED TO SCATTERING POINT.
   30 CONTINUE
      IKP1=IK+1
      IF(.NOT.COLIN)THEN
          DO INTRVL=1,JNTRVL
              S0DEP(INTRVL,IKP1)=DEPLAY(INTRVL)
              S0TRN(INTRVL,IKP1)=S0*TRNLAY(INTRVL)
          ENDDO
      ENDIF

!     FOR MULTIPLE SCATTERING PATH, RETURN AFTER
!     DEFINING TRANSMITTED SOLAR/LUNAR IRRADIANCES.
      IF(ILOS.EQ.MLOSP1)RETURN

!     STORE RAYLEIGH (PMOLB), FOUR AEROSOL (PAERB), CIRRUS (PCIRB),
!     CLOUD WATER DROPLET (PCLDB) AND CLOUD ICE PARTICLE (PICEB)
!     PHASE FUNCTIONS AT THE CURRENT (FRONT-SIDE) AND PREVIOUS
!     (BACK-SIDE) SCATTERING POINT.
      PMOLF=PMOLB
      PAERF(1)=PAERB(1)
      PAERF(2)=PAERB(2)
      PAERF(3)=PAERB(3)
      PAERF(4)=PAERB(4)
      PCIRF=PCIRB
      PCLDF=PCLDB
      PICEF=PICEB
      PRAINF=PRAINB
      PSAPF=PSAPB
      PF_COS=PHSCOS(IK,ILOS)
      PMOLB=PFMOL0+PFMOL2*PF_COS**2
      IF(IPH.EQ.0)THEN
          PAERB(1)=PF_HG(IK,ILOS)
          PAERB(2)=PAERB(1)
          PAERB(3)=PAERB(1)
          PAERB(4)=PAERB(1)
          PCIRB=PAERB(1)
      ELSEIF(IPH.EQ.1)THEN

!         USER-SUPPLIED F-FUNCTION (SEE COMMON BLOCK USRDTA)
          IANGUP=IUPPHS(IK,ILOS)
          IANGLO=IANGUP-1
          FANG=PHSFAC(IK,ILOS)
          PAERB(1)=EXPINT(F(1,IANGLO,IWLF),F(1,IANGUP,IWLF),FANG)
          PAERB(2)=EXPINT(F(2,IANGLO,IWLF),F(2,IANGUP,IWLF),FANG)
          PAERB(3)=EXPINT(F(3,IANGLO,IWLF),F(3,IANGUP,IWLF),FANG)
          PAERB(4)=EXPINT(F(4,IANGLO,IWLF),F(4,IANGUP,IWLF),FANG)
          IF(IWLFM1.NE.IWLF)THEN
              PAERB(1)=PAERB(1)+WAVFAC*(EXPINT(F(1,IANGLO,IWLFM1),      &
     &          F(1,IANGUP,IWLFM1),FANG)-PAERB(1))
              PAERB(2)=PAERB(2)+WAVFAC*(EXPINT(F(2,IANGLO,IWLFM1),      &
     &          F(2,IANGUP,IWLFM1),FANG)-PAERB(2))
              PAERB(3)=PAERB(3)+WAVFAC*(EXPINT(F(3,IANGLO,IWLFM1),      &
     &          F(3,IANGUP,IWLFM1),FANG)-PAERB(3))
              PAERB(4)=PAERB(4)+WAVFAC*(EXPINT(F(4,IANGLO,IWLFM1),      &
     &          F(4,IANGUP,IWLFM1),FANG)-PAERB(4))
          ENDIF
          PCIRB=HENGNS(ASYV(1,5),PF_COS)
          IF(ABS(FRAC5).GT..001)                                        &
     &      PCIRB=PCIRB+FRAC5*(HENGNS(ASYVLO(5),PF_COS)-PCIRB)
      ELSEIF(IPH.EQ.2)THEN
          PF_ANG=PHSANG(IK,ILOS)
          PAERB(1)=PHASEF(1,VCEN,PTHALT(IK,ILOS),PF_ANG,PTHRH(IK,ILOS))
          PAERB(2)=PHASEF(2,VCEN,PTHALT(IK,ILOS),PF_ANG,PTHRH(IK,ILOS))
          PAERB(3)=PHASEF(3,VCEN,PTHALT(IK,ILOS),PF_ANG,PTHRH(IK,ILOS))
          PAERB(4)=PHASEF(4,VCEN,PTHALT(IK,ILOS),PF_ANG,PTHRH(IK,ILOS))
          PCIRB=HENGNS(ASYV(1,5),PF_COS)
          IF(ABS(FRAC5).GT..001)                                        &
     &      PCIRB=PCIRB+FRAC5*(HENGNS(ASYVLO(5),PF_COS)-PCIRB)
      ENDIF
      IF(NCRSPC.EQ.1)THEN

!         ANGULAR INTERPOLATE TABULATED SCATTERING PHASE FUNCTIONS:
          CALL GETPF(PF_COS,PCLDB,PICEB)
      ELSE
          IF(ABS(ASYMWD).GE.1.)THEN

!             SPECTRALLY VARYING WATER DROPLET SCATTERING PHASE FUNCTION
              PCLDB=HENGNS(ASYV(1,6),PF_COS)
              IF(ABS(FRAC5).GT..001)                                    &
     &          PCLDB=PCLDB+FRAC5*(HENGNS(ASYVLO(6),PF_COS)-PCLDB)
          ELSE

!             SPECTRALLY INDEPENDENT WATER DROPLET PHASE FUNCTION
              PCLDB=PF_WAT(IK,ILOS)
          ENDIF
          IF(ABS(ASYMIP).GE.1.)THEN

!             SPECTRALLY VARYING ICE PARTICLE SCATTERING PHASE FUNCTION
              PICEB=HENGNS(ASYV(1,7),PF_COS)
              IF(ABS(FRAC5).GT..001)                                    &
     &          PICEB=PICEB+FRAC5*(HENGNS(ASYVLO(7),PF_COS)-PICEB)
          ELSE

!             SPECTRALLY INDEPENDENT ICE PARTICLE PHASE FUNCTION
              PICEB=PF_ICE(IK,ILOS)
          ENDIF
      ENDIF
      PRAINB=HENGNS(TX(79),PF_COS)

!     SPECTRAL AEROSOL PROFILES (SAP) PHASE FUNCTIONS:
      IF(LSAP)PSAPB=GTPSAP(VCEN,IKP1)
      RETURN

!     IPATH=3 (OBSERVER TO SCATTERING POINT).
   40 CONTINUE

!     FOR NOVAM AEROSOLS, THE ASYMMETRY FACTOR IS A FUNCTION OF
!     BOTH WAVELENGTH AND ALTITUDE.  CALCULATE THE SCATTERING
!     PHASE FUNCTION FOR THE LAYER AVERAGE SCATTERING ANGLE COSINE.
      IKP1=IK+1
      IF(TX(72).LE.0.)THEN
          PNOV=0.
      ELSE
          PNOV=TX(72)                                                   &
     &      *HENGNS(TX(73),(PHSCOS(IK-1,ILOS)+PHSCOS(IK,ILOS))/2)
      ENDIF

!     COMBINE SCATTERING PHASE FUNCTION CONTRIBUTIONS:
      PFWGT=(TX(68)*(PAERB(1)+PAERF(1))+TX(69)*(PAERB(2)+PAERF(2))      &
     &      +TX(70)*(PAERB(3)+PAERF(3))+TX(71)*(PAERB(4)+PAERF(4))      &
     &      +TX(15)*(PMOLB   +PMOLF   )+TX(74)*(PCIRB   +PCIRF)         &
     &      +TX(66)*(PCLDB   +PCLDF   )+TX(67)*(PICEB   +PICEF)         &
     &      +TX(77)*(PRAINB  +PRAINF  )+  SSAP*(PSAPB   +PSAPF))/2+PNOV

      IF(COLIN)THEN
!          LOS AND SOLAR PATH ARE NEARLY IDENTICAL, DEFINE SOLAR PATH
!          DEPTHS AND TRANSMITTANCES FROM LOS DATA:
          DO INTRVL=1,JNTRVL

!             SOLAR PATH LAYER DEPTH:
              DELDEP=DEPLAY(INTRVL)*UMU1(ILOS)/UMU0
              S0TRN(INTRVL,IKP1)=S0TRN(INTRVL,IK)*EXP(-DELDEP)

!             SOLAR PATH + LOS PATH LAYER DEPTH:
              DELDEP=DELDEP+DEPLAY(INTRVL)
              STRNK=TRNLAY(INTRVL)*S0TRN(INTRVL,IKP1)
              IF(ABS(DELDEP).LT..001)THEN
                  STRNK=(S0TRN(INTRVL,IK)+STRNK)/2
              ELSE
                  STRNK=(S0TRN(INTRVL,IK)-STRNK)/DELDEP
              ENDIF
              STRNK=TRNCUM(INTRVL)*PFWGT*STRNK

!             SUM THE SOLAR/LUNAR SINGLE SCATTER RADIANCE CONTRIBUTIONS.
              RADCUM(INTRVL)=RADCUM(INTRVL)+STRNK
              SUMSSS=SUMSSS+WTKSUB(INTRVL)*STRNK
          ENDDO
      ELSE

!         LOOP OVER K-DISTRIBUTION SUB-INTERVALS CALCULATING THE AVERAGE
!         L-PATH TRANSMITTED SOLAR/LUNAR IRRADIANCE THROUGH THE LAYER.
          DO INTRVL=1,JNTRVL

!             STRNK IS THE AVERAGE K SUB-INTERVAL L-PATH TRANSMITTANCE
!             THROUGH THE LAYER STARTING FROM THE FRONT OF THE LAYER.

!                              1                                 Z
!                              /  /TRNLAY(INTRVL)  S0TRN(.,IKP1)\
!         STRNK = S0TRN(.,IK)  |  |----------------------------- |    dZ
!                              /  \         S0TRN(.,IK)         /
!                              0
              DELDEP=DEPLAY(INTRVL)+S0DEP(INTRVL,IKP1)-S0DEP(INTRVL,IK)
              STRNK=TRNLAY(INTRVL)*S0TRN(INTRVL,IKP1)
              IF(ABS(DELDEP).LT..001)THEN
                  STRNK=(S0TRN(INTRVL,IK)+STRNK)/2
              ELSE
                  STRNK=(S0TRN(INTRVL,IK)-STRNK)/DELDEP
              ENDIF
              STRNK=TRNCUM(INTRVL)*PFWGT*STRNK

!             SUM THE SOLAR/LUNAR SINGLE SCATTER RADIANCE CONTRIBUTIONS.
              RADCUM(INTRVL)=RADCUM(INTRVL)+STRNK
              SUMSSS=SUMSSS+WTKSUB(INTRVL)*STRNK
          ENDDO
      ENDIF

!     RETURN TO LOOP:
      RETURN
      END
